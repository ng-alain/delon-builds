{"version":3,"file":"acl.js.map","sources":["ng://@delon/acl/src/acl.service.ts","ng://@delon/acl/src/acl.directive.ts","ng://@delon/acl/src/acl.config.ts","ng://@delon/acl/src/acl-guard.ts","ng://@delon/acl/src/acl.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ACLType, ACLCanType } from './acl.type';\n\n/**\n * è®¿é®æ§å¶æå¡\n */\n@Injectable()\nexport class ACLService {\n  private roles: string[] = [];\n  private abilities: (number | string)[] = [];\n  private full = false;\n  private aclChange: BehaviorSubject<ACLType | boolean> = new BehaviorSubject<\n    ACLType | boolean\n  >(null);\n\n  /** ACLåæ´éç¥ */\n  get change(): Observable<ACLType | boolean> {\n    return this.aclChange.asObservable();\n  }\n\n  /** è·åæææ°æ® */\n  get data() {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities,\n    };\n  }\n\n  private parseACLType(val: string | string[] | ACLType): ACLType {\n    if (typeof val !== 'string' && !Array.isArray(val)) {\n      return <ACLType>val;\n    }\n    if (Array.isArray(val)) {\n      return <ACLType>{ role: <string[]>val };\n    }\n    return <ACLType>{\n      role: [val],\n    };\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ææéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  set(value: ACLType) {\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * æ è¯å½åç¨æ·ä¸ºå¨éï¼å³ä¸åé\n   */\n  setFull(val: boolean) {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·æéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  setAbility(abilities: (number | string)[]) {\n    this.set(<ACLType>{ ability: abilities });\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ï¼ä¼åæ¸é¤ææï¼\n   */\n  setRole(roles: string[]) {\n    this.set(<ACLType>{ role: roles });\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·å¢å è§è²ææéè½å\n   */\n  add(value: ACLType) {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå è§è²\n   */\n  attachRole(roles: string[]) {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå æé\n   */\n  attachAbility(abilities: (number | string)[]) {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤è§è²\n   */\n  removeRole(roles: string[]) {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤æé\n   */\n  removeAbility(abilities: (number | string)[]) {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºè§è²ï¼å¶å® `number` è¡¨ç¤ºAbility\n   *\n   * - å½ `full: true` æåæ° `null` æ¶è¿å `true`\n   * - è¥ä½¿ç¨ `ACLType` åæ°ï¼å¯ä»¥æå® `mode` æ ¡éªæ¨¡å¼\n   */\n  can(roleOrAbility: ACLCanType): boolean {\n    if (this.full === true || !roleOrAbility) {\n      return true;\n    }\n\n    let t: ACLType = {};\n    if (typeof roleOrAbility === 'number') {\n      t = { ability: [roleOrAbility] };\n    } else if (\n      Array.isArray(roleOrAbility) &&\n      roleOrAbility.length > 0 &&\n      typeof roleOrAbility[0] === 'number'\n    ) {\n      t = { ability: roleOrAbility };\n    } else {\n      t = this.parseACLType(roleOrAbility);\n    }\n\n    if (t.role) {\n      if (t.mode === 'allOf') return t.role.every(v => this.roles.includes(v));\n      else return t.role.some(v => this.roles.includes(v));\n    }\n    if (t.ability) {\n      if (t.mode === 'allOf')\n        return (t.ability as any[]).every(v => this.abilities.includes(v));\n      else return (t.ability as any[]).some(v => this.abilities.includes(v));\n    }\n    return false;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (\n      typeof value === 'number' ||\n      typeof value === 'string' ||\n      Array.isArray(value)\n    ) {\n      value = <ACLType>{ ability: Array.isArray(value) ? value : [value] };\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºæéç¹\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[acl]',\n})\nexport class ACLDirective implements OnDestroy {\n  private _value: any;\n  private change$: Subscription;\n\n  @Input('acl')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  @Input('acl-ability')\n  set ability(value: ACLCanType) {\n    this.set(this.srv.parseAbility(value));\n  }\n\n  private set(value: ACLCanType) {\n    const CLS = 'acl__hide';\n    const el = this.el.nativeElement;\n    if (this.srv.can(value)) {\n      this.renderer.removeClass(el, CLS);\n    } else {\n      this.renderer.addClass(el, CLS);\n    }\n    this._value = value;\n  }\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private srv: ACLService,\n  ) {\n    this.change$ = <any>this.srv.change.subscribe(() => this.set(this._value));\n  }\n\n  ngOnDestroy(): void {\n    this.change$.unsubscribe();\n  }\n}\n","export class DelonACLConfig {\n  /**\n   * è·¯ç±å®å«å¤±è´¥åè·³è½¬ï¼é»è®¤ï¼`/403`\n   */\n  guard_url? = '/403';\n}\n","import {\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  ActivatedRouteSnapshot,\n  Route,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\nimport { DelonACLConfig } from './acl.config';\n\n@Injectable()\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(\n    private srv: ACLService,\n    private router: Router,\n    private options: DelonACLConfig,\n  ) {}\n\n  private process(\n    guard: ACLCanType | Observable<ACLCanType>,\n  ): Observable<boolean> {\n    return (guard && guard instanceof Observable\n      ? guard\n      : of(\n          typeof guard !== 'undefined' && guard !== null\n            ? (guard as ACLCanType)\n            : null,\n        )\n    ).pipe(\n      map(v => this.srv.can(v)),\n      tap(v => {\n        if (v) return;\n        this.router.navigateByUrl(this.options.guard_url);\n      }),\n    );\n  }\n\n  // lazy loading\n  canLoad(route: Route): Observable<boolean> {\n    return this.process((route.data && route.data.guard) || null);\n  }\n  // all children route\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> {\n    return this.canActivate(childRoute, state);\n  }\n  // route\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> {\n    return this.process((route.data && route.data.guard) || null);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DelonACLConfig } from './acl.config';\nimport { ACLGuard } from './acl-guard';\nimport { ACLService } from './acl.service';\nimport { ACLDirective } from './acl.directive';\n\nconst SERVICES = [ACLService, ACLGuard];\nconst COMPONENTS = [ACLDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class DelonACLModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonACLModule,\n      providers: [DelonACLConfig, ...SERVICES],\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
