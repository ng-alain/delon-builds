{"version":3,"file":"acl.js","sources":["ng://@delon/acl/src/acl.config.ts","ng://@delon/acl/src/acl.service.ts","ng://@delon/acl/src/acl-if.directive.ts","ng://@delon/acl/src/acl.directive.ts","ng://@delon/acl/src/acl.type.ts","ng://@delon/acl/src/acl-guard.ts","ng://@delon/acl/src/acl.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ACLCanType, ACLType } from './acl.type';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonACLConfig {\n  /**\n   * Router URL when guard fail, default: `/403`\n   */\n  guard_url?: string = '/403';\n\n  /**\n   * `can` before execution callback\n   */\n  preCan?: ((roleOrAbility: ACLCanType) => ACLType | null) | null;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { DelonACLConfig } from './acl.config';\nimport { ACLCanType, ACLType } from './acl.type';\n\n/**\n * ACL æ§å¶æå¡ï¼[å¨çº¿ææ¡£](https://ng-alain.com/acl)\n *\n * å¡å¿å¨æ ¹ç®å½æ³¨å `DelonACLModule.forRoot()` æè½ä½¿ç¨æå¡\n */\n@Injectable()\nexport class ACLService {\n  private roles: string[] = [];\n  private abilities: Array<number | string> = [];\n  private full = false;\n  private aclChange = new BehaviorSubject<ACLType | boolean | null>(null);\n\n  /** ACLåæ´éç¥ */\n  get change(): Observable<ACLType | boolean | null> {\n    return this.aclChange.asObservable();\n  }\n\n  /** è·åæææ°æ® */\n  get data() {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities,\n    };\n  }\n\n  constructor(private options: DelonACLConfig) { }\n\n  private parseACLType(val: string | string[] | number | number[] | ACLType | null): ACLType {\n    let t: ACLType;\n    if (typeof val === 'number') {\n      t = { ability: [val] };\n    } else if (Array.isArray(val) && val.length > 0 && typeof val[0] === 'number') {\n      t = { ability: val };\n    } else if (typeof val === 'object' && !Array.isArray(val)) {\n      t = { ...val };\n    } else if (Array.isArray(val)) {\n      t = { role: val as string[] };\n    } else {\n      t = { role: val == null ? [] : [val] };\n    }\n\n    return { except: false, ...t };\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ææéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  set(value: ACLType) {\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * æ è¯å½åç¨æ·ä¸ºå¨éï¼å³ä¸åé\n   */\n  setFull(val: boolean) {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·æéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  setAbility(abilities: Array<number | string>) {\n    this.set({ ability: abilities } as ACLType);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ï¼ä¼åæ¸é¤ææï¼\n   */\n  setRole(roles: string[]) {\n    this.set({ role: roles } as ACLType);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·å¢å è§è²ææéè½å\n   */\n  add(value: ACLType) {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå è§è²\n   */\n  attachRole(roles: string[]) {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå æé\n   */\n  attachAbility(abilities: Array<number | string>) {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤è§è²\n   */\n  removeRole(roles: string[]) {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤æé\n   */\n  removeAbility(abilities: Array<number | string>) {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºè§è²ï¼å¶å® `number` è¡¨ç¤ºAbility\n   *\n   * - å½ `full: true` æåæ° `null` æ¶è¿å `true`\n   * - è¥ä½¿ç¨ `ACLType` åæ°ï¼å¯ä»¥æå® `mode` æ ¡éªæ¨¡å¼\n   */\n  can(roleOrAbility: ACLCanType | null): boolean {\n    const { preCan } = this.options;\n    if (preCan) {\n      roleOrAbility = preCan(roleOrAbility!);\n    }\n\n    const t = this.parseACLType(roleOrAbility);\n    let result = false;\n    if (this.full === true || !roleOrAbility) {\n      result = true;\n    } else {\n      if (t.role && t.role.length > 0) {\n        if (t.mode === 'allOf') {\n          result = t.role.every(v => this.roles.includes(v));\n        } else {\n          result = t.role.some(v => this.roles.includes(v));\n        }\n      }\n      if (t.ability && t.ability.length > 0) {\n        if (t.mode === 'allOf') {\n          result = (t.ability as any[]).every(v => this.abilities.includes(v));\n        } else {\n          result = (t.ability as any[]).some(v => this.abilities.includes(v));\n        }\n      }\n    }\n\n    return t.except === true ? !result : result;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (typeof value === 'number' || typeof value === 'string' || Array.isArray(value)) {\n      value = { ability: Array.isArray(value) ? value : [value] } as ACLType;\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºæéç¹\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { InputBoolean } from '@delon/util';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[aclIf]',\n  exportAs: 'aclIf',\n})\nexport class ACLIfDirective implements OnDestroy {\n  private _value: ACLCanType;\n  private _change$: Subscription;\n  private _thenTemplateRef: TemplateRef<void> | null = null;\n  private _elseTemplateRef: TemplateRef<void> | null = null;\n  private _thenViewRef: EmbeddedViewRef<void> | null = null;\n  private _elseViewRef: EmbeddedViewRef<void> | null = null;\n\n  constructor(templateRef: TemplateRef<void>, private srv: ACLService, private _viewContainer: ViewContainerRef) {\n    this._change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this._updateView());\n    this._thenTemplateRef = templateRef;\n  }\n\n  @Input()\n  set aclIf(value: ACLCanType) {\n    this._value = value;\n    this._updateView();\n  }\n\n  @Input()\n  set aclIfThen(templateRef: TemplateRef<void> | null) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;\n    this._updateView();\n  }\n\n  @Input()\n  set aclIfElse(templateRef: TemplateRef<void> | null) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;\n    this._updateView();\n  }\n\n  @Input() @InputBoolean() except = false;\n\n  protected _updateView(): void {\n    const res = this.srv.can(this._value);\n    if ((res && !this.except) || (!res && this.except)) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._change$.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[acl]',\n  exportAs: 'acl',\n})\nexport class ACLDirective implements OnDestroy {\n  private _value: ACLCanType;\n  private change$: Subscription;\n\n  @Input('acl')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  @Input('acl-ability')\n  set ability(value: ACLCanType) {\n    this.set(this.srv.parseAbility(value));\n  }\n\n  private set(value: ACLCanType) {\n    this._value = value;\n    const CLS = 'acl__hide';\n    const el = this.el.nativeElement;\n    if (this.srv.can(this._value)) {\n      this.renderer.removeClass(el, CLS);\n    } else {\n      this.renderer.addClass(el, CLS);\n    }\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, protected srv: ACLService) {\n    this.change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this.set(this._value));\n  }\n\n  ngOnDestroy(): void {\n    this.change$.unsubscribe();\n  }\n}\n","export interface ACLType {\n  /**\n   * è§è²\n   */\n  role?: string[];\n  /**\n   * æéç¹\n   */\n  ability?: number[] | string[];\n\n  /**\n   * æ ¡éªæ¨¡å¼ï¼é»è®¤ï¼`oneOf`\n   * - `allOf` è¡¨ç¤ºå¿é¡»æ»¡è¶³ææè§è²ææéç¹æ°ç»ç®ææ\n   * - `oneOf` è¡¨ç¤ºåªé¡»æ»¡è¶³è§è²ææéç¹æ°ç»ä¸­çä¸é¡¹ç®ææ\n   */\n  mode?: 'allOf' | 'oneOf';\n\n  /**\n   * æ¯å¦ååï¼å³ç»æä¸º `true` æ¶è¡¨ç¤ºæªææ\n   */\n  except?: boolean;\n\n  [key: string]: any;\n}\n\nexport type ACLCanType = number | number[] | string | string[] | ACLType;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Route, Router, RouterStateSnapshot, Data } from '@angular/router';\nimport { of, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { DelonACLConfig } from './acl.config';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n/**\n * Routing guard prevent unauthorized users visit the page, [ACL Document](https://ng-alain.com/acl).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ ACLGuard ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private srv: ACLService, private router: Router, private options: DelonACLConfig) { }\n\n  private process(data: Data): Observable<boolean> {\n    data = {\n      guard: null,\n      guard_url: this.options.guard_url,\n      ...data,\n    };\n    const guard: ACLCanType | Observable<ACLCanType> = data.guard;\n    return (guard && guard instanceof Observable ? guard : of(guard != null ? (guard as ACLCanType) : null)).pipe(\n      map(v => this.srv.can(v)),\n      tap(v => {\n        if (v) return;\n        this.router.navigateByUrl(data.guard_url);\n      }),\n    );\n  }\n\n  // lazy loading\n  canLoad(route: Route): Observable<boolean> {\n    return this.process(route.data!);\n  }\n  // all children route\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.canActivate(childRoute, state);\n  }\n  // route\n  canActivate(route: ActivatedRouteSnapshot, _state: RouterStateSnapshot | null): Observable<boolean> {\n    return this.process(route.data);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { ACLIfDirective } from './acl-if.directive';\nimport { ACLDirective } from './acl.directive';\nimport { ACLService } from './acl.service';\n\nconst COMPONENTS = [ACLDirective, ACLIfDirective];\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class DelonACLModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonACLModule,\n      providers: [ACLService],\n    };\n  }\n}\n"],"names":["tslib_1.__values","tslib_1.__decorate"],"mappings":"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"}