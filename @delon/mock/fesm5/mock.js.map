{"version":3,"file":"mock.js.map","sources":["ng://@delon/mock/src/status.error.ts","ng://@delon/mock/src/mock.config.ts","ng://@delon/mock/src/mock.service.ts","ng://@delon/mock/src/mock.interceptor.ts","ng://@delon/mock/src/mock.module.ts"],"sourcesContent":["export class MockStatusError {\n  statusText: string;\n  constructor(public status: number, public error?: any) {}\n}\n","export class DelonMockConfig {\n  /** è§åå®ä¹æ°æ® */\n  data: any;\n  /** è¯·æ±å»¶è¿ï¼åä½ï¼æ¯«ç§ï¼é»è®¤ï¼`300` */\n  delay? = 300;\n  /** æ¯å¦å¼ºå¶ææè¯·æ±é½Mockï¼`true` è¡¨ç¤ºå½è¯·æ±çURLä¸å­å¨æ¶ç´æ¥è¿å 404 éè¯¯ï¼`false` è¡¨ç¤ºæªå½ä¸­æ¶åéçå®HTTPè¯·æ± */\n  force? = false;\n  /** æ¯å¦æå° Mock è¯·æ±ä¿¡æ¯ï¼å¼¥è¡¥æµè§å¨æ Networkä¿¡æ¯ */\n  log? = true;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { DelonMockConfig } from './mock.config';\nimport { MockCachedRule, MockRule } from './interface';\n\n@Injectable()\nexport class MockService implements OnDestroy {\n  private cached: MockCachedRule[] = [];\n\n  constructor(private config: DelonMockConfig) {\n    this.applyMock();\n    delete this.config.data;\n  }\n\n  // region: parse rule\n\n  private applyMock() {\n    this.cached = [];\n    try {\n      this.realApplyMock();\n    } catch (e) {\n      this.outputError(e);\n    }\n  }\n\n  private realApplyMock() {\n    const data = this.config.data;\n    if (!data) return;\n    Object.keys(data).forEach((key: string) => {\n      const rules = data[key];\n      if (!rules) return;\n      Object.keys(rules).forEach((ruleKey: string) => {\n        const value = rules[ruleKey];\n        if (\n          !(\n            typeof value === 'function' ||\n            typeof value === 'object' ||\n            typeof value === 'string'\n          )\n        ) {\n          throw Error(\n            `mock value of [${key}-${ruleKey}] should be function or object or string, but got ${typeof value}`,\n          );\n        }\n        const rule = this.genRule(ruleKey, value);\n        if (\n          ['GET', 'POST', 'PUT', 'HEAD', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(\n            rule.method,\n          ) === -1\n        ) {\n          throw Error(`method of ${key}-${ruleKey} is not valid`);\n        }\n        const item = this.cached.find(\n          w => w.url === rule.url && w.method === rule.method,\n        );\n        if (item) {\n          item.callback = rule.callback;\n        } else {\n          this.cached.push(rule);\n        }\n      });\n    });\n    // regular ordering\n    this.cached.sort(\n      (a, b) =>\n        (b.martcher || '').toString().length -\n        (a.martcher || '').toString().length,\n    );\n  }\n\n  private genRule(key: string, callback: any): MockCachedRule {\n    let method = 'GET';\n    let url = key;\n\n    if (key.indexOf(' ') > -1) {\n      const splited = key.split(' ');\n      method = splited[0].toLowerCase();\n      url = splited[1];\n    }\n\n    let martcher: RegExp = null;\n    let segments: string[] = [];\n    if (~url.indexOf(':')) {\n      segments = url!\n        .split('/')\n        .filter(segment => segment.startsWith(':'))\n        .map(v => v.substring(1));\n      const reStr = url!\n        .split('/')\n        .map(segment => (segment.startsWith(':') ? `([^/]+)` : segment))\n        .join('/');\n      martcher = new RegExp(reStr, 'i');\n    } else if (/(\\([^)]+\\))/i.test(url)) {\n      martcher = new RegExp(url, 'i');\n    }\n\n    return {\n      url,\n      martcher,\n      segments,\n      callback,\n      method: method.toUpperCase(),\n    };\n  }\n\n  private outputError(error: any) {\n    const filePath = error.message.split(': ')[0];\n    const errors = error.stack\n      .split('\\n')\n      .filter(line => line.trim().indexOf('at ') !== 0)\n      .map(line => line.replace(`${filePath}: `, ''));\n    errors.splice(1, 0, ['']);\n\n    console.group();\n    console.warn(`==========Failed to parse mock config.==========`);\n    console.log(errors.join('\\n'));\n    console.groupEnd();\n\n    throw error;\n  }\n\n  // endregion\n\n  getRule(method: string, url: string): MockRule {\n    method = (method || 'GET').toUpperCase();\n    const params: any = {};\n    const list =\n      this.cached.filter(\n        w =>\n          w.method === method &&\n          (w.martcher ? w.martcher.test(url) : w.url === url),\n      );\n    if (list.length === 0) return null;\n    const ret = list.find(w => w.url === url) || list[0];\n    if (ret.martcher) {\n      const execArr = ret.martcher.exec(url);\n      execArr.slice(1).map((value: string, index: number) => {\n        params[ret.segments[index]] = value;\n      });\n    }\n    return {\n      url,\n      method: ret.method,\n      params,\n      callback: ret.callback,\n    };\n  }\n\n  clearCache() {\n    this.cached = [];\n  }\n\n  get rules() {\n    return this.cached;\n  }\n\n  ngOnDestroy(): void {\n    this.clearCache();\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpSentEvent,\n  HttpHeaderResponse,\n  HttpProgressEvent,\n  HttpResponse,\n  HttpUserEvent,\n  HttpErrorResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Observable, Observer, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { DelonMockConfig } from './mock.config';\nimport { MockService } from './mock.service';\nimport { MockStatusError } from './status.error';\nimport { MockRequest } from './interface';\n\n@Injectable()\nexport class MockInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<\n    | HttpSentEvent\n    | HttpHeaderResponse\n    | HttpProgressEvent\n    | HttpResponse<any>\n    | HttpUserEvent<any>\n  > {\n    const src = this.injector.get(MockService);\n    const config = Object.assign(\n      {\n        delay: 300,\n        force: false,\n        log: true,\n      },\n      this.injector.get(DelonMockConfig, null),\n    );\n    const rule = src.getRule(req.method, req.url.split('?')[0]);\n    if (!rule && !config.force) {\n      return next.handle(req);\n    }\n\n    let res: any;\n    switch (typeof rule.callback) {\n      case 'function':\n        const mockRequest: MockRequest = {\n          original: req,\n          body: req.body,\n          queryString: {},\n          headers: {},\n          params: rule.params,\n        };\n        const urlParams = req.url.split('?');\n        if (urlParams.length > 1) {\n          urlParams[1].split('&').forEach(item => {\n            const itemArr = item.split('=');\n            mockRequest.queryString[itemArr[0]] = itemArr[1];\n          });\n        }\n        req.params\n          .keys()\n          .forEach(key => (mockRequest.queryString[key] = req.params.get(key)));\n        req.headers\n          .keys()\n          .forEach(key => (mockRequest.headers[key] = req.headers.get(key)));\n\n        try {\n          res = rule.callback.call(this, mockRequest);\n        } catch (e) {\n          let errRes: HttpErrorResponse;\n          if (e instanceof MockStatusError) {\n            errRes = new HttpErrorResponse({\n              url: req.url,\n              headers: req.headers,\n              status: e.status,\n              statusText: e.statusText || 'Unknown Error',\n              error: e.error,\n            });\n            if (config.log)\n              console.log(\n                `%c ð½MOCK ${e.status} STATUS `,\n                'background:#000;color:#bada55',\n                req.url,\n                errRes,\n                req,\n              );\n          } else {\n            console.error(\n              `Please use MockStatusError to throw status error`,\n              e,\n              req,\n            );\n          }\n          return new Observable((observer: Observer<HttpEvent<any>>) => {\n            observer.error(errRes);\n          });\n        }\n        break;\n      default:\n        res = rule.callback;\n        break;\n    }\n\n    const response: HttpResponse<any> = new HttpResponse({\n      status: 200,\n      body: res,\n      url: req.url,\n    });\n    if (config.log)\n      console.log(\n        '%c ð½MOCK ',\n        'background:#000;color:#bada55',\n        req.url,\n        response,\n        req,\n      );\n    return of(response).pipe(delay(config.delay));\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { DelonMockConfig } from './mock.config';\nimport { MockService } from './mock.service';\nimport { MockInterceptor } from './mock.interceptor';\n\n@NgModule({})\nexport class DelonMockModule {\n  static forRoot(config: DelonMockConfig): ModuleWithProviders {\n    return {\n      ngModule: DelonMockModule,\n      providers: [\n        MockService,\n        { provide: DelonMockConfig, useValue: config },\n        { provide: HTTP_INTERCEPTORS, useClass: MockInterceptor, multi: true },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: DelonMockModule,\n      providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: MockInterceptor, multi: true },\n      ],\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
