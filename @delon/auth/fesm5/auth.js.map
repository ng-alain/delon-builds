{"version":3,"file":"auth.js","sources":["ng://@delon/auth/src/auth.config.ts","ng://@delon/auth/src/store/local-storage.service.ts","ng://@delon/auth/src/store/interface.ts","ng://@delon/auth/src/token/token.service.ts","ng://@delon/auth/src/token/interface.ts","ng://@delon/auth/src/social/social.service.ts","ng://@delon/auth/src/store/memory.service.ts","ng://@delon/auth/src/store/session-storage.service.ts","ng://@delon/auth/src/token/helper.ts","ng://@delon/auth/src/token/base.interceptor.ts","ng://@delon/auth/src/token/jwt/jwt.helper.ts","ng://@delon/auth/src/token/jwt/jwt.model.ts","ng://@delon/auth/src/token/jwt/jwt.interceptor.ts","ng://@delon/auth/src/token/jwt/jwt.guard.ts","ng://@delon/auth/src/token/simple/simple.model.ts","ng://@delon/auth/src/token/simple/simple.interceptor.ts","ng://@delon/auth/src/token/simple/simple.guard.ts","ng://@delon/auth/src/auth.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonAuthConfig {\n  /**\n   * å­å¨KEYå¼\n   */\n  store_key?: string = '_token';\n  /**\n   * æ ææ¶è·³è½¬è³ç»å½é¡µï¼åæ¬ï¼\n   * - æ ætokenå¼\n   * - tokenå·²è¿æï¼éJWTï¼\n   */\n  token_invalid_redirect?: boolean = true;\n  /**\n   * tokenè¿ææ¶é´åç§»å¼ï¼é»è®¤ï¼`10` ç§ï¼åä½ï¼ç§ï¼\n   */\n  token_exp_offset?: number = 10;\n  /**\n   * åétokenåæ°åï¼é»è®¤ï¼token\n   */\n  token_send_key?: string = 'token';\n  /**\n   * åétokenæ¨¡æ¿ï¼é»è®¤ä¸ºï¼`${token}`ï¼ï¼ä½¿ç¨ `${token}` è¡¨ç¤ºtokenç¹ä½ç¬¦ï¼ä¾å¦ï¼\n   *\n   * - `Bearer ${token}`\n   */\n  // tslint:disable-next-line:no-invalid-template-strings\n  token_send_template?: string = '${token}';\n  /**\n   * åétokenåæ°ä½ç½®ï¼é»è®¤ï¼header\n   */\n  token_send_place?: 'header' | 'body' | 'url' = 'header';\n  /**\n   * ç»å½é¡µè·¯ç±å°å\n   */\n  login_url?: string = `/login`;\n  /**\n   * å¿½ç¥TOKENçURLå°ååè¡¨ï¼é»è®¤å¼ä¸ºï¼[ /\\/login/, /assets\\//, /passport\\// ]\n   */\n  ignores?: RegExp[] | null = [/\\/login/, /assets\\//, /passport\\//];\n  /**\n   * åè®¸å¿åç»å½KEYï¼è¥è¯·æ±åæ°ä¸­å¸¦æè¯¥KEYè¡¨ç¤ºå¿½ç¥TOKEN\n   */\n  allow_anonymous_key?: string = `_allow_anonymous`;\n  /**\n   * æ¯å¦æ ¡éªå¤±ææ¶å½ä¸­åç»§ç»­è°ç¨åç»­æ¦æªå¨ç `intercept` æ¹æ³ï¼é»è®¤ï¼`true`\n   */\n  executeOtherInterceptors?: boolean = true;\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\nexport function DA_STORE_TOKEN_LOCAL_FACTORY(): IStore {\n  return new LocalStorageStore();\n}\n\n/**\n * `localStorage` storage, **not lost after closing the browser**.\n */\nexport class LocalStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string) {\n    localStorage.removeItem(key);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { ITokenModel } from '../token/interface';\nimport { DA_STORE_TOKEN_LOCAL_FACTORY } from './local-storage.service';\n\nexport const DA_STORE_TOKEN = new InjectionToken<IStore>('AUTH_STORE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_STORE_TOKEN_LOCAL_FACTORY,\n});\n\n// tslint:disable-next-line: interface-name\nexport interface IStore {\n  get(key: string): ITokenModel;\n\n  set(key: string, value: ITokenModel): boolean;\n\n  remove(key: string);\n}\n","import { inject, Inject } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { DelonAuthConfig } from '../auth.config';\nimport { DA_STORE_TOKEN, IStore } from '../store/interface';\nimport { AuthReferrer, ITokenModel, ITokenService } from './interface';\n\nexport function DA_SERVICE_TOKEN_FACTORY(): ITokenService {\n  return new TokenService(inject(DelonAuthConfig), inject(DA_STORE_TOKEN));\n}\n\n/**\n * ç»´æ¤Tokenä¿¡æ¯æå¡ï¼[å¨çº¿ææ¡£](https://ng-alain.com/auth)\n */\nexport class TokenService implements ITokenService {\n  private change$ = new BehaviorSubject<ITokenModel | null>(null);\n  private _referrer: AuthReferrer = {};\n\n  constructor(private options: DelonAuthConfig, @Inject(DA_STORE_TOKEN) private store: IStore) { }\n\n  /**\n   * ææå¤±è´¥åè·³è½¬è·¯ç±è·¯å¾ï¼æ¯æå¤é¨é¾æ¥å°åï¼ï¼éè¿è®¾ç½®å¨å± `DelonAuthConfig.login_url` æ¥æ¹å\n   */\n  get login_url(): string | undefined {\n    return this.options.login_url;\n  }\n\n  /**\n   * å½åè¯·æ±é¡µé¢çæ¥æºé¡µé¢çå°å\n   */\n  get referrer() {\n    return this._referrer;\n  }\n\n  /**\n   * è®¾ç½® Token ä¿¡æ¯\n   */\n  set(data: ITokenModel): boolean {\n    this.change$.next(data);\n    return this.store.set(this.options.store_key!, data);\n  }\n\n  /**\n   * è·å Token ä¿¡æ¯ï¼ä¾å¦ï¼\n   * ```\n   * // è¿å `any` ç±»å Token å¯¹è±¡\n   * const token = tokenService.get();\n   * // è·å JWT ç±»åç Token å¯¹è±¡\n   * const token = tokenService.get<JWTTokenModel>(JWTTokenModel);\n   * // è·å Simple ç±»åç Token å¯¹è±¡\n   * const token = tokenService.get<SimpleTokenModel>(SimpleTokenModel);\n   * ```\n   */\n  get(type?: any): any;\n  get<T extends ITokenModel>(type?: new () => T): T {\n    const data = this.store.get(this.options.store_key!);\n    return type ? (Object.assign(new type(), data) as T) : (data as T);\n  }\n\n  /**\n   * æ¸é¤ Token ä¿¡æ¯ï¼ä¾å¦ï¼\n   * ```\n   * // æ¸é¤ææ Token ä¿¡æ¯\n   * tokenService.clear();\n   * // åªæ¸é¤ token å­æ®µ\n   * tokenService.clear({ onlyToken: true });\n   * ```\n   */\n  clear(options: { onlyToken: boolean } = { onlyToken: false }) {\n    let data: ITokenModel | null = null;\n    if (options.onlyToken === true) {\n      data = this.get() as ITokenModel;\n      data.token = ``;\n      this.set(data);\n    } else {\n      this.store.remove(this.options.store_key!);\n    }\n    this.change$.next(data);\n  }\n\n  /**\n   * è®¢é Token å¯¹è±¡åæ´éç¥\n   */\n  change(): Observable<ITokenModel | null> {\n    return this.change$.pipe(share());\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DA_SERVICE_TOKEN_FACTORY } from './token.service';\n\nexport const DA_SERVICE_TOKEN = new InjectionToken<ITokenService>('DA_SERVICE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_SERVICE_TOKEN_FACTORY,\n});\n\n// tslint:disable-next-line: interface-name\nexport interface ITokenModel {\n  [key: string]: any;\n\n  token: string | null | undefined;\n}\n\nexport interface AuthReferrer {\n  url?: string | null | undefined;\n}\n\n// tslint:disable-next-line: interface-name\nexport interface ITokenService {\n  /** è·åç»å½å°å */\n  readonly login_url: string | undefined;\n\n  /** è·åææå¤±è´¥åè·¯ç±ä¿¡æ¯ */\n  readonly referrer?: AuthReferrer;\n\n  set(data: ITokenModel | null): boolean;\n\n  /**\n   * è·åTokenï¼å½¢å¼åæ¬ï¼\n   * - `get()` è·å Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` è·å JWT Token\n   */\n  get(type?: any): ITokenModel | null;\n\n  /**\n   * è·åTokenï¼å½¢å¼åæ¬ï¼\n   * - `get()` è·å Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` è·å JWT Token\n   */\n  get<T extends ITokenModel>(type?: any): T;\n\n  /**\n   * Clean authorization data\n   */\n  clear(options?: { onlyToken: boolean }): void;\n\n  change(): Observable<ITokenModel | null>;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\n\nimport { DA_SERVICE_TOKEN, ITokenModel, ITokenService } from '../token/interface';\n\nconst OPENTYPE = '_delonAuthSocialType';\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\n\nexport type SocialOpenType = 'href' | 'window';\n\n@Injectable()\nexport class SocialService implements OnDestroy {\n  private _win: Window | null;\n  private _winTime: any;\n  private observer: Observer<ITokenModel | null>;\n\n  constructor(\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\n    @Inject(DOCUMENT) private doc: any,\n    private router: Router,\n  ) {}\n\n  /**\n   * ä½¿ç¨çªä½æå¼ææé¡µï¼è¿åå¼æ¯ `Observable<ITokenModel>` ç¨äºè®¢éææåè¿åçç»æ\n   * @param url è·åææå°å\n   * @param callback åè°è·¯ç±å°å\n   * @param options.windowFeatures ç­å `window.open` ç `features` åæ°å¼\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'window';\n      windowFeatures?: string;\n    },\n  ): Observable<ITokenModel>;\n\n  /**\n   * è·³è½¬è³ææé¡µ\n   * @param url è·åææå°å\n   * @param callback åè°è·¯ç±å°å\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'href';\n    },\n  ): void;\n\n  /**\n   * è·³è½¬è³ç»å½é¡µï¼è¥ä¸º `type=window` æ¶ï¼è¿åå¼æ¯ `Observable<ITokenModel>`\n   * @param url è·åææå°å\n   * @param callback å½ `type=href` æåæ¶çåè°è·¯ç±å°å\n   * @param options.type æå¼æ¹å¼ï¼é»è®¤ `window`\n   * @param options.windowFeatures ç­å `window.open` ç `features` åæ°å¼\n   */\n  login(\n    url: string,\n    callback: string = '/',\n    options: {\n      type?: SocialOpenType;\n      windowFeatures?: string;\n    } = {},\n  ): Observable<ITokenModel | null> | void {\n    options = {\n      type: 'window',\n      windowFeatures: 'location=yes,height=570,width=520,scrollbars=yes,status=yes',\n      ...options,\n    };\n    localStorage.setItem(OPENTYPE, options.type!);\n    localStorage.setItem(HREFCALLBACK, callback);\n    if (options.type === 'href') {\n      this.doc.location.href = url;\n      return;\n    }\n\n    this._win = window.open(url, '_blank', options.windowFeatures);\n    this._winTime = setInterval(() => {\n      if (this._win && this._win.closed) {\n        this.ngOnDestroy();\n\n        let model = this.tokenService.get();\n        if (model && !model.token) model = null;\n\n        // è§¦ååæ´éç¥\n        if (model) {\n          this.tokenService.set(model);\n        }\n\n        this.observer.next(model);\n        this.observer.complete();\n      }\n    }, 100);\n    return new Observable((observer: Observer<ITokenModel | null>) => {\n      this.observer = observer;\n    });\n  }\n\n  /**\n   * æææååçåè°å¤ç\n   *\n   * @param rawData æå®åè°è®¤è¯ä¿¡æ¯ï¼ä¸ºç©ºæ¶ä»æ ¹æ®å½åURLè§£æ\n   */\n  callback(rawData?: ITokenModel | string | null): ITokenModel {\n    // from uri\n    if (!rawData && this.router.url.indexOf('?') === -1) {\n      throw new Error(`url muse contain a ?`);\n    }\n    // parse\n    let data: ITokenModel = { token: `` };\n    if (typeof rawData === 'string') {\n      const rightUrl = rawData.split('?')[1].split('#')[0];\n      data = this.router.parseUrl('./?' + rightUrl).queryParams as ITokenModel;\n    } else {\n      data = rawData as ITokenModel;\n    }\n\n    if (!data || !data.token) throw new Error(`invalide token data`);\n    this.tokenService.set(data);\n\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\n    localStorage.removeItem(HREFCALLBACK);\n    const type = localStorage.getItem(OPENTYPE);\n    localStorage.removeItem(OPENTYPE);\n    if (type === 'window') {\n      window.close();\n    } else {\n      this.router.navigateByUrl(url);\n    }\n\n    return data;\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this._winTime);\n    this._winTime = null;\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * åå­å­å¨ï¼å³ææµè§å¨æ ç­¾å**ä¸¢å¤±**ã\n */\nexport class MemoryStore implements IStore {\n  private cache: { [key: string]: ITokenModel | null } = {};\n\n  get(key: string): ITokenModel {\n    return this.cache[key] || ({} as ITokenModel);\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    this.cache[key] = value;\n    return true;\n  }\n\n  remove(key: string) {\n    this.cache[key] = null;\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * `sessionStorage` storage, **lost after closing the browser**.\n */\nexport class SessionStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    sessionStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string) {\n    sessionStorage.removeItem(key);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DelonAuthConfig } from '../auth.config';\nimport { DA_SERVICE_TOKEN, ITokenService } from './interface';\nimport { JWTTokenModel } from './jwt/jwt.model';\nimport { SimpleTokenModel } from './simple/simple.model';\n\nexport function CheckSimple(model: SimpleTokenModel | null): boolean {\n  return model != null && typeof model.token === 'string' && model.token.length > 0;\n}\n\nexport function CheckJwt(model: JWTTokenModel, offset: number): boolean {\n  return model != null && !!model.token && !model.isExpired(offset);\n}\n\nexport function ToLogin(options: DelonAuthConfig, injector: Injector, url?: string) {\n  const router = injector.get<Router>(Router);\n  (injector.get(DA_SERVICE_TOKEN) as ITokenService).referrer!.url = url || router.url;\n  if (options.token_invalid_redirect === true) {\n    setTimeout(() => {\n      if (/^https?:\\/\\//g.test(options.login_url!)) {\n        injector.get(DOCUMENT).location.href = options.login_url as string;\n      } else {\n        router.navigate([options.login_url]);\n      }\n    });\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injector, Optional } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { DelonAuthConfig } from '../auth.config';\nimport { ToLogin } from './helper';\nimport { ITokenModel } from './interface';\n\nclass HttpAuthInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {}\n\n  protected model: ITokenModel;\n\n  abstract isAuth(options: DelonAuthConfig): boolean;\n\n  abstract setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any>;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const options = { ...new DelonAuthConfig(), ...this.injector.get<DelonAuthConfig>(DelonAuthConfig, undefined) };\n    if (options.ignores) {\n      for (const item of options.ignores as RegExp[]) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    if (\n      options.allow_anonymous_key &&\n      (req.params.has(options.allow_anonymous_key) || new RegExp(`[\\?|&]${options.allow_anonymous_key}=[^&]+`).test(req.urlWithParams))\n    ) {\n      return next.handle(req);\n    }\n\n    if (this.isAuth(options)) {\n      req = this.setReq(req, options);\n    } else {\n      ToLogin(options, this.injector);\n      // Interrupt Http request, so need to generate a new Observable\n      const err$ = new Observable((observer: Observer<HttpEvent<any>>) => {\n        const res = new HttpErrorResponse({\n          url: req.url,\n          headers: req.headers,\n          status: 401,\n          statusText: `æ¥èª @delon/auth çæ¦æªï¼æè¯·æ±URLæªææï¼è¥æ¯ç»å½APIå¯å å¥ [url?_allow_anonymous=true] æ¥è¡¨ç¤ºå¿½ç¥æ ¡éªï¼æ´å¤æ¹æ³è¯·åèï¼ https://ng-alain.com/auth/getting-started#DelonAuthConfig\\nThe interception from @delon/auth, the requested URL is not authorized. If the login API can add [url?_allow_anonymous=true] to ignore the check, please refer to: https://ng-alain.com/auth/getting-started#DelonAuthConfig`,\n        });\n        observer.error(res);\n      });\n      if (options.executeOtherInterceptors) {\n        const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n        const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n        if (lastInterceptors.length > 0) {\n          const chain = lastInterceptors.reduceRight((_next, _interceptor) => new HttpAuthInterceptorHandler(_next, _interceptor), {\n            handle: (_: HttpRequest<any>) => err$,\n          });\n          return chain.handle(req);\n        }\n      }\n      return err$;\n    }\n    return next.handle(req);\n  }\n}\n","export function urlBase64Decode(str: string): string {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0: {\n      break;\n    }\n    case 2: {\n      output += '==';\n      break;\n    }\n    case 3: {\n      output += '=';\n      break;\n    }\n    default: {\n      throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n  }\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str: string): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output = '';\n\n  str = String(str).replace(/=+$/, '');\n\n  for (\n    // initialize result and counters\n    // tslint:disable:no-conditional-assignment binary-expression-operand-order\n    let bc = 0, bs: any, buffer: any, idx = 0;\n    // get next character\n    (buffer = str.charAt(idx++));\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer &&\n      // tslint:disable-next-line: ban-comma-operator\n      ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4)\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n      : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str: string) {\n  return decodeURIComponent(\n    Array.prototype.map\n      .call(b64decode(str), (c: string) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(''),\n  );\n}\n","import { ITokenModel } from '../interface';\nimport { urlBase64Decode } from './jwt.helper';\n\nexport class JWTTokenModel implements ITokenModel {\n  [key: string]: any;\n\n  token: string | null | undefined;\n\n  /**\n   * è·åè½½è·ä¿¡æ¯\n   */\n  get payload(): any {\n    const parts = (this.token || '').split('.');\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\n\n    const decoded = urlBase64Decode(parts[1]);\n    return JSON.parse(decoded);\n  }\n\n  /**\n   * æ£æ¥Tokenæ¯å¦è¿æï¼`payload` å¿é¡»åå« `exp` æ¶ææ\n   *\n   * @param offsetSeconds åç§»é\n   */\n  isExpired(offsetSeconds: number = 0): boolean | null {\n    const decoded = this.payload;\n    if (!decoded.hasOwnProperty('exp')) return null;\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { DelonAuthConfig } from '../../auth.config';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckJwt } from '../helper';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\n\n/**\n * JWT æ¦æªå¨\n */\n@Injectable()\nexport class JWTInterceptor extends BaseInterceptor {\n  isAuth(options: DelonAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get<JWTTokenModel>(JWTTokenModel);\n    return CheckJwt(this.model as JWTTokenModel, options.token_exp_offset!);\n  }\n\n  setReq(req: HttpRequest<any>, _options: DelonAuthConfig): HttpRequest<any> {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.model.token}`,\n      },\n    });\n  }\n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  RouterStateSnapshot,\n  UrlSegment,\n} from '@angular/router';\nimport { DelonAuthConfig } from '../../auth.config';\nimport { CheckJwt, ToLogin } from '../helper';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\n\n/**\n * JWT è·¯ç±å®å«, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ JWTGuard ]\n * }\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class JWTGuard implements CanActivate, CanActivateChild, CanLoad {\n  private cog: DelonAuthConfig;\n  private url: string | undefined;\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private srv: ITokenService, private injector: Injector, cog: DelonAuthConfig) {\n    this.cog = { ...new DelonAuthConfig(), ...cog };\n  }\n\n  private process(): boolean {\n    const res = CheckJwt(this.srv.get<JWTTokenModel>(JWTTokenModel), this.cog.token_exp_offset!);\n    if (!res) {\n      ToLogin(this.cog, this.injector, this.url);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(route: Route, _segments: UrlSegment[]): boolean {\n    this.url = route.path;\n    return this.process();\n  }\n  // all children route\n  canActivateChild(_childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n  // route\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n}\n","import { ITokenModel } from '../interface';\n\nexport class SimpleTokenModel implements ITokenModel {\n  [key: string]: any;\n\n  token: string;\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { DelonAuthConfig } from '../../auth.config';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckSimple } from '../helper';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { SimpleTokenModel } from './simple.model';\n\n/**\n * Simple æ¦æªå¨\n */\n@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n  isAuth(_options: DelonAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any> {\n    const { token_send_template, token_send_key } = options;\n    const token = token_send_template!.replace(/\\$\\{([\\w]+)\\}/g, (_: string, g) => this.model[g]);\n    switch (options.token_send_place) {\n      case 'header':\n        const obj = {};\n        obj[token_send_key!] = token;\n        req = req.clone({\n          setHeaders: obj,\n        });\n        break;\n      case 'body':\n        const body = req.body || {};\n        body[token_send_key!] = token;\n        req = req.clone({\n          body,\n        });\n        break;\n      case 'url':\n        req = req.clone({\n          params: req.params.append(token_send_key!, token),\n        });\n        break;\n    }\n    return req;\n  }\n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Route, RouterStateSnapshot, UrlSegment } from '@angular/router';\nimport { DelonAuthConfig } from '../../auth.config';\nimport { CheckSimple, ToLogin } from '../helper';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { SimpleTokenModel } from './simple.model';\n\n/**\n * Simple è·¯ç±å®å«, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ SimpleGuard ]\n * }\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class SimpleGuard implements CanActivate, CanActivateChild, CanLoad {\n  private cog: DelonAuthConfig;\n  private url?: string;\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private srv: ITokenService, private injector: Injector, cog: DelonAuthConfig) {\n    this.cog = { ...new DelonAuthConfig(), ...cog };\n  }\n\n  private process(): boolean {\n    const res = CheckSimple(this.srv.get() as SimpleTokenModel);\n    if (!res) {\n      ToLogin(this.cog, this.injector, this.url);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(route: Route, _segments: UrlSegment[]): boolean {\n    this.url = route.path;\n    return this.process();\n  }\n  // all children route\n  canActivateChild(_childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n  // route\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class DelonAuthModule {}\n"],"names":["tslib_1.__extends"],"mappings":"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"}