{"version":3,"file":"auth.js.map","sources":["ng://@delon/auth/src/token/interface.ts","ng://@delon/auth/src/social/social.service.ts","ng://@delon/auth/src/store/interface.ts","ng://@delon/auth/src/store/local-storage.service.ts","ng://@delon/auth/src/store/memory.service.ts","ng://@delon/auth/src/store/session-storage.service.ts","ng://@delon/auth/src/auth.config.ts","ng://@delon/auth/src/win_tokens.ts","ng://@delon/auth/src/token/helper.ts","ng://@delon/auth/src/token/base.interceptor.ts","ng://@delon/auth/src/token/token.service.ts","ng://@delon/auth/src/token/jwt/jwt.helper.ts","ng://@delon/auth/src/token/jwt/jwt.model.ts","ng://@delon/auth/src/token/jwt/jwt.interceptor.ts","ng://@delon/auth/src/token/jwt/jwt.guard.ts","ng://@delon/auth/src/token/simple/simple.model.ts","ng://@delon/auth/src/token/simple/simple.interceptor.ts","ng://@delon/auth/src/token/simple/simple.guard.ts","ng://@delon/auth/src/auth.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport const DA_SERVICE_TOKEN = new InjectionToken<ITokenService>(\n  'DELON_AUTH_TOKEN_SERVICE_TOKEN',\n);\n\nexport interface ITokenModel {\n  [key: string]: any;\n\n  token: string;\n}\n\nexport interface ITokenService {\n  set(data: ITokenModel): boolean;\n\n  /**\n   * è·åTokenï¼å½¢å¼åæ¬ï¼\n   * - `get()` è·å Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` è·å JWT Token\n   */\n  get(type?: any): ITokenModel;\n\n  /**\n   * è·åTokenï¼å½¢å¼åæ¬ï¼\n   * - `get()` è·å Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` è·å JWT Token\n   */\n  get<T extends ITokenModel>(type?: any): T;\n\n  clear(): void;\n\n  change(): Observable<ITokenModel>;\n\n  /** è·åç»å½å°å */\n  readonly login_url: string;\n\n  /** ç»å½åè·³è½¬å°åï¼æªæå®æ¶è¿å `/` */\n  redirect: string;\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { Observer, Observable } from 'rxjs';\n\nimport {\n  ITokenModel,\n  ITokenService,\n  DA_SERVICE_TOKEN,\n} from '../token/interface';\n\nconst OPENTYPE = '_delonAuthSocialType';\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\n\nexport type SocialOpenType = 'href' | 'window';\n\n@Injectable()\nexport class SocialService implements OnDestroy {\n  private _win: Window;\n  private _win$: any;\n  private observer: Observer<ITokenModel>;\n\n  constructor(\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\n    @Inject(DOCUMENT) private doc: any,\n    private router: Router,\n  ) {}\n\n  /**\n   * ä½¿ç¨çªä½æå¼ææé¡µï¼è¿åå¼æ¯ `Observable<ITokenModel>` ç¨äºè®¢éææåè¿åçç»æ\n   * @param url è·åææå°å\n   * @param callback åè°è·¯ç±å°å\n   * @param options.windowFeatures ç­å `window.open` ç `features` åæ°å¼\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'window';\n      windowFeatures?: string;\n    },\n  ): Observable<ITokenModel>;\n\n  /**\n   * è·³è½¬è³ææé¡µ\n   * @param url è·åææå°å\n   * @param callback åè°è·¯ç±å°å\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'href';\n    },\n  ): void;\n\n  /**\n   * è·³è½¬è³ç»å½é¡µï¼è¥ä¸º `type=window` æ¶ï¼è¿åå¼æ¯ `Observable<ITokenModel>`\n   * @param url è·åææå°å\n   * @param callback å½ `type=href` æåæ¶çåè°è·¯ç±å°å\n   * @param options.type æå¼æ¹å¼ï¼é»è®¤ `window`\n   * @param options.windowFeatures ç­å `window.open` ç `features` åæ°å¼\n   */\n  login(\n    url: string,\n    callback: string = '/',\n    options: {\n      type?: SocialOpenType;\n      windowFeatures?: string;\n    } = {},\n  ): Observable<ITokenModel> | void {\n    options = Object.assign(\n      {\n        type: 'window',\n        windowFeatures:\n          'location=yes,height=570,width=520,scrollbars=yes,status=yes',\n      },\n      options,\n    );\n    localStorage.setItem(OPENTYPE, options.type);\n    localStorage.setItem(HREFCALLBACK, callback);\n    if (options.type === 'href') {\n      this.doc.location.href = url;\n      return;\n    }\n\n    this._win = window.open(url, '_blank', options.windowFeatures);\n    this._win$ = setInterval(() => {\n      if (this._win && this._win.closed) {\n        this.ngOnDestroy();\n\n        let model = this.tokenService.get();\n        if (model && !model.token) model = null;\n\n        // è§¦ååæ´éç¥\n        if (model) {\n          this.tokenService.set(model);\n        }\n\n        this.observer.next(model);\n        this.observer.complete();\n      }\n    }, 100);\n    return Observable.create((observer: Observer<ITokenModel>) => {\n      this.observer = observer;\n    });\n  }\n\n  /**\n   * æææååçåè°å¤ç\n   *\n   * @param rawData æå®åè°è®¤è¯ä¿¡æ¯ï¼ä¸ºç©ºæ¶ä»æ ¹æ®å½åURLè§£æ\n   */\n  callback(rawData?: string | ITokenModel): ITokenModel {\n    // from uri\n    if (!rawData && this.router.url.indexOf('?') === -1) {\n      throw new Error(`url muse contain a ?`);\n    }\n    // parse\n    let data: ITokenModel = { token: `` };\n    if (typeof rawData === 'string') {\n      const rightUrl = rawData.split('?')[1].split('#')[0];\n      data = <any>this.router.parseUrl('./?' + rightUrl).queryParams;\n    } else {\n      data = rawData;\n    }\n\n    if (!data || !data.token) throw new Error(`invalide token data`);\n    this.tokenService.set(data);\n\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\n    localStorage.removeItem(HREFCALLBACK);\n    const type = localStorage.getItem(OPENTYPE);\n    localStorage.removeItem(OPENTYPE);\n    if (type === 'window') {\n      window.close();\n    } else {\n      this.router.navigateByUrl(url);\n    }\n\n    return data;\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this._win$);\n    this._win$ = null;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { ITokenModel } from '../token/interface';\n\nexport const DA_STORE_TOKEN = new InjectionToken<IStore>('AUTH_STORE_TOKEN');\n\nexport interface IStore {\n  get(key: string): ITokenModel;\n\n  set(key: string, value: ITokenModel): boolean;\n\n  remove(key: string);\n}\n","import { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\nexport class LocalStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string) {\n    localStorage.removeItem(key);\n  }\n}\n","import { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\nexport class MemoryStore implements IStore {\n  private cache: { [key: string]: ITokenModel } = {};\n\n  get(key: string): ITokenModel {\n    return this.cache[key] || <any>{};\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    this.cache[key] = value;\n    return true;\n  }\n\n  remove(key: string) {\n    this.cache[key] = null;\n  }\n}\n","import { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\nexport class SessionStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    sessionStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string) {\n    sessionStorage.removeItem(key);\n  }\n}\n","export class DelonAuthConfig {\n  /**\n   * å­å¨KEYå¼\n   */\n  store_key? = '_token';\n  /**\n   * æ ææ¶è·³è½¬è³ç»å½é¡µï¼åæ¬ï¼\n   * - æ ætokenå¼\n   * - tokenå·²è¿æï¼éJWTï¼\n   */\n  token_invalid_redirect? = true;\n  /**\n   * tokenè¿ææ¶é´åç§»å¼ï¼é»è®¤ï¼`10` ç§ï¼åä½ï¼ç§ï¼\n   */\n  token_exp_offset? = 10;\n  /**\n   * åétokenåæ°åï¼é»è®¤ï¼token\n   */\n  token_send_key? = 'token';\n  /**\n   * åétokenæ¨¡æ¿ï¼é»è®¤ä¸ºï¼`${token}`ï¼ï¼ä½¿ç¨ `${token}` è¡¨ç¤ºtokenç¹ä½ç¬¦ï¼ä¾å¦ï¼\n   *\n   * - `Bearer ${token}`\n   */\n  token_send_template? = '${token}';\n  /**\n   * åétokenåæ°ä½ç½®ï¼é»è®¤ï¼header\n   */\n  token_send_place?: 'header' | 'body' | 'url' = 'header';\n  /**\n   * ç»å½é¡µè·¯ç±å°å\n   */\n  login_url? = `/login`;\n  /**\n   * å¿½ç¥TOKENçURLå°ååè¡¨ï¼é»è®¤å¼ä¸ºï¼[ /\\/login/, /assets\\//, /passport\\// ]\n   */\n  ignores?: RegExp[] = [/\\/login/, /assets\\//, /passport\\//];\n  /**\n   * åè®¸å¿åç»å½KEYï¼è¥è¯·æ±åæ°ä¸­å¸¦æè¯¥KEYè¡¨ç¤ºå¿½ç¥TOKEN\n   */\n  allow_anonymous_key? = `_allow_anonymous`;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const WINDOW = new InjectionToken<any>('Window');\n","import { Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SimpleTokenModel } from './simple/simple.model';\nimport { JWTTokenModel } from './jwt/jwt.model';\nimport { DelonAuthConfig } from '../auth.config';\nimport { WINDOW } from '../win_tokens';\n\nexport function CheckSimple(model: SimpleTokenModel): boolean {\n  return (\n    model != null && typeof model.token === 'string' && model.token.length > 0\n  );\n}\n\nexport function CheckJwt(model: JWTTokenModel, offset: number): boolean {\n  return model != null && model.token && !model.isExpired(offset);\n}\n\nexport function ToLogin(options: DelonAuthConfig, injector: Injector) {\n  if (options.token_invalid_redirect === true) {\n    setTimeout(() => {\n      if (/^https?:\\/\\//g.test(options.login_url)) {\n        injector.get(WINDOW).location.href = options.login_url;\n      } else {\n        injector.get(Router).navigate([options.login_url]);\n      }\n    });\n  }\n}\n","import { Injector, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpSentEvent,\n  HttpHeaderResponse,\n  HttpProgressEvent,\n  HttpResponse,\n  HttpUserEvent,\n  HttpEvent,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, Observer } from 'rxjs';\n\nimport { _HttpClient } from '@delon/theme';\n\nimport { ITokenModel } from './interface';\nimport { DelonAuthConfig } from '../auth.config';\nimport { ToLogin } from './helper';\n\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {}\n\n  protected model: ITokenModel;\n\n  abstract isAuth(options: DelonAuthConfig): boolean;\n\n  abstract setReq(\n    req: HttpRequest<any>,\n    options: DelonAuthConfig,\n  ): HttpRequest<any>;\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<\n    | HttpSentEvent\n    | HttpHeaderResponse\n    | HttpProgressEvent\n    | HttpResponse<any>\n    | HttpUserEvent<any>\n  > {\n    const options = Object.assign(\n      new DelonAuthConfig(),\n      this.injector.get(DelonAuthConfig, null),\n    );\n    if (options.ignores) {\n      for (const item of options.ignores as RegExp[]) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    if (\n      options.allow_anonymous_key &&\n      (req.params.has(options.allow_anonymous_key) ||\n        this.injector\n          .get(Router)\n          .parseUrl(req.urlWithParams)\n          .queryParamMap.has(options.allow_anonymous_key))\n    ) {\n      return next.handle(req);\n    }\n\n    if (this.isAuth(options)) {\n      req = this.setReq(req, options);\n    } else {\n      ToLogin(options, this.injector);\n      // observer.errorï¼ä¼å¯¼ååç»­æ¦æªå¨æ æ³è§¦åï¼å æ­¤ï¼éè¦å¤ç `_HttpClient` ç¶æé®é¢\n      const hc = this.injector.get(_HttpClient, null);\n      if (hc) hc.end();\n      return new Observable((observer: Observer<HttpEvent<any>>) => {\n        const res = new HttpErrorResponse({\n          status: 401,\n          statusText: `From Simple Intercept --> https://ng-alain.com/docs/auth`,\n        });\n        observer.error(res);\n      });\n    }\n    return next.handle(req);\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { ITokenService, ITokenModel } from './interface';\nimport { DA_STORE_TOKEN, IStore } from '../store/interface';\nimport { DelonAuthConfig } from '../auth.config';\n\n@Injectable()\nexport class TokenService implements ITokenService {\n  private change$: BehaviorSubject<ITokenModel> = new BehaviorSubject<\n    ITokenModel\n  >(null);\n  private data: ITokenModel;\n  private _redirect: string;\n\n  constructor(\n    private options: DelonAuthConfig,\n    @Inject(DA_STORE_TOKEN) private store: IStore,\n  ) {}\n\n  get login_url(): string {\n    return this.options.login_url;\n  }\n\n  set redirect(url: string) {\n    this._redirect = url;\n  }\n\n  get redirect() {\n    return this._redirect || '/';\n  }\n\n  set(data: ITokenModel): boolean {\n    this.change$.next(data);\n    return this.store.set(this.options.store_key, data);\n  }\n\n  get(type?: any);\n  get<T extends ITokenModel>(type?: { new (): T }): T {\n    const data = this.store.get(this.options.store_key);\n    return type ? (Object.assign(new type(), data) as T) : (data as T);\n  }\n\n  clear() {\n    this.change$.next(null);\n    this.store.remove(this.options.store_key);\n  }\n\n  change(): Observable<ITokenModel> {\n    return this.change$.pipe(share());\n  }\n}\n","export function urlBase64Decode(str: string): string {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0: {\n      break;\n    }\n    case 2: {\n      output += '==';\n      break;\n    }\n    case 3: {\n      output += '=';\n      break;\n    }\n    default: {\n      throw new Error(\n        `'atob' failed: The string to be decoded is not correctly encoded.`,\n      );\n    }\n  }\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str: string): string {\n  const chars =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output: string = '';\n\n  str = String(str).replace(/=+$/, '');\n\n  for (\n    // initialize result and counters\n    let bc: number = 0, bs: any, buffer: any, idx: number = 0;\n    // get next character\n    (buffer = str.charAt(idx++));\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer &&\n    ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4)\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n      : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str: any) {\n  return decodeURIComponent(\n    Array.prototype.map\n      .call(b64decode(str), (c: any) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(''),\n  );\n}\n","import { ITokenModel } from '../interface';\nimport { urlBase64Decode } from './jwt.helper';\n\nexport class JWTTokenModel implements ITokenModel {\n  [key: string]: any;\n\n  token: string;\n\n  /**\n   * è·åè½½è·ä¿¡æ¯\n   */\n  get payload(): any {\n    const parts = (this.token || '').split('.');\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\n\n    const decoded = urlBase64Decode(parts[1]);\n    return JSON.parse(decoded);\n  }\n\n  /**\n   * æ£æ¥Tokenæ¯å¦è¿æï¼`payload` å¿é¡»åå« `exp` æ¶ææ\n   *\n   * @param offsetSeconds åç§»é\n   */\n  isExpired(offsetSeconds: number = 0): boolean {\n    const decoded = this.payload;\n    if (!decoded.hasOwnProperty('exp')) return null;\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest } from '@angular/common/http';\n\nimport { DelonAuthConfig } from '../../auth.config';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\nimport { CheckJwt } from '../helper';\n\n@Injectable()\nexport class JWTInterceptor extends BaseInterceptor {\n  isAuth(options: DelonAuthConfig): boolean {\n    this.model = this.injector\n      .get(DA_SERVICE_TOKEN)\n      .get<JWTTokenModel>(JWTTokenModel);\n    return CheckJwt(this.model as JWTTokenModel, options.token_exp_offset);\n  }\n\n  setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any> {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.model.token}`,\n      },\n    });\n  }\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanLoad } from '@angular/router';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\nimport { DelonAuthConfig } from '../../auth.config';\nimport { CheckJwt, ToLogin } from '../helper';\n\n@Injectable()\nexport class JWTGuard implements CanActivate, CanActivateChild, CanLoad {\n  private cog: DelonAuthConfig;\n  constructor(\n    @Inject(DA_SERVICE_TOKEN) private srv: ITokenService,\n    private injector: Injector,\n    cog: DelonAuthConfig,\n  ) {\n    this.cog = Object.assign(new DelonAuthConfig(), cog);\n  }\n\n  private process(): boolean {\n    const res = CheckJwt(\n      this.srv.get<JWTTokenModel>(JWTTokenModel),\n      this.cog.token_exp_offset,\n    );\n    if (!res) {\n      ToLogin(this.cog, this.injector);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(): boolean {\n    return this.process();\n  }\n  // all children route\n  canActivateChild(): boolean {\n    return this.process();\n  }\n  // route\n  canActivate(): boolean {\n    return this.process();\n  }\n}\n","import { ITokenModel } from '../interface';\n\nexport class SimpleTokenModel implements ITokenModel {\n  [key: string]: any;\n\n  token: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest } from '@angular/common/http';\n\nimport { DelonAuthConfig } from '../../auth.config';\nimport { SimpleTokenModel } from './simple.model';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { CheckSimple } from '../helper';\n\n@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n  isAuth(options: DelonAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any> {\n    const token = options.token_send_template.replace(\n      /\\$\\{([\\w]+)\\}/g,\n      (_: string, g) => this.model[g],\n    );\n    switch (options.token_send_place) {\n      case 'header':\n        const obj = {};\n        obj[options.token_send_key] = token;\n        req = req.clone({\n          setHeaders: obj,\n        });\n        break;\n      case 'body':\n        const body = req.body || {};\n        body[options.token_send_key] = token;\n        req = req.clone({\n          body: body,\n        });\n        break;\n      case 'url':\n        req = req.clone({\n          params: req.params.append(options.token_send_key, token),\n        });\n        break;\n    }\n    return req;\n  }\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanLoad } from '@angular/router';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { CheckSimple, ToLogin } from '../helper';\nimport { DelonAuthConfig } from '../../auth.config';\n\n@Injectable()\nexport class SimpleGuard implements CanActivate, CanActivateChild, CanLoad {\n  private cog: DelonAuthConfig;\n\n  constructor(\n    @Inject(DA_SERVICE_TOKEN) private srv: ITokenService,\n    private injector: Injector,\n    cog: DelonAuthConfig,\n  ) {\n    this.cog = Object.assign(new DelonAuthConfig(), cog);\n  }\n\n  private process(): boolean {\n    const res = CheckSimple(this.srv.get());\n    if (!res) {\n      ToLogin(this.cog, this.injector);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(): boolean {\n    return this.process();\n  }\n  // all children route\n  canActivateChild(): boolean {\n    return this.process();\n  }\n  // route\n  canActivate(): boolean {\n    return this.process();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { DelonAuthConfig } from './auth.config';\nimport { DA_STORE_TOKEN } from './store/interface';\nimport { DA_SERVICE_TOKEN } from './token/interface';\nimport { LocalStorageStore } from './store/local-storage.service';\nimport { TokenService } from './token/token.service';\nimport { SimpleGuard } from './token/simple/simple.guard';\nimport { JWTGuard } from './token/jwt/jwt.guard';\nimport { WINDOW } from './win_tokens';\n\n@NgModule({})\nexport class DelonAuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonAuthModule,\n      providers: [\n        { provide: WINDOW, useValue: window },\n        DelonAuthConfig,\n        SimpleGuard,\n        JWTGuard,\n        { provide: DA_STORE_TOKEN, useClass: LocalStorageStore },\n        { provide: DA_SERVICE_TOKEN, useClass: TokenService },\n      ],\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
