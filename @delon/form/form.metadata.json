{"__symbolic":"module","version":4,"metadata":{"DelonFormConfig":{"__symbolic":"class","members":{}},"useFactory":{"__symbolic":"function","parameters":["schemaValidatorFactory","options"],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"FormPropertyFactory"},"arguments":[{"__symbolic":"reference","name":"schemaValidatorFactory"},{"__symbolic":"reference","name":"options"}]}},"SFComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":35,"character":1},"arguments":[{"selector":"sf, [sf]","preserveWhitespaces":false,"providers":[{"__symbolic":"reference","name":"WidgetFactory"},{"provide":{"__symbolic":"reference","name":"FormPropertyFactory"},"useFactory":{"__symbolic":"reference","name":"useFactory"},"deps":[{"__symbolic":"reference","name":"SchemaValidatorFactory"},{"__symbolic":"reference","name":"DelonFormConfig"}]},{"__symbolic":"reference","name":"ɵa"}],"host":{"[class.sf]":"true","[class.sf-search]":"mode === 'search'","[class.sf-edit]":"mode === 'edit'","$quoted$":["[class.sf]","[class.sf-search]","[class.sf-edit]"]},"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":53,"character":19},"member":"OnPush"},"template":"<ng-template #con>\n  <ng-content></ng-content>\n</ng-template>\n<form nz-form [nzLayout]=\"layout\" (submit)=\"onSubmit($event)\" [attr.autocomplete]=\"autocomplete\">\n  <sf-item [formProperty]=\"rootProperty\"></sf-item>\n  <ng-container *ngIf=\"button !== 'none'; else con\">\n    <nz-form-item [ngClass]=\"_btn.render.class\" class=\"sf-btns\" [fixed-label]=\"_btn.render.spanLabelFixed\">\n      <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"_btn.render.grid.span\" [nzOffset]=\"_btn.render.grid.offset\"\n              [nzXs]=\"_btn.render.grid.xs\" [nzSm]=\"_btn.render.grid.sm\" [nzMd]=\"_btn.render.grid.md\"\n              [nzLg]=\"_btn.render.grid.lg\" [nzXl]=\"_btn.render.grid.xl\">\n        <div class=\"ant-form-item-control\">\n          <ng-container *ngIf=\"button; else con\">\n            <button type=\"submit\" nz-button [nzType]=\"_btn.submit_type\" [disabled]=\"liveValidate && !valid\">{{_btn.submit}}</button>\n            <button *ngIf=\"_btn.reset\" (click)=\"reset(true)\" type=\"button\" nz-button [nzType]=\"_btn.reset_type\">{{_btn.reset}}</button>\n          </ng-container>\n        </div>\n      </nz-col>\n    </nz-form-item>\n  </ng-container>\n</form>\n"}]}],"members":{"layout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":3}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":3}}]}],"ui":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":81,"character":3}}]}],"formData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":3}}]}],"button":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":94,"character":3}}]}],"liveValidate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":3}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@delon/util","name":"InputBoolean","line":103,"character":3}}]}],"autocomplete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":107,"character":3}}]}],"firstVisual":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":111,"character":3}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@delon/util","name":"InputBoolean","line":112,"character":3}}]}],"mode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":116,"character":3}}]}],"formChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":140,"character":3}}]}],"formSubmit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":144,"character":3}}]}],"formReset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":148,"character":3}}]}],"formError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":152,"character":3}}]}],"onSubmit":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FormPropertyFactory"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"DelonFormConfig"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":179,"character":16},{"__symbolic":"reference","module":"@delon/theme","name":"DelonLocaleService","line":180,"character":18}]}],"coverProperty":[{"__symbolic":"method"}],"coverButtonProperty":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"_addTpl":[{"__symbolic":"method"}],"attachCustomRender":[{"__symbolic":"method"}],"validator":[{"__symbolic":"method"}],"refreshSchema":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"SFItemComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"sf-item","template":"<ng-template #target></ng-template>"}]}],"members":{"formProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"container":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":30,"character":3},"arguments":["target",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":30,"character":31}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WidgetFactory"},{"__symbolic":"reference","name":"ɵa"}]}],"onWidgetInstanciated":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"SFFixedDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":10,"character":1},"arguments":[{"selector":"[fixed-label]"}]}],"members":{"num":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3},"arguments":["fixed-label"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@delon/util","name":"InputNumber","line":16,"character":3}}]}],"init":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":36,"character":18},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":36,"character":46}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"DelonFormModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":80,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":81,"character":12},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":81,"character":26},{"__symbolic":"reference","module":"@delon/util","name":"DelonUtilModule","line":81,"character":39},{"__symbolic":"reference","module":"@delon/theme","name":"DelonLocaleModule","line":81,"character":56},{"__symbolic":"reference","module":"ng-zorro-antd","name":"NgZorroAntdModule","line":81,"character":75}],"declarations":[{"__symbolic":"reference","name":"SFComponent"},{"__symbolic":"reference","name":"SFItemComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"SFFixedDirective"},{"__symbolic":"reference","name":"ObjectWidget"},{"__symbolic":"reference","name":"ArrayWidget"},{"__symbolic":"reference","name":"StringWidget"},{"__symbolic":"reference","name":"NumberWidget"},{"__symbolic":"reference","name":"DateWidget"},{"__symbolic":"reference","name":"TimeWidget"},{"__symbolic":"reference","name":"RadioWidget"},{"__symbolic":"reference","name":"CheckboxWidget"},{"__symbolic":"reference","name":"BooleanWidget"},{"__symbolic":"reference","name":"TextareaWidget"},{"__symbolic":"reference","name":"SelectWidget"},{"__symbolic":"reference","name":"TreeSelectWidget"},{"__symbolic":"reference","name":"TagWidget"},{"__symbolic":"reference","name":"UploadWidget"},{"__symbolic":"reference","name":"TransferWidget"},{"__symbolic":"reference","name":"SliderWidget"},{"__symbolic":"reference","name":"RateWidget"},{"__symbolic":"reference","name":"AutoCompleteWidget"},{"__symbolic":"reference","name":"CascaderWidget"},{"__symbolic":"reference","name":"MentionWidget"},{"__symbolic":"reference","name":"CustomWidget"},{"__symbolic":"reference","name":"ɵd"}],"entryComponents":[{"__symbolic":"reference","name":"ObjectWidget"},{"__symbolic":"reference","name":"ArrayWidget"},{"__symbolic":"reference","name":"StringWidget"},{"__symbolic":"reference","name":"NumberWidget"},{"__symbolic":"reference","name":"DateWidget"},{"__symbolic":"reference","name":"TimeWidget"},{"__symbolic":"reference","name":"RadioWidget"},{"__symbolic":"reference","name":"CheckboxWidget"},{"__symbolic":"reference","name":"BooleanWidget"},{"__symbolic":"reference","name":"TextareaWidget"},{"__symbolic":"reference","name":"SelectWidget"},{"__symbolic":"reference","name":"TreeSelectWidget"},{"__symbolic":"reference","name":"TagWidget"},{"__symbolic":"reference","name":"UploadWidget"},{"__symbolic":"reference","name":"TransferWidget"},{"__symbolic":"reference","name":"SliderWidget"},{"__symbolic":"reference","name":"RateWidget"},{"__symbolic":"reference","name":"AutoCompleteWidget"},{"__symbolic":"reference","name":"CascaderWidget"},{"__symbolic":"reference","name":"MentionWidget"},{"__symbolic":"reference","name":"CustomWidget"},{"__symbolic":"reference","name":"ɵd"}],"exports":[{"__symbolic":"reference","name":"SFComponent"},{"__symbolic":"reference","name":"SFItemComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"SFFixedDirective"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"DelonFormModule"},"providers":[{"__symbolic":"reference","name":"DelonFormConfig"},{"provide":{"__symbolic":"reference","name":"SchemaValidatorFactory"},"useClass":{"__symbolic":"reference","name":"AjvSchemaValidatorFactory"}},{"provide":{"__symbolic":"reference","name":"WidgetRegistry"},"useClass":{"__symbolic":"reference","name":"NzWidgetRegistry"}}]}}}},"SFSchemaDefinition":{"__symbolic":"interface"},"SFSchemaEnum":{"__symbolic":"interface"},"SFSchemaEnumType":{"__symbolic":"interface"},"SFSchema":{"__symbolic":"interface"},"SFGridSizeSchema":{"__symbolic":"interface"},"SFGridSchema":{"__symbolic":"interface"},"SFRenderSchema":{"__symbolic":"interface"},"SFHorizontalLayoutSchema":{"__symbolic":"interface"},"SFArraySchema":{"__symbolic":"interface"},"SFInputSchema":{"__symbolic":"interface"},"SFDataSchema":{"__symbolic":"interface"},"SFUISchemaItem":{"__symbolic":"interface"},"SFUISchema":{"__symbolic":"interface"},"SFUISchemaItemRun":{"__symbolic":"interface"},"SFButton":{"__symbolic":"interface"},"SFRenderButton":{"__symbolic":"interface"},"ERRORSDEFAULT":{"false schema":"布尔模式出错","$ref":"无法找到引用{ref}","additionalItems":"不允许超过{ref}","additionalProperties":"不允许有额外的属性","anyOf":"数据应为 anyOf 所指定的其中一个","dependencies":"应当拥有属性{property}的依赖属性{deps}","enum":"应当是预设定的枚举值之一","format":"格式不正确","type":"类型应当是 {type}","required":"必填项","maxLength":"至多 {limit} 个字符","minLength":"至少 {limit} 个字符以上","minimum":"必须 {comparison}{limit}","formatMinimum":"必须 {comparison}{limit}","maximum":"必须 {comparison}{limit}","formatMaximum":"必须 {comparison}{limit}","maxItems":"不应多于 {limit} 个项","minItems":"不应少于 {limit} 个项","maxProperties":"不应多于 {limit} 个属性","minProperties":"不应少于 {limit} 个属性","multipleOf":"应当是 {multipleOf} 的整数倍","not":"不应当匹配 \"not\" schema","oneOf":"只能匹配一个 \"oneOf\" 中的 schema","pattern":"数据格式不正确","uniqueItems":"不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)","custom":"格式不正确","propertyNames":"属性名 \"{propertyName}\" 无效","patternRequired":"应当有属性匹配模式 {missingPattern}","switch":"由于 {caseIndex} 失败，未通过 \"switch\" 校验","const":"应当等于常量","contains":"应当包含一个有效项","formatExclusiveMaximum":"formatExclusiveMaximum 应当是布尔值","formatExclusiveMinimum":"formatExclusiveMinimum 应当是布尔值","if":"应当匹配模式 \"{failingKeyword}\"","$quoted$":["false schema","$ref"]},"ErrorData":{"__symbolic":"interface"},"ErrorSchema":{"__symbolic":"interface"},"FormProperty":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SchemaValidatorFactory"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"SFUISchema"},{"__symbolic":"error","message":"Expression form not supported","line":33,"character":14,"module":"./src/model/form.property"},{"__symbolic":"reference","name":"PropertyGroup"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"DelonFormConfig"}]}],"setValue":[{"__symbolic":"method"}],"resetValue":[{"__symbolic":"method"}],"_hasValue":[{"__symbolic":"method"}],"_updateValue":[{"__symbolic":"method"}],"updateValueAndValidity":[{"__symbolic":"method"}],"searchProperty":[{"__symbolic":"method"}],"findRoot":[{"__symbolic":"method"}],"isEmptyData":[{"__symbolic":"method"}],"_runValidation":[{"__symbolic":"method"}],"setCustomErrors":[{"__symbolic":"method"}],"mergeErrors":[{"__symbolic":"method"}],"setErrors":[{"__symbolic":"method"}],"setParentAndPlatErrors":[{"__symbolic":"method"}],"setVisible":[{"__symbolic":"method"}],"_bindVisibility":[{"__symbolic":"method"}]}},"PropertyGroup":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormProperty"},"members":{"getProperty":[{"__symbolic":"method"}],"forEachChild":[{"__symbolic":"method"}],"forEachChildRecursive":[{"__symbolic":"method"}],"_bindVisibility":[{"__symbolic":"method"}],"_bindVisibilityRecursive":[{"__symbolic":"method"}],"isRoot":[{"__symbolic":"method"}]}},"FormPropertyFactory":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SchemaValidatorFactory"},{"__symbolic":"reference","name":"DelonFormConfig"}]}],"createProperty":[{"__symbolic":"method"}],"initializeRoot":[{"__symbolic":"method"}]}},"AtomicProperty":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormProperty"},"members":{"fallbackValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"resetValue":[{"__symbolic":"method"}],"_hasValue":[{"__symbolic":"method"}],"_updateValue":[{"__symbolic":"method"}]}},"ObjectProperty":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"PropertyGroup"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FormPropertyFactory"},{"__symbolic":"reference","name":"SchemaValidatorFactory"},{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"SFUISchema"},{"__symbolic":"error","message":"Expression form not supported","line":19,"character":14,"module":"./src/model/object.property"},{"__symbolic":"reference","name":"PropertyGroup"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"DelonFormConfig"}]}],"createProperties":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"resetValue":[{"__symbolic":"method"}],"_hasValue":[{"__symbolic":"method"}],"_updateValue":[{"__symbolic":"method"}]}},"ArrayProperty":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"PropertyGroup"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FormPropertyFactory"},{"__symbolic":"reference","name":"SchemaValidatorFactory"},{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"SFUISchema"},{"__symbolic":"error","message":"Expression form not supported","line":16,"character":14,"module":"./src/model/array.property"},{"__symbolic":"reference","name":"PropertyGroup"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"DelonFormConfig"}]}],"getProperty":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"resetValue":[{"__symbolic":"method"}],"_hasValue":[{"__symbolic":"method"}],"_updateValue":[{"__symbolic":"method"}],"addProperty":[{"__symbolic":"method"}],"resetProperties":[{"__symbolic":"method"}],"clearErrors":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}]}},"StringProperty":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"AtomicProperty"},"members":{"fallbackValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}]}},"NumberProperty":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"AtomicProperty"},"members":{"fallbackValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}]}},"BooleanProperty":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"AtomicProperty"},"members":{"fallbackValue":[{"__symbolic":"method"}]}},"Widget":{"__symbolic":"class","arity":1,"members":{"cls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":26,"character":3},"arguments":["class"]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":39,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":39,"character":12}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":40,"character":5},"arguments":[{"__symbolic":"reference","name":"SFComponent"}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":39,"character":51},{"__symbolic":"reference","name":"SFComponent"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"detectChanges":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}]}},"ControlWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Widget"},"members":{"reset":[{"__symbolic":"method"}]}},"ArrayLayoutWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Widget"},"members":{"reset":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ObjectLayoutWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Widget"},"members":{"reset":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ObjectWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ObjectLayoutWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sf-object","template":"\n  <ng-container *ngIf=\"grid; else noGrid\">\n    <nz-row [nzGutter]=\"grid.gutter\">\n      <ng-container *ngFor=\"let i of list\">\n        <ng-container *ngIf=\"i.property.visible && i.show\">\n          <nz-col\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n          </nz-col>\n        </ng-container>\n      </ng-container>\n    </nz-row>\n  </ng-container>\n  <ng-template #noGrid>\n    <ng-container *ngFor=\"let i of list\">\n      <ng-container *ngIf=\"i.property.visible && i.show\">\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n      </ng-container>\n    </ng-container>\n  </ng-template>","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"ArrayWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ArrayLayoutWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-array","template":"\n  <nz-form-item>\n    <nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n      <label>\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n      <div class=\"add\">\n        <button nz-button [nzType]=\"addType\" [disabled]=\"addDisabled\" (click)=\"addItem()\" [innerHTML]=\"addTitle\"></button>\n      </div>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n\n        <nz-row class=\"sf-array-container\">\n          <ng-container *ngFor=\"let i of formProperty.properties; let idx=index\">\n            <nz-col *ngIf=\"i.visible && !i.ui.hidden\" [nzSpan]=\"arraySpan\" [attr.data-index]=\"idx\" class=\"sf-array-item\">\n              <nz-card>\n                <sf-item [formProperty]=\"i\"></sf-item>\n                <span *ngIf=\"removeTitle\" class=\"remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\n                  <i class=\"anticon anticon-delete\"></i>\n                </span>\n              </nz-card>\n            </nz-col>\n          </ng-container>\n        </nz-row>\n\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n\n      </div>\n    </nz-col>\n  </nz-form-item>\n  "}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"addItem":[{"__symbolic":"method"}],"removeItem":[{"__symbolic":"method"}]}},"StringWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-string","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template #ipt>\n      <input nz-input\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.type]=\"ui.type || 'text'\"\n        [attr.placeholder]=\"ui.placeholder\"\n        [attr.autocomplete]=\"ui.autocomplete\"\n        [attr.autoFocus]=\"ui.autofocus\">\n    </ng-template>\n\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\n      <nz-input-group\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\n      </nz-input-group>\n    </ng-container>\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"NumberWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-number","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-input-number\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzFormatter]=\"formatter\"\n      [nzParser]=\"parser\"\n      [nzPrecision]=\"ui.precision\"\n      [nzPlaceHolder]=\"ui.placeholder || ''\">\n    </nz-input-number>\n  </sf-item-wrap>","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"DateWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"sf-date","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <ng-container [ngSwitch]=\"mode\">\n\n      <nz-month-picker *ngSwitchCase=\"'month'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      ></nz-month-picker>\n\n      <nz-week-picker *ngSwitchCase=\"'week'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n      ></nz-week-picker>\n\n      <nz-range-picker *ngSwitchCase=\"'range'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzDisabledTime]=\"ui.disabledTime\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n        [nzRanges]=\"ui.ranges\"\n        (nzOnOk)=\"_ok($event)\"\n      ></nz-range-picker>\n\n      <nz-date-picker *ngSwitchDefault\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzDisabledTime]=\"ui.disabledTime\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n        [nzShowTime]=\"ui.showTime\"\n        [nzShowToday]=\"i.showToday\"\n        (nzOnOk)=\"_ok($event)\"\n      ></nz-date-picker>\n    </ng-container>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"_change":[{"__symbolic":"method"}],"_openChange":[{"__symbolic":"method"}],"_ok":[{"__symbolic":"method"}],"setEnd":[{"__symbolic":"method"}]}},"TimeWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sf-time","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"_change":[{"__symbolic":"method"}]}},"RadioWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"sf-radio","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-radio-group\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzName]=\"id\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\">\n      <ng-container *ngIf=\"styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n      <ng-container *ngIf=\"!styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio-button\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n    </nz-radio-group>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"reset":[{"__symbolic":"method"}]}},"CheckboxWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sf-checkbox","template":"\n  <ng-template #all>\n    <label *ngIf=\"ui.checkAll\" nz-checkbox class=\"mr-sm\"\n      [(ngModel)]=\"allChecked\"\n      [nzIndeterminate]=\"indeterminate\"\n      (click)=\"onAllChecked($event)\">\n      {{ ui.checkAllText || '全选' }}\n    </label>\n  </ng-template>\n  <nz-form-item [style.width.px]=\"ui.width\">\n    <nz-col *ngIf=\"data.length > 0\" [nzSpan]=\"label\" class=\"ant-form-item-label\">\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"control\" [nzOffset]=\"offset\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n\n          <ng-container *ngIf=\"data.length === 0\">\n            <label nz-checkbox\n              [nzDisabled]=\"disabled\"\n              [ngModel]=\"value\"\n              (ngModelChange)=\"_setValue($event)\">\n              <span [innerHTML]=\"schema.title\"></span>\n              <span class=\"optional\">\n                {{ ui.optional }}\n                <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n                  <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n                </nz-tooltip>\n              </span>\n            </label>\n          </ng-container>\n          <ng-container *ngIf=\"data.length > 0\">\n            <ng-container *ngIf=\"grid_span === 0\">\n              <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n              <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\"></nz-checkbox-group>\n            </ng-container>\n            <ng-container *ngIf=\"grid_span !== 0\">\n              <nz-checkbox-wrapper class=\"checkbox-grid-list\" (nzOnChange)=\"groupInGridChange($event)\">\n                <nz-row>\n                  <nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\n                    <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n                  </nz-col>\n                  <nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\n                    <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{i.label}}</label>\n                  </nz-col>\n                </nz-row>\n              </nz-checkbox-wrapper>\n            </ng-container>\n          </ng-container>\n\n          <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n          <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>\n  ","preserveWhitespaces":false}]}],"members":{"reset":[{"__symbolic":"method"}],"_setValue":[{"__symbolic":"method"}],"notifySet":[{"__symbolic":"method"}],"groupInGridChange":[{"__symbolic":"method"}],"onAllChecked":[{"__symbolic":"method"}],"updateAllChecked":[{"__symbolic":"method"}],"notifyChange":[{"__symbolic":"method"}]}},"BooleanWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-boolean","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-switch\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzCheckedChildren]=\"ui.checkedChildren\"\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\n    </nz-switch>\n  </sf-item-wrap>","preserveWhitespaces":false}]}],"members":{}},"TextareaWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"sf-textarea","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <textarea nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"autosize\">\n    </textarea>\n\n  </sf-item-wrap>","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"SelectWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sf-select","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-select\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzAllowClear]=\"i.allowClear\"\n      [nzAutoFocus]=\"i.autoFocus\"\n      [nzDropdownClassName]=\"i.dropdownClassName\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzServerSearch]=\"i.serverSearch\"\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\n      [nzMode]=\"i.mode\"\n      [nzNotFoundContent]=\"i.notFoundContent\"\n      [nzShowSearch]=\"i.showSearch\"\n      (nzOpenChange)=\"openChange($event)\"\n      (nzOnSearch)=\"searchChange($event)\"\n      (nzScrollToBottom)=\"scrollToBottom($event)\">\n      <ng-container *ngIf=\"!hasGroup\">\n        <nz-option\n          *ngFor=\"let o of data\"\n          [nzLabel]=\"o.label\"\n          [nzValue]=\"o.value\"\n          [nzDisabled]=\"o.disabled\">\n        </nz-option>\n      </ng-container>\n      <ng-container *ngIf=\"hasGroup\">\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\n          <nz-option\n            *ngFor=\"let o of i.children\"\n            [nzLabel]=\"o.label\"\n            [nzValue]=\"o.value\"\n            [nzDisabled]=\"o.disabled\">\n          </nz-option>\n        </nz-option-group>\n      </ng-container>\n    </nz-select>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"change":[{"__symbolic":"method"}],"openChange":[{"__symbolic":"method"}],"searchChange":[{"__symbolic":"method"}],"scrollToBottom":[{"__symbolic":"method"}]}},"TreeSelectWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"sf-tree-select","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-tree-select\n      [nzAllowClear]=\"i.allowClear\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzDisabled]=\"disabled\"\n      [nzShowSearch]=\"i.showSearch\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzDropdownStyle]=\"ui.dropdownStyle\"\n      [nzMultiple]=\"i.multiple\"\n      [nzSize]=\"ui.size\"\n      [nzCheckable]=\"i.checkable\"\n      [nzShowExpand]=\"i.showExpand\"\n      [nzShowLine]=\"i.showLine\"\n      [nzAsyncData]=\"i.asyncData\"\n      [nzNodes]=\"data\"\n      [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n      [nzDefaultExpandedKeys]=\"ui.defaultExpandedKeys\"\n      [nzDisplayWith]=\"i.displayWith\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      (nzExpandChange)=\"expandChange($event)\">\n    </nz-tree-select>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"dc":[{"__symbolic":"method"}],"tranData":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"change":[{"__symbolic":"method"}],"expandChange":[{"__symbolic":"method"}]}},"TagWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sf-tag","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-tag\n      *ngFor=\"let i of data\"\n      nzMode=\"checkable\"\n      [nzChecked]=\"i.checked\"\n      (nzAfterClose)=\"_afterClose()\"\n      (nzOnClose)=\"_close($event)\"\n      (nzCheckedChange)=\"onChange(i)\">\n      {{i.label}}\n    </nz-tag>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"reset":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"_afterClose":[{"__symbolic":"method"}],"_close":[{"__symbolic":"method"}],"updateValue":[{"__symbolic":"method"}]}},"UploadWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"sf-upload","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-upload\n      [nzType]=\"i.type\"\n      [nzFileList]=\"fileList\"\n      [nzDisabled]=\"disabled\"\n      [nzAction]=\"i.action\"\n      [nzAccept]=\"i.accept\"\n      [nzLimit]=\"i.limit\"\n      [nzSize]=\"i.size\"\n      [nzFileType]=\"i.fileType\"\n      [nzHeaders]=\"ui.headers\"\n      [nzData]=\"ui.data\"\n      [nzListType]=\"i.listType\"\n      [nzMultiple]=\"i.multiple\"\n      [nzName]=\"i.name\"\n      [nzShowUploadList]=\"i.showUploadList\"\n      [nzWithCredentials]=\"i.withCredentials\"\n      [nzRemove]=\"ui.remove\"\n      [nzPreview]=\"handlePreview\"\n      (nzChange)=\"change($event)\">\n      <ng-container [ngSwitch]=\"btnType\">\n        <ng-container *ngSwitchCase=\"'plus'\">\n          <i class=\"anticon anticon-plus\"></i>\n          <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'drag'\">\n          <p class=\"ant-upload-drag-icon\"><i class=\"anticon anticon-inbox\"></i></p>\n          <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\n          <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <button type=\"button\" nz-button>\n            <i class=\"anticon anticon-upload\"></i><span [innerHTML]=\"i.text\"></span>\n          </button>\n        </ng-container>\n      </ng-container>\n    </nz-upload>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":57,"character":18},{"__symbolic":"reference","module":"ng-zorro-antd","name":"NzModalService","line":57,"character":55}]}],"ngOnInit":[{"__symbolic":"method"}],"change":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"notify":[{"__symbolic":"method"}]}},"TransferWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"sf-transfer","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-transfer\n      [nzDataSource]=\"list\"\n      [nzTitles]=\"i.titles\"\n      [nzOperations]=\"i.operations\"\n      [nzListStyle]=\"ui.listStyle\"\n      [nzItemUnit]=\"i.itemUnit\"\n      [nzItemsUnit]=\"i.itemsUnit\"\n      [nzShowSearch]=\"ui.showSearch\"\n      [nzFilterOption]=\"ui.filterOption\"\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzCanMove]=\"_canMove\"\n      (nzChange)=\"_change($event)\"\n      (nzSearchChange)=\"_searchChange($event)\"\n      (nzSelectChange)=\"_selectChange($event)\">\n    </nz-transfer>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"notify":[{"__symbolic":"method"}],"_change":[{"__symbolic":"method"}],"_searchChange":[{"__symbolic":"method"}],"_selectChange":[{"__symbolic":"method"}]}},"SliderWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-slider","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-slider\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzRange]=\"ui.range\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzMarks]=\"marks\"\n      [nzDots]=\"ui.dots\"\n      [nzIncluded]=\"included\"\n      [nzVertical]=\"ui.vertical\"\n      [nzTipFormatter]=\"_formatter\"\n      (nzOnAfterChange)=\"_afterChange($event)\">\n    </nz-slider>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"_afterChange":[{"__symbolic":"method"}]}},"RateWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"sf-rate","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-rate\n      [nzDisabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzAllowClear]=\"allowClear\"\n      [nzAllowHalf]=\"allowHalf\"\n      [nzAutoFocus]=\"autoFocus\"\n      [nzCount]=\"count\"></nz-rate>\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"genText":[{"__symbolic":"method"}]}},"EMAILSUFFIX":["qq.com","163.com","gmail.com","126.com","aliyun.com"],"AutoCompleteWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"sf-autocomplete","template":"\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <input nz-input [nzAutocomplete]=\"auto\"\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.placeholder]=\"ui.placeholder\"\n        autocomplete=\"off\">\n      <nz-autocomplete #auto\n        [nzBackfill]=\"i.backfill\"\n        [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\n        [nzWidth]=\"i.width\"\n        (selectionChange)=\"setValue($event?.nzValue)\">\n        <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i.label\">{{i.label}}</nz-auto-option>\n      </nz-autocomplete>\n    </sf-item-wrap>\n    ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"addEmailSuffix":[{"__symbolic":"method"}]}},"CascaderWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sf-cascader","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-cascader\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"_change($event)\"\n      [nzOptions]=\"data\"\n      [nzAllowClear]=\"ui.allowClear\"\n      [nzAutoFocus]=\"ui.autoFocus\"\n      [nzChangeOn]=\"ui.changeOn\"\n      [nzChangeOnSelect]=\"ui.changeOnSelect\"\n      [nzColumnClassName]=\"ui.columnClassName\"\n      [nzExpandTrigger]=\"ui.expandTrigger\"\n      [nzMenuClassName]=\"ui.menuClassName\"\n      [nzMenuStyle]=\"ui.menuStyle\"\n      [nzLabelProperty]=\"ui.labelProperty\"\n      [nzValueProperty]=\"ui.valueProperty\"\n      [nzLoadData]=\"loadData\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzShowArrow]=\"showArrow\"\n      [nzShowInput]=\"showInput\"\n      [nzShowSearch]=\"ui.showSearch\"\n      (nzClear)=\"_clear($event)\"\n      (nzVisibleChange)=\"_visibleChange($event)\"\n      (nzSelect)=\"_select($event)\"\n      (nzSelectionChange)=\"_selectionChange($event)\">\n    </nz-cascader>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"_visibleChange":[{"__symbolic":"method"}],"_change":[{"__symbolic":"method"}],"_selectionChange":[{"__symbolic":"method"}],"_select":[{"__symbolic":"method"}],"_clear":[{"__symbolic":"method"}]}},"MentionWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"sf-mention","template":"\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n      <nz-mention #mentions\n        [nzSuggestions]=\"data\"\n        [nzValueWith]=\"i.valueWith\"\n        [nzLoading]=\"loading\"\n        [nzNotFoundContent]=\"i.notFoundContent\"\n        [nzPlacement]=\"i.placement\"\n        [nzPrefix]=\"i.prefix\"\n        (nzOnSelect)=\"_select($event)\"\n        (nzOnSearchChange)=\"_search($event)\">\n\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\n          <input nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            autocomplete=\"off\">\n        </ng-container>\n\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\n          <textarea nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            [nzAutosize]=\"ui.autosize\">\n          </textarea>\n        </ng-container>\n\n      </nz-mention>\n\n    </sf-item-wrap>\n    ","preserveWhitespaces":false}]}],"members":{"mentionChild":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":58,"character":3},"arguments":["mentions"]}]}],"ngOnInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"_select":[{"__symbolic":"method"}],"_search":[{"__symbolic":"method"}]}},"CustomWidget":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-custom","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template\n      [ngTemplateOutlet]=\"$any(ui)._render\"\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\n\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{}},"NzWidgetRegistry":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"WidgetRegistry"},"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"WidgetRegistry":{"__symbolic":"class","members":{"setDefault":[{"__symbolic":"method"}],"register":[{"__symbolic":"method"}],"has":[{"__symbolic":"method"}],"getType":[{"__symbolic":"method"}]}},"WidgetFactory":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":33,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WidgetRegistry"},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":37,"character":22}]}],"createWidget":[{"__symbolic":"method"}]}},"SchemaValidatorFactory":{"__symbolic":"class","members":{"createValidatorFn":[{"__symbolic":"method"}]}},"AjvSchemaValidatorFactory":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"SchemaValidatorFactory"},"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":18,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":19,"character":5},"arguments":[{"__symbolic":"reference","name":"DelonFormConfig"}]}]],"parameters":[{"__symbolic":"reference","name":"DelonFormConfig"}]}],"createValidatorFn":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"destroy":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"sf-item-wrap","template":"\n  <nz-form-item [style.width.px]=\"ui.width\">\n    <nz-col *ngIf=\"showTitle\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n        <ng-content></ng-content>\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>"}]}],"members":{"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"ui":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"showError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":3,"character":1},"arguments":[{"selector":"[sf-template]"}]}],"members":{"path":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":8,"character":3},"arguments":["sf-template"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]},{"__symbolic":"reference","name":"SFComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ControlWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sf-text","template":"\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    {{ value || ui.defaultText || '-' }}\n  </sf-item-wrap>\n  ","preserveWhitespaces":false}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"interface"}},"origins":{"DelonFormConfig":"./src/config","useFactory":"./src/sf.component","SFComponent":"./src/sf.component","SFItemComponent":"./src/sf-item.component","SFFixedDirective":"./src/sf-fixed.directive","DelonFormModule":"./src/module","SFSchemaDefinition":"./src/schema/index","SFSchemaEnum":"./src/schema/index","SFSchemaEnumType":"./src/schema/index","SFSchema":"./src/schema/index","SFGridSizeSchema":"./src/schema/ui","SFGridSchema":"./src/schema/ui","SFRenderSchema":"./src/schema/ui","SFHorizontalLayoutSchema":"./src/schema/ui","SFArraySchema":"./src/schema/ui","SFInputSchema":"./src/schema/ui","SFDataSchema":"./src/schema/ui","SFUISchemaItem":"./src/schema/ui","SFUISchema":"./src/schema/ui","SFUISchemaItemRun":"./src/schema/ui","SFButton":"./src/interface","SFRenderButton":"./src/interface","ERRORSDEFAULT":"./src/errors","ErrorData":"./src/errors","ErrorSchema":"./src/errors","FormProperty":"./src/model/form.property","PropertyGroup":"./src/model/form.property","FormPropertyFactory":"./src/model/form.property.factory","AtomicProperty":"./src/model/atomic.property","ObjectProperty":"./src/model/object.property","ArrayProperty":"./src/model/array.property","StringProperty":"./src/model/string.property","NumberProperty":"./src/model/number.property","BooleanProperty":"./src/model/boolean.property","Widget":"./src/widget","ControlWidget":"./src/widget","ArrayLayoutWidget":"./src/widget","ObjectLayoutWidget":"./src/widget","ObjectWidget":"./src/widgets/object/object.widget","ArrayWidget":"./src/widgets/array/array.widget","StringWidget":"./src/widgets/string/string.widget","NumberWidget":"./src/widgets/number/number.widget","DateWidget":"./src/widgets/date/date.widget","TimeWidget":"./src/widgets/time/time.widget","RadioWidget":"./src/widgets/radio/radio.widget","CheckboxWidget":"./src/widgets/checkbox/checkbox.widget","BooleanWidget":"./src/widgets/boolean/boolean.widget","TextareaWidget":"./src/widgets/textarea/textarea.widget","SelectWidget":"./src/widgets/select/select.widget","TreeSelectWidget":"./src/widgets/tree-select/tree-select.widget","TagWidget":"./src/widgets/tag/tag.widget","UploadWidget":"./src/widgets/upload/upload.widget","TransferWidget":"./src/widgets/transfer/transfer.widget","SliderWidget":"./src/widgets/slider/slider.widget","RateWidget":"./src/widgets/rate/rate.widget","EMAILSUFFIX":"./src/widgets/autocomplete/autocomplete.widget","AutoCompleteWidget":"./src/widgets/autocomplete/autocomplete.widget","CascaderWidget":"./src/widgets/cascader/cascader.widget","MentionWidget":"./src/widgets/mention/mention.widget","CustomWidget":"./src/widgets/custom/custom.widget","NzWidgetRegistry":"./src/widgets/nz-widget.registry","WidgetRegistry":"./src/widget.factory","WidgetFactory":"./src/widget.factory","SchemaValidatorFactory":"./src/validator.factory","AjvSchemaValidatorFactory":"./src/validator.factory","ɵa":"./src/terminator.service","ɵb":"./src/sf-item-wrap.component","ɵc":"./src/widgets/custom/sf-template.directive","ɵd":"./src/widgets/text/text.widget","ɵe":"./src/schema"},"importAs":"@delon/form"}