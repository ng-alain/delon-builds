{"version":3,"file":"widgets-tree-select.mjs","sources":["../../../../packages/form/widgets/tree-select/widget.ts","../../../../packages/form/widgets/tree-select/module.ts","../../../../packages/form/widgets/tree-select/index.ts","../../../../packages/form/widgets/tree-select/widgets-tree-select.ts"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ControlUIWidget, DelonFormModule, SFSchemaEnum, SFValue, getData, toBool } from '@delon/form';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/core/tree';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\n\nimport type { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  template: `<sf-item-wrap\n    [id]=\"id\"\n    [schema]=\"schema\"\n    [ui]=\"ui\"\n    [showError]=\"showError\"\n    [error]=\"error\"\n    [showTitle]=\"schema.title\"\n  >\n    <nz-tree-select\n      [nzId]=\"id\"\n      [nzAllowClear]=\"i.allowClear\"\n      [nzPlaceHolder]=\"ui.placeholder!\"\n      [nzDropdownStyle]=\"ui.dropdownStyle!\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      [nzSize]=\"ui.size!\"\n      [nzExpandedKeys]=\"ui.expandedKeys!\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzMaxTagCount]=\"ui.maxTagCount!\"\n      [nzMaxTagPlaceholder]=\"ui.maxTagPlaceholder || null\"\n      [nzTreeTemplate]=\"ui.treeTemplate!\"\n      [nzDisabled]=\"disabled\"\n      [nzShowSearch]=\"i.showSearch\"\n      [nzShowIcon]=\"i.showIcon\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzMultiple]=\"i.multiple\"\n      [nzHideUnMatched]=\"i.hideUnMatched\"\n      [nzCheckable]=\"i.checkable\"\n      [nzShowExpand]=\"i.showExpand\"\n      [nzShowLine]=\"i.showLine\"\n      [nzCheckStrictly]=\"i.checkStrictly\"\n      [nzAsyncData]=\"asyncData\"\n      [nzNodes]=\"$any(data)\"\n      [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n      [nzDisplayWith]=\"i.displayWith!\"\n      [ngModel]=\"value\"\n      [nzVirtualHeight]=\"ui.virtualHeight!\"\n      [nzVirtualItemSize]=\"ui.virtualItemSize || 28\"\n      [nzVirtualMaxBufferPx]=\"ui.virtualMaxBufferPx || 500\"\n      [nzVirtualMinBufferPx]=\"ui.virtualMinBufferPx || 28\"\n      (ngModelChange)=\"change($event)\"\n      (nzExpandChange)=\"expandChange($event)\"\n    />\n  </sf-item-wrap>`,\n  encapsulation: ViewEncapsulation.None,\n  imports: [FormsModule, DelonFormModule, NzTreeSelectModule]\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  static readonly KEY = 'tree-select';\n\n  i!: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title)\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: NzSafeAny[] | NzSafeAny): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value == null ? this.ui.clearValue : value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { DelonFormModule, WidgetRegistry } from '@delon/form';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\n\nimport { TreeSelectWidget } from './widget';\n\n@NgModule({\n  imports: [FormsModule, DelonFormModule, NzTreeSelectModule, TreeSelectWidget]\n})\nexport class TreeSelectWidgetModule {\n  constructor(widgetRegistry: WidgetRegistry) {\n    widgetRegistry.register(TreeSelectWidget.KEY, TreeSelectWidget);\n  }\n}\n","import type { SFWidgetProvideConfig } from '@delon/form';\n\nimport { TreeSelectWidget } from './widget';\n\nexport * from './widget';\nexport * from './schema';\nexport * from './module';\n\nexport function withTreeSelectWidget(): SFWidgetProvideConfig {\n  return { KEY: TreeSelectWidget.KEY, type: TreeSelectWidget };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2","i1"],"mappings":"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"}