{"version":3,"sources":["ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","node_modules/tslib/tslib.es6.js","ng://@delon/form/src/utils.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","submit_type","reset_type","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","di","args","_i","console","warn","retrieveSchema","schema","definitions","$refSchema","findSchemaDefinition","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","localSchema","__rest","indexOf","getOwnPropertySymbols","resolveIf","ui","properties","allKeys","keys","ifKeys","detectKey","then","hasElse","else","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","takeWhile","of","TerminatorService","onDestroy","Subject","destroy","FormProperty","schemaValidatorFactory","parent","path","options","BehaviorSubject","schemaValidator","createValidatorFn","ingoreKeywords","default","_parent","_root","root","PropertyGroup","_path","_valueChanges","_errorsChanges","_value","_errors","_visible","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","errors","_this","isEmpty","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","idx","message","_custom","mergeErrors","newErrors","emitFormat","v","params","setParentAndPlatErrors","_objErrors","platErrors","visible","setVisible","_visibilityChanges","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","AtomicProperty","setValue","fallbackValue","reset","_hasValue","NumberProperty","parseFloat","parseInt","StringProperty","BooleanProperty","ArrayProperty","formPropertyFactory","pos","isNaN","clearErrors","resetProperties","_","addProperty","newProperty","createProperty","items","value_1","value_1_1","add","remove","index","splice","ObjectProperty","createProperties","_propertiesId","orderedProperties","orderProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","title","FormPropertyFactory","tick","refSchema","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","TypeError","initializeRoot","rootProperty","SchemaValidatorFactory","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Optional","Inject","WidgetRegistry","setDefault","defaultWidget","register","widgets","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","Injectable","ComponentFactoryResolver","useFactory","SFComponent","terminator","cd","i18n","Map","EventEmitter","liveValidate","firstVisual","autocomplete","i18n$","change","locale","_inited","coverButtonProperty","_mode","layout","_btn","submit","search","edit","_valid","_item","onSubmit","preventDefault","stopPropagation","valid","formSubmit","emit","coverProperty","isHorizontal","_schema","inFn","parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","dateEndProperty","hidden","inIfFn","$items","onlyVisual","size","_ui","render","button","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","refreshSchema","_addTpl","templateRef","_renders","set","_render","attachCustomRender","tpl","pui","formError","newSchema","newUI","_formData","formChange","errorsChanges","Promise","resolve","formReset","ngOnDestroy","unsubscribe","Component","selector","template","preserveWhitespaces","providers","provide","deps","host","[class.sf]","[class.sf-search]","[class.sf-edit]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","DelonLocaleService","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","sfComp","debug","showError","markForCheck","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ObjectWidget","_b","propertiesId","_c","show","ArrayWidget","arraySpan","addTitle","addType","removeTitle","removable","addItem","removeItem","StringWidget","NumberWidget","min","exclusiveMinimum","max","exclusiveMaximum","step","Math","trunc","formatter","parser","DateWidget","flatRange","displayFormat","allowClear","showToday","displayValue","endProperty","_change","setEnd","_openChange","status","_ok","TimeWidget","allowEmpty","clearText","defaultOpenValue","Date","hideDisabledOptions","hourStep","minuteStep","secondStep","toString","UTC","getHours","getMinutes","getSeconds","RadioWidget","styleType","data","CheckboxWidget","control","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","allChecked","every","indeterminate","TextareaWidget","autosize","SelectWidget","autoFocus","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","notFoundContent","showSearch","hasGroup","group","openChange","searchChange","text","scrollToBottom","TreeSelectWidget","dc","setTimeout","tranData","node","NzTreeNode","multiple","checkable","showExpand","showLine","defaultExpandAll","displayWith","expandChange","addChildren","TagWidget","onChange","updateValue","_afterClose","_close","UploadWidget","modalSrv","file","nzContent","url","thumbUrl","nzFooter","afterClose","action","accept","limit","fileType","listType","name","showUploadList","withCredentials","resReName","btnType","hint","notify","fileList","deepGet","response","pop","NzModalService","arg","TransferWidget","titles","operations","itemUnit","itemsUnit","_data","to","_a","_searchChange","_selectChange","SliderWidget","marks","included","_afterChange","RateWidget","count","allowHalf","hasText","genText","EMAILSUFFIX","AutoCompleteWidget","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","isAsync","orgTime","debounceTime","startWith","flatMap","filterData","fixData","addEmailSuffix","domain","CascaderWidget","showArrow","showInput","triggerAction","loadData","_visibleChange","_selectionChange","_select","_clear","MentionWidget","valueWith","placement","prefix","form","mentionChild","getMentions","_search","loading","tap","TextWidget","NzWidgetRegistry","BooleanWidget","CustomWidget","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","NgZorroAntdModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema':         `å¸å°æ¨¡å¼åºé`,\n  '$ref':                 `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems:        `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties:   `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf:                  `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies:           `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum:                   `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format:                 `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type:                   `ç±»ååºå½æ¯ {type}`,\n  required:               `å¿å¡«é¡¹`,\n  maxLength:              `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength:              `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum:                `å¿é¡» {comparison}{limit}`,\n  formatMinimum:          `å¿é¡» {comparison}{limit}`,\n  maximum:                `å¿é¡» {comparison}{limit}`,\n  formatMaximum:          `å¿é¡» {comparison}{limit}`,\n  maxItems:               `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems:               `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties:          `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties:          `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf:             `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not:                    `ä¸åºå½å¹é \"not\" schema`,\n  oneOf:                  `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern:                `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems:            `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom:                 `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames:          `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired:        `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch:                 `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const:                  `åºå½ç­äºå¸¸é`,\n  contains:               `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if:                     `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n  _custom?: boolean;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [ key: string ]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (value: any, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { SFUISchemaItem } from './schema/ui';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\n\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate? = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual? = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual? = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat? = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat? = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat? = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat? = 'x';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, of } from 'rxjs';\nimport { map, takeWhile } from 'rxjs/operators';\nimport { deepCopy } from '@delon/util';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  return value == null ? defaultValue : `${value}` !== 'false';\n}\n\nexport function di(...args) {\n  // tslint:disable-next-line:no-console\n  console.warn(...args);\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(\n  schema: SFSchema,\n  definitions: SFSchemaDefinition = {},\n): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\n\n  if (!schema.if.properties)\n    throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties),\n    ifKeys = Object.keys(schema.if.properties);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then.required);\n  schema.required = schema.required.concat(schema.then.required);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else.required);\n    schema.required = schema.required.concat(schema.else.required);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if.properties[key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\n  });\n\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse)\n    schema.else.required.forEach(\n      key => (ui[`$${key}`].visibleIf = visibleElse),\n    );\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\n    );\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(\n        `ui schema order list does not contain ${errorPropList(rest)}`,\n      );\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error(\n      'ui schema order list contains more than one wildcard item',\n    );\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return <SFSchemaEnum>{ label: item, value: item };\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => item.disabled = true);\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui\n      .asyncData(asyncArgs)\n      .pipe(\n        takeWhile(() => ui.__destroy !== true),\n        map(list => getEnum(list, formData, schema.readOnly)),\n      );\n  }\n  return of(getCopyEnum(schema.enum, formData, schema.readOnly));\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","// tslint:disable:no-use-before-declare\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { Widget } from '../widget';\nimport { isBlank } from '../utils';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: any) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: any = null;\n  widget: Widget<any>;\n  private _errors: ErrorData[] = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<any>(null);\n  private _errorsChanges = new BehaviorSubject<any>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    private options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = <PropertyGroup>(<any>this);\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type;\n  }\n\n  get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root || <PropertyGroup>(<any>this);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get errors() {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: any, onlySelf: boolean): any;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: any, onlySelf: boolean): any;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): any;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(\n    onlySelf = false,\n    emitValueEvent = true,\n    emitValidator = true,\n  ) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return <PropertyGroup>property;\n  }\n\n  // region: process errors\n\n  private isEmptyData(value: any) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach((err, idx: number) => {\n        if (!err.message)\n          throw new Error(\n            `èªå®ä¹æ ¡éªå¨å¿é¡»è³å°è¿åä¸ä¸ª 'message' å±æ§ï¼ç¨äºè¡¨ç¤ºéè¯¯ææ¬`,\n          );\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] ||\n              this.options.errors[err.keyword] ||\n              ``;\n\n        if (message && typeof message === 'function')\n          message = message(err) as string;\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-z0-9]+)}/g,\n              (v: string, key: string) => err.params[key] || '',\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // endregion\n\n  // region: condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Observable<boolean>[] = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: any) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(\n              valueCheck, visibilityCheck\n            ).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(\n              `Can't find property ${dependencyPath} for visibility check of ${\n                this.path\n              }`,\n            );\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged()\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (\n      property !== null &&\n      subPathIdx !== -1 &&\n      property instanceof PropertyGroup\n    ) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (<PropertyGroup>property).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (<PropertyGroup>child).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): any;\n\n  setValue(value: any, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any, onlySelf: boolean) {\n    if (value == null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value =\n          value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): any {\n    return null;\n  }\n}\n","import { PropertyGroup, FormProperty } from './form.property';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { DelonFormConfig } from '../config';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\nimport { ErrorData } from '../errors';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: any,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(this._value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: ObjectProperty, _) => {\n      if (property.visible && property._hasValue()) {\n        value.push(Object.assign({}, property.formData, property.value));\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(value: any) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items,\n      this.ui.$items,\n      value,\n      this,\n    ) as ObjectProperty;\n    (<FormProperty[]>this.properties).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(value: any[]) {\n    for (const item of value) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // region: actions\n\n  add(value: any): FormProperty {\n    const newProperty = this.addProperty(value);\n    newProperty.resetValue(value, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = <FormProperty[]>this.properties;\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // endregion\n}\n","import { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { DelonFormConfig } from '../config';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: any,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(\n        Object.keys(this.schema.properties),\n        this.ui.order as string[],\n      );\n    } catch (e) {\n      console.error(\n        `Invalid ${this.schema.title || 'root'} object field configuration:`,\n        e,\n      );\n    }\n    orderedProperties.forEach(propertyId => {\n      this.properties[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties[propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n  resetValue(value: any, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    // tslint:disable-next-line:forin\n    for (const propertyId in this.schema.properties) {\n      this.properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n  _updateValue() {\n    const value: any = {};\n    this.forEachChild((property: any, propertyId: string) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup, FormProperty } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { StringProperty } from './string.property';\nimport { BooleanProperty } from './boolean.property';\nimport { ArrayProperty } from './array.property';\nimport { ObjectProperty } from './object.property';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\n\nexport class FormPropertyFactory {\n  constructor(\n    private schemaValidatorFactory: SchemaValidatorFactory,\n    private options: DelonFormConfig,\n  ) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += '/';\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error(\n          'Instanciation of a FormProperty with an unknown parent type: ' +\n            parent.type,\n        );\n      }\n    } else {\n      path = '/';\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (\n        propertyId &&\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\n      ) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) schema.title = propertyId;\n      // fix date\n      if (\n        (schema.type === 'string' || schema.type === 'number') &&\n        !schema.format &&\n        !(ui as SFUISchemaItem).format\n      ) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiDateStringFormat\n              : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiTimeStringFormat\n              : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[] },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(\n    @Optional()\n    @Inject(DelonFormConfig)\n    private options: DelonFormConfig,\n  ) {\n    super();\n    this.ajv = new Ajv(\n      Object.assign({}, options.ajv, {\n        errorDataPath: 'property',\n        allErrors: true,\n        jsonPointers: true,\n      }),\n    );\n    this.ajv.addFormat(\n      'data-url',\n      /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\n    );\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat(\n      'mobile',\n      /^(0|\\+?86|17951)?1[0-9]{10}$/,\n    );\n    this.ajv.addFormat(\n      'id-card',\n      /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/,\n    );\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[] },\n  ): (value: any) => ErrorData[] {\n    const ingoreKeywords: string[] = []\n      .concat(this.options.ingoreKeywords)\n      .concat(extraOptions.ingoreKeywords);\n\n    return (value: any): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ComponentRef,\n} from '@angular/core';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private widgets: { [type: string]: any } = {};\n\n  private defaultWidget: any;\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): any {\n    if (this.has(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(\n    private registry: WidgetRegistry,\n    private resolver: ComponentFactoryResolver,\n  ) {}\n\n  createWidget(\n    container: ViewContainerRef,\n    type: string,\n  ): ComponentRef<Widget<any>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type);\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<any>>(\n      componentClass,\n    );\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { DelonLocaleService } from '@delon/theme';\n\nimport { DelonFormConfig } from './config';\nimport { di, retrieveSchema, FORMATMAPS, resolveIf } from './utils';\nimport { TerminatorService } from './terminator.service';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\nimport { SFButton } from './interface';\nimport { ErrorData } from './errors';\n\nexport function useFactory(\n  schemaValidatorFactory: any,\n  options: DelonFormConfig,\n) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  templateUrl: './sf.component.html',\n  preserveWhitespaces: false,\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory: useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf-search]': `mode === 'search'`,\n    '[class.sf-edit]': `mode === 'edit'`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private i18n$: Subscription;\n  private locale: any = {};\n  private _renders = new Map<string, TemplateRef<any>>();\n  private _item: any;\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  rootProperty: FormProperty = null;\n  _formData: any;\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input()\n  layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n\n  /** JSON Schema */\n  @Input()\n  schema: SFSchema;\n\n  /** UI Schema */\n  @Input()\n  ui: SFUISchema;\n\n  /** è¡¨åé»è®¤å¼ */\n  @Input()\n  formData: {};\n\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨åºå® `label` æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input()\n  button: SFButton | 'none' = {};\n\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input()\n  @InputBoolean()\n  liveValidate = true;\n\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input()\n  autocomplete: 'on' | 'off';\n\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input()\n  @InputBoolean()\n  firstVisual = true;\n\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) this._btn.submit = this._btn.search;\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) this._btn.submit = this._btn.edit;\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n\n  /** æ°æ®åæ´æ¶åè° */\n  @Output()\n  formChange = new EventEmitter<{}>();\n\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output()\n  formSubmit = new EventEmitter<{}>();\n\n  /** éç½®è¡¨åæ¶åè° */\n  @Output()\n  formReset = new EventEmitter<{}>();\n\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output()\n  formError = new EventEmitter<ErrorData[]>();\n\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): any {\n    return this._item;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cd: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate;\n    this.firstVisual = options.firstVisual;\n    this.autocomplete = options.autocomplete;\n    this.i18n$ = this.i18n.change.subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      Object.keys(schema.properties).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(\n          schema.properties[key] as SFSchema,\n          definitions,\n        );\n        const ui = Object.assign(\n          { widget: property.type },\n          property.format && FORMATMAPS[property.format],\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\n          !property.ui &&\n          Array.isArray(property.enum) &&\n          property.enum.length > 0\n            ? { widget: 'select' }\n            : null,\n          this._defUi,\n          property.ui,\n          uiSchema[uiKey],\n        ) as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel =\n                typeof parentUiSchema.spanLabel === 'undefined'\n                  ? 5\n                  : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl =\n                typeof parentUiSchema.spanControl === 'undefined'\n                  ? 19\n                  : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined'\n                  ? null\n                  : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null && parentSchema) {\n          const dateEndProperty = parentSchema.properties[ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = Object.assign({}, dateEndProperty.ui, {\n              hidden: true,\n            });\n          } else {\n            ui.end = '';\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (property.items) {\n          uiRes[uiKey]['$items'] = uiRes[uiKey]['$items'] || {};\n          inFn(\n            property.items,\n            property.items,\n            (uiSchema[uiKey] || {})['$items'] || {},\n            ui,\n            uiRes[uiKey]['$items'],\n          );\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties).forEach(key => {\n        const property = schema.properties[key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = Object.assign(\n      <SFUISchemaItem>{\n        onlyVisual: this.options.onlyVisual,\n        size: this.options.size,\n        liveValidate: this.liveValidate,\n        firstVisual: this.firstVisual,\n      },\n      this.options.ui,\n      _schema.ui,\n      this.ui['*'],\n    );\n\n    // root\n    this._ui = Object.assign({}, this._defUi);\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    if (this._ui.debug) {\n      di('cover schema & ui', this._ui, _schema);\n    }\n  }\n\n  private coverButtonProperty() {\n    this._btn = Object.assign(\n      { render: {} },\n      this.locale,\n      this.options.button,\n      this.button,\n    );\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render.grid) {\n        this._btn.render.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (!this._btn.render.spanLabelFixed) {\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (\n        !this._btn.render.class &&\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\n      ) {\n        this._btn.render.class = 'text-center';\n      }\n    } else {\n      this._btn.render.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n    if (this._ui.debug) di('button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(): void {\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<{}>) {\n    const property = this.rootProperty.searchProperty(path);\n    if (!property) {\n      console.warn(`æªæ¾å°è·¯å¾ï¼${path}`);\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`å·²ç»å­å¨ç¸åèªå®ä¹è·¯å¾ï¼${path}`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\n    pui._render = templateRef;\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\n      if (!pui._render) pui._render = tpl;\n    });\n  }\n\n  validator() {\n    this.rootProperty._runValidation();\n    const errors = this.rootProperty.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema) {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined')\n      throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(\n      this._schema,\n      this._ui,\n      this.formData,\n    );\n    this.attachCustomRender();\n\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = Object.assign({}, this.formData, value);\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors);\n      this.cd.detectChanges();\n    });\n\n    this.reset();\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false) {\n    this.rootProperty.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cd.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.terminator.destroy();\n    this.i18n$.unsubscribe();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  OnDestroy,\n} from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\nimport { TerminatorService } from './terminator.service';\nimport { SFUISchemaItem } from './schema/ui';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  template: `<ng-template #target></ng-template>`,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<any>;\n  widget: Widget<any> = null;\n\n  // region: fields\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  // endregion\n\n  constructor(\n    private widgetFactory: WidgetFactory,\n    private terminator: TerminatorService,\n  ) {}\n\n  onWidgetInstanciated(widget: Widget<any>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => {\n      this.ngOnDestroy();\n    });\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(\n      this.container,\n      (this.formProperty.ui.widget || this.formProperty.schema.type) as string,\n    );\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.formProperty.ui.__destroy = true;\n    this.ref.destroy();\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  OnChanges,\n} from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf-fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector(\n        '.ant-form-item-control-wrapper',\n      );\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  template: `\n  <nz-form-item [style.width.px]=\"ui.width\">\n    <nz-col *ngIf=\"showTitle\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n        <ng-content></ng-content>\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>`,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  // tslint:disable-next-line:no-input-rename\n  @Input('sf-template') path: string;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private table: SFComponent,\n  ) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(\n      this.path.startsWith('/') ? this.path : `/` + this.path,\n      this.templateRef,\n    );\n  }\n}\n","import {\n  HostBinding,\n  Optional,\n  AfterViewInit,\n  Inject,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { di } from './utils';\nimport { FormProperty } from './model/form.property';\nimport { ArrayProperty } from './model/array.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem } from './schema/ui';\nimport { ErrorData } from './errors';\nimport { SFComponent } from './sf.component';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true) return true;\n\n    return null;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(filter(w => w != null))\n      .subscribe((errors: ErrorData[]) => {\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\n\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? errors[0].message : '';\n\n          if (this.ui.__destroy !== true) this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n  }\n\n  setValue(value: any) {\n    this.formProperty.setValue(value, false);\n    if (this.ui.debug) {\n      di('valueChanges', this.formProperty.path, this.formProperty);\n    }\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges() {\n    this.cd.detectChanges();\n    this.formProperty.root.widget.cd.markForCheck();\n  }\n\n  abstract reset(value: any);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(value: any) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\n  implements AfterViewInit {\n  reset(value: any) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\n  implements AfterViewInit {\n  reset(value: any) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFGridSchema } from '../../schema/ui';\nimport { FormProperty } from '../../model/form.property';\n\n@Component({\n  selector: 'sf-object',\n  template: `\n  <ng-container *ngIf=\"grid; else noGrid\">\n    <nz-row [nzGutter]=\"grid.gutter\">\n      <ng-container *ngFor=\"let i of list\">\n        <ng-container *ngIf=\"i.property.visible && i.show\">\n          <nz-col\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n          </nz-col>\n        </ng-container>\n      </ng-container>\n    </nz-row>\n  </ng-container>\n  <ng-template #noGrid>\n    <ng-container *ngFor=\"let i of list\">\n      <ng-container *ngIf=\"i.property.visible && i.show\">\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n      </ng-container>\n    </ng-container>\n  </ng-template>`,\n  preserveWhitespaces: false,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: any[] = [];\n\n  ngOnInit(): void {\n    this.grid = this.ui.grid;\n    const list: any[] = [];\n    for (const key of this.formProperty.propertiesId) {\n      const property = this.formProperty.properties[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || this.grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  template: `\n  <nz-form-item>\n    <nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n      <label>\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n      <div class=\"add\">\n        <button nz-button [nzType]=\"addType\" [disabled]=\"addDisabled\" (click)=\"addItem()\" [innerHTML]=\"addTitle\"></button>\n      </div>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n\n        <nz-row class=\"sf-array-container\">\n          <ng-container *ngFor=\"let i of formProperty.properties; let idx=index\">\n            <nz-col *ngIf=\"i.visible && !i.ui.hidden\" [nzSpan]=\"arraySpan\" [attr.data-index]=\"idx\" class=\"sf-array-item\">\n              <nz-card>\n                <sf-item [formProperty]=\"i\"></sf-item>\n                <span *ngIf=\"removeTitle\" class=\"remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\n                  <i class=\"anticon anticon-delete\"></i>\n                </span>\n              </nz-card>\n            </nz-col>\n          </ng-container>\n        </nz-row>\n\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n\n      </div>\n    </nz-col>\n  </nz-form-item>\n  `,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return (\n      this.schema.maxItems &&\n      (this.formProperty.properties as any[]).length >= this.schema.maxItems\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan)\n      this.arraySpan = this.ui.grid.arraySpan;\n\n    this.addTitle = this.ui.addTitle || 'æ·»å ';\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle =\n      this.ui.removable === false ? null : this.ui.removeTitle || 'ç§»é¤';\n  }\n\n  addItem() {\n    this.formProperty.add(null);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template #ipt>\n      <input nz-input\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.type]=\"ui.type || 'text'\"\n        [attr.placeholder]=\"ui.placeholder\"\n        [attr.autocomplete]=\"ui.autocomplete\"\n        [attr.autoFocus]=\"ui.autofocus\">\n    </ng-template>\n\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\n      <nz-input-group\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\n      </nz-input-group>\n    </ng-container>\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-input-number\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzFormatter]=\"formatter\"\n      [nzParser]=\"parser\"\n      [nzPrecision]=\"ui.precision\"\n      [nzPlaceHolder]=\"ui.placeholder || ''\">\n    </nz-input-number>\n  </sf-item-wrap>`,\n  preserveWhitespaces: false,\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value => `${ui.prefix} ${value}`;\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => `${value} ${ui.unit}`;\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport format from 'date-fns/format';\nimport { toBool } from '../../utils';\nimport { FormProperty } from '../../model/form.property';\n\n@Component({\n  selector: 'sf-date',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <ng-container [ngSwitch]=\"mode\">\n\n      <nz-month-picker *ngSwitchCase=\"'month'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      ></nz-month-picker>\n\n      <nz-week-picker *ngSwitchCase=\"'week'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n      ></nz-week-picker>\n\n      <nz-range-picker *ngSwitchCase=\"'range'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzDisabledTime]=\"ui.disabledTime\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n        [nzRanges]=\"ui.ranges\"\n        (nzOnOk)=\"_ok($event)\"\n      ></nz-range-picker>\n\n      <nz-date-picker *ngSwitchDefault\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzDisabledTime]=\"ui.disabledTime\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n        [nzShowTime]=\"ui.showTime\"\n        [nzShowToday]=\"i.showToday\"\n        (nzOnOk)=\"_ok($event)\"\n      ></nz-date-picker>\n    </ng-container>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] = null;\n  displayFormat: string;\n  format: string;\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'YYYY-MM-DD HH:mm:ss';\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  reset(value: any) {\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.endProperty.formData];\n    } else {\n      this.displayValue = value;\n    }\n  }\n\n  _change(value: Date | Date[]) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? value.map(d => format(d, this.format))\n      : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent.properties[this.ui.end];\n  }\n\n  private setEnd(value: any) {\n    this.endProperty.setValue(value, true);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport format from 'date-fns/format';\nimport { toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-time',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'HH:mm:ss';\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: any) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) value += ':00';\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(\n        Date.UTC(\n          1970,\n          0,\n          1,\n          value.getHours(),\n          value.getMinutes(),\n          value.getSeconds(),\n        ),\n      );\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\n\n@Component({\n  selector: 'sf-radio',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-radio-group\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzName]=\"id\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\">\n      <ng-container *ngIf=\"styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n      <ng-container *ngIf=\"!styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio-button\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n    </nz-radio-group>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class RadioWidget extends ControlWidget {\n  data: any[] = [];\n  styleType: boolean;\n\n  reset(value: any) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => (this.data = list),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  template: `\n  <ng-template #all>\n    <label *ngIf=\"ui.checkAll\" nz-checkbox class=\"mr-sm\"\n      [(ngModel)]=\"allChecked\"\n      [nzIndeterminate]=\"indeterminate\"\n      (click)=\"onAllChecked($event)\">\n      {{ ui.checkAllText || 'å¨é' }}\n    </label>\n  </ng-template>\n  <nz-form-item [style.width.px]=\"ui.width\">\n    <nz-col *ngIf=\"data.length > 0\" [nzSpan]=\"label\" class=\"ant-form-item-label\">\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"control\" [nzOffset]=\"offset\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n\n          <ng-container *ngIf=\"data.length === 0\">\n            <label nz-checkbox\n              [nzDisabled]=\"disabled\"\n              [ngModel]=\"value\"\n              (ngModelChange)=\"_setValue($event)\">\n              <span [innerHTML]=\"schema.title\"></span>\n              <span class=\"optional\">\n                {{ ui.optional }}\n                <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n                  <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n                </nz-tooltip>\n              </span>\n            </label>\n          </ng-container>\n          <ng-container *ngIf=\"data.length > 0\">\n            <ng-container *ngIf=\"grid_span === 0\">\n              <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n              <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\"></nz-checkbox-group>\n            </ng-container>\n            <ng-container *ngIf=\"grid_span !== 0\">\n              <nz-checkbox-wrapper class=\"checkbox-grid-list\" (nzOnChange)=\"groupInGridChange($event)\">\n                <nz-row>\n                  <nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\n                    <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n                  </nz-col>\n                  <nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\n                    <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{i.label}}</label>\n                  </nz-col>\n                </nz-row>\n              </nz-checkbox-wrapper>\n            </ng-container>\n          </ng-container>\n\n          <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n          <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  label: number;\n  control: number;\n  offset: number;\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n\n        this.label = this.ui.spanLabel;\n        this.control = this.ui.spanControl;\n        if (list.length === 0) {\n          this.label = null;\n          this.offset = this.ui.spanLabel;\n        }\n        this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n        this.updateAllChecked();\n      },\n    );\n  }\n\n  _setValue(value: any) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: any[]) {\n    this.data.forEach(\n      item => (item.checked = values.indexOf(item.value) !== -1),\n    );\n    this.notifySet();\n  }\n\n  onAllChecked(e: Event) {\n    e.stopPropagation();\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked === false)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-switch\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzCheckedChildren]=\"ui.checkedChildren\"\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\n    </nz-switch>\n  </sf-item-wrap>`,\n  preserveWhitespaces: false,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-textarea',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <textarea nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"autosize\">\n    </textarea>\n\n  </sf-item-wrap>`,\n  preserveWhitespaces: false,\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  autosize: any = true;\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-select\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzAllowClear]=\"i.allowClear\"\n      [nzAutoFocus]=\"i.autoFocus\"\n      [nzDropdownClassName]=\"i.dropdownClassName\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzServerSearch]=\"i.serverSearch\"\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\n      [nzMode]=\"i.mode\"\n      [nzNotFoundContent]=\"i.notFoundContent\"\n      [nzShowSearch]=\"i.showSearch\"\n      (nzOpenChange)=\"openChange($event)\"\n      (nzOnSearch)=\"searchChange($event)\"\n      (nzScrollToBottom)=\"scrollToBottom($event)\">\n      <ng-container *ngIf=\"!hasGroup\">\n        <nz-option\n          *ngFor=\"let o of data\"\n          [nzLabel]=\"o.label\"\n          [nzValue]=\"o.value\"\n          [nzDisabled]=\"o.disabled\">\n        </nz-option>\n      </ng-container>\n      <ng-container *ngIf=\"hasGroup\">\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\n          <nz-option\n            *ngFor=\"let o of i.children\"\n            [nzLabel]=\"o.label\"\n            [nzValue]=\"o.value\"\n            [nzDisabled]=\"o.disabled\">\n          </nz-option>\n        </nz-option-group>\n      </ng-container>\n    </nz-select>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  hasGroup = false;\n\n  ngOnInit(): void {\n    this.i = {\n      allowClear: this.ui.allowClear,\n      autoFocus: toBool(this.ui.autoFocus, false),\n      dropdownClassName: this.ui.dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\n      serverSearch: toBool(this.ui.serverSearch, false),\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\n      mode: this.ui.mode || 'default',\n      notFoundContent: this.ui.notFoundContent || 'æ æ³æ¾å°',\n      showSearch: toBool(this.ui.showSearch, true),\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.hasGroup = list.filter(w => w.group === true).length > 0;\n        this.detectChanges();\n      },\n    );\n  }\n\n  change(values: any) {\n    if (this.ui.change) this.ui.change(values);\n    this.setValue(values);\n  }\n\n  openChange(value: any) {\n    if (this.ui.openChange) this.ui.openChange(value);\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((res: any[]) => {\n        this.data = res;\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom(value: any) {\n    if (this.ui.scrollToBottom) this.ui.scrollToBottom(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { toBool, getData } from '../../utils';\nimport { NzTreeNode, NzFormatEmitEvent } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { deepCopy } from '@delon/util';\n\n@Component({\n  selector: 'sf-tree-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-tree-select\n      [nzAllowClear]=\"i.allowClear\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzDisabled]=\"disabled\"\n      [nzShowSearch]=\"i.showSearch\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzDropdownStyle]=\"ui.dropdownStyle\"\n      [nzMultiple]=\"i.multiple\"\n      [nzSize]=\"ui.size\"\n      [nzCheckable]=\"i.checkable\"\n      [nzShowExpand]=\"i.showExpand\"\n      [nzShowLine]=\"i.showLine\"\n      [nzAsyncData]=\"i.asyncData\"\n      [nzNodes]=\"data\"\n      [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n      [nzDefaultExpandedKeys]=\"ui.defaultExpandedKeys\"\n      [nzDisplayWith]=\"i.displayWith\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      (nzExpandChange)=\"expandChange($event)\">\n    </nz-tree-select>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  private dc() {\n    // Muse wait `nz-tree-select` write values\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.detectChanges();\n        resolve();\n      }, 101);\n    });\n  }\n\n  private tranData(list: SFSchemaEnum[]) {\n    return list.map(node => new NzTreeNode(deepCopy(node) as any));\n  }\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title),\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData)\n      .pipe(map(list => this.tranData(list)))\n      .subscribe(list => {\n        this.data = list;\n        this.dc();\n      });\n  }\n\n  change(value: any) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e)\n      .pipe(map((list: SFSchemaEnum[]) => this.tranData(list)))\n      .subscribe(res => {\n        e.node.addChildren(res);\n        this.dc();\n      });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\n\n@Component({\n  selector: 'sf-tag',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-tag\n      *ngFor=\"let i of data\"\n      nzMode=\"checkable\"\n      [nzChecked]=\"i.checked\"\n      (nzAfterClose)=\"_afterClose()\"\n      (nzOnClose)=\"_close($event)\"\n      (nzCheckedChange)=\"onChange(i)\">\n      {{i.label}}\n    </nz-tag>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: any) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { UploadFile, UploadChangeParam, NzModalService } from 'ng-zorro-antd';\nimport { ControlWidget } from '../../widget';\nimport { getData, toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-upload',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-upload\n      [nzType]=\"i.type\"\n      [nzFileList]=\"fileList\"\n      [nzDisabled]=\"disabled\"\n      [nzAction]=\"i.action\"\n      [nzAccept]=\"i.accept\"\n      [nzLimit]=\"i.limit\"\n      [nzSize]=\"i.size\"\n      [nzFileType]=\"i.fileType\"\n      [nzHeaders]=\"ui.headers\"\n      [nzData]=\"ui.data\"\n      [nzListType]=\"i.listType\"\n      [nzMultiple]=\"i.multiple\"\n      [nzName]=\"i.name\"\n      [nzShowUploadList]=\"i.showUploadList\"\n      [nzWithCredentials]=\"i.withCredentials\"\n      [nzRemove]=\"ui.remove\"\n      [nzPreview]=\"handlePreview\"\n      (nzChange)=\"change($event)\">\n      <ng-container [ngSwitch]=\"btnType\">\n        <ng-container *ngSwitchCase=\"'plus'\">\n          <i class=\"anticon anticon-plus\"></i>\n          <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'drag'\">\n          <p class=\"ant-upload-drag-icon\"><i class=\"anticon anticon-inbox\"></i></p>\n          <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\n          <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <button type=\"button\" nz-button>\n            <i class=\"anticon anticon-upload\"></i><span [innerHTML]=\"i.text\"></span>\n          </button>\n        </ng-container>\n      </ng-container>\n    </nz-upload>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  constructor(cd: ChangeDetectorRef, private modalSrv: NzModalService) {\n    super(cd);\n  }\n\n  ngOnInit(): void {\n    this.i = {\n      type: this.ui.type || 'select',\n      text: this.ui.text || 'ç¹å»ä¸ä¼ ',\n      action: this.ui.action || '',\n      accept: this.ui.accept || '',\n      limit: this.ui.limit == null ? 0 : +this.ui.limit,\n      size: this.ui.size == null ? 0 : +this.ui.size,\n      fileType: this.ui.fileType || '',\n      listType: this.ui.listType || 'text',\n      multiple: toBool(this.ui.multiple, false),\n      name: this.ui.name || 'file',\n      showUploadList: toBool(this.ui.showUploadList, true),\n      withCredentials: toBool(this.ui.withCredentials, false),\n      resReName: (this.ui.resReName || '').split('.'),\n    };\n    if (this.i.listType === 'picture-card') this.btnType = 'plus';\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint =\n        this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this.notify(args.fileList);\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.fileList = list as UploadFile[];\n        this.notify(this.fileList);\n        this.detectChanges();\n      },\n    );\n  }\n\n  private notify(fileList: UploadFile[]) {\n    const res = fileList.map(item =>\n      deepGet(item.response, this.i.resReName, item.response),\n    );\n    this.formProperty.setValue(\n      this.i.multiple === true ? res : res.pop(),\n      false,\n    );\n  }\n\n  handlePreview = (file: UploadFile) => {\n    this.modalSrv\n      .create({\n        nzContent: `<img src=\"${file.url ||\n          file.thumbUrl}\" class=\"img-fluid\" />`,\n        nzFooter: null,\n      })\n      .afterClose.subscribe(() => this.detectChanges());\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-transfer',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-transfer\n      [nzDataSource]=\"list\"\n      [nzTitles]=\"i.titles\"\n      [nzOperations]=\"i.operations\"\n      [nzListStyle]=\"ui.listStyle\"\n      [nzItemUnit]=\"i.itemUnit\"\n      [nzItemsUnit]=\"i.itemsUnit\"\n      [nzShowSearch]=\"ui.showSearch\"\n      [nzFilterOption]=\"ui.filterOption\"\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzCanMove]=\"_canMove\"\n      (nzChange)=\"_change($event)\"\n      (nzSearchChange)=\"_searchChange($event)\"\n      (nzSelectChange)=\"_selectChange($event)\">\n    </nz-transfer>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: any[] = [];\n  i: any;\n  private _data: any[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) formData = [formData];\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) item.direction = 'right';\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: any): Observable<any[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: any) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter(w => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: any) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n  }\n\n  _selectChange(options: any) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-slider\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzRange]=\"ui.range\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzMarks]=\"marks\"\n      [nzDots]=\"ui.dots\"\n      [nzIncluded]=\"included\"\n      [nzVertical]=\"ui.vertical\"\n      [nzTipFormatter]=\"_formatter\"\n      (nzOnAfterChange)=\"_afterChange($event)\">\n    </nz-slider>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: any;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: any) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  }\n\n  _afterChange(value: any) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template\n      [ngTemplateOutlet]=\"$any(ui)._render\"\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CustomWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-rate',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-rate\n      [nzDisabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzAllowClear]=\"allowClear\"\n      [nzAllowHalf]=\"allowHalf\"\n      [nzAutoFocus]=\"autoFocus\"\n      [nzCount]=\"count\"></nz-rate>\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n\n  genText() {\n    return this.hasText\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\n      : '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { startWith, map, flatMap, debounceTime } from 'rxjs/operators';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\n\nexport const EMAILSUFFIX = [\n  'qq.com',\n  '163.com',\n  'gmail.com',\n  '126.com',\n  'aliyun.com',\n];\n\n@Component({\n  selector: 'sf-autocomplete',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <input nz-input [nzAutocomplete]=\"auto\"\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.placeholder]=\"ui.placeholder\"\n        autocomplete=\"off\">\n      <nz-autocomplete #auto\n        [nzBackfill]=\"i.backfill\"\n        [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\n        [nzWidth]=\"i.width\"\n        (selectionChange)=\"setValue($event?.nzValue)\">\n        <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i.label\">{{i.label}}</nz-auto-option>\n      </nz-autocomplete>\n    </sf-item-wrap>\n    `,\n  preserveWhitespaces: false,\n})\nexport class AutoCompleteWidget extends ControlWidget implements OnInit {\n  i: any;\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  ngOnInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n    this.list = this.formProperty.valueChanges.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(\n        input =>\n          this.isAsync ? this.ui.asyncData(input) : this.filterData(input),\n      ),\n      map(res => getEnum(res, null, this.schema.readOnly)),\n    );\n  }\n\n  reset(value: any) {\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(EMAILSUFFIX, null, this.schema.readOnly);\n        break;\n      default:\n        this.fixData = getCopyEnum(\n          this.schema.enum,\n          this.formProperty.formData,\n          this.schema.readOnly\n        );\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(\n          this.fixData.filter(option => this.filterOption(input, option)),\n        );\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(\n      !value || ~value.indexOf('@')\n        ? []\n        : this.fixData.map(domain => `${value}@${domain.label}`),\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData, toBool } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-cascader',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-cascader\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"_change($event)\"\n      [nzOptions]=\"data\"\n      [nzAllowClear]=\"ui.allowClear\"\n      [nzAutoFocus]=\"ui.autoFocus\"\n      [nzChangeOn]=\"ui.changeOn\"\n      [nzChangeOnSelect]=\"ui.changeOnSelect\"\n      [nzColumnClassName]=\"ui.columnClassName\"\n      [nzExpandTrigger]=\"ui.expandTrigger\"\n      [nzMenuClassName]=\"ui.menuClassName\"\n      [nzMenuStyle]=\"ui.menuStyle\"\n      [nzLabelProperty]=\"ui.labelProperty\"\n      [nzValueProperty]=\"ui.valueProperty\"\n      [nzLoadData]=\"loadData\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzShowArrow]=\"showArrow\"\n      [nzShowInput]=\"showInput\"\n      [nzShowSearch]=\"ui.showSearch\"\n      (nzClear)=\"_clear($event)\"\n      (nzVisibleChange)=\"_visibleChange($event)\"\n      (nzSelect)=\"_select($event)\"\n      (nzSelectionChange)=\"_selectionChange($event)\">\n    </nz-cascader>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      this.loadData = (node: any, index: number) =>\n        (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  _visibleChange(status: boolean) {\n    this.ui.visibleChange && this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    this.ui.change && this.ui.change(value);\n  }\n\n  _selectionChange(options: any) {\n    this.ui.selectionChange && this.ui.selectionChange(options);\n  }\n\n  _select(options: any) {\n    this.ui.select && this.ui.select(options);\n  }\n\n  _clear(options: any) {\n    this.ui.clear && this.ui.clear(options);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { ControlWidget } from '../../widget';\nimport { getData, getEnum } from '../../utils';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { FormProperty, PropertyGroup } from '../../model/form.property';\nimport { NzMentionComponent } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'sf-mention',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n      <nz-mention #mentions\n        [nzSuggestions]=\"data\"\n        [nzValueWith]=\"i.valueWith\"\n        [nzLoading]=\"loading\"\n        [nzNotFoundContent]=\"i.notFoundContent\"\n        [nzPlacement]=\"i.placement\"\n        [nzPrefix]=\"i.prefix\"\n        (nzOnSelect)=\"_select($event)\"\n        (nzOnSearchChange)=\"_search($event)\">\n\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\n          <input nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            autocomplete=\"off\">\n        </ng-container>\n\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\n          <textarea nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            [nzAutosize]=\"ui.autosize\">\n          </textarea>\n        </ng-container>\n\n      </nz-mention>\n\n    </sf-item-wrap>\n    `,\n  preserveWhitespaces: false,\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    this.i = {\n      valueWith: this.ui.valueWith || (item => item.label),\n      notFoundContent:\n        this.ui.notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: this.ui.placement || 'bottom',\n      prefix: this.ui.prefix || '@',\n    };\n    const min =\n        typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1,\n      max =\n        typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (\n        value: any,\n        formProperty: FormProperty,\n        form: PropertyGroup,\n      ) => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      };\n    }\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(tap(() => (this.loading = false)), map(res => getEnum(res, null, this.schema.readOnly)))\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    {{ value || ui.defaultText || '-' }}\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ObjectWidget } from './object/object.widget';\nimport { ArrayWidget } from './array/array.widget';\nimport { StringWidget } from './string/string.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { DateWidget } from './date/date.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { UploadWidget } from './upload/upload.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { TextWidget } from './text/text.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { DelonUtilModule } from '@delon/util';\nimport { DelonLocaleModule } from '@delon/theme';\n\nimport { DelonFormConfig } from './config';\nimport {\n  SchemaValidatorFactory,\n  AjvSchemaValidatorFactory,\n} from './validator.factory';\nimport { SFComponent } from './sf.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\nimport { SFFixedDirective } from './sf-fixed.directive';\n\nconst COMPONENTS = [\n  SFComponent,\n  SFItemComponent,\n  SFItemWrapComponent,\n  SFTemplateDirective,\n  SFFixedDirective,\n];\n\n// region: widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { TextWidget } from './widgets/text/text.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        DelonFormConfig,\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}