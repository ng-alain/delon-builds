{"version":3,"sources":["../../../../packages/form/src/config.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/form/src/const.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/errors.ts"],"names":["SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","next","value","done","__read","n","e","ar","push","error","__spread","concat","SF_SEQ","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","apply","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","assign","resolveIfSchema","_schema","_ui","fn","if","properties","allKeys","keys","ifKeys","detectKey","then","required","hasElse","else","visibleIf","visibleElse","forEach","cond","enum","includes","resolveIf","property","uiKey","items","$items","detectKeys","orderProperties","order","isArray","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","prop","rest","restIndex","lastIndexOf","complete","splice","getEnum","list","formData","readOnly","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","pathValue","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","options","onlySelf","emitValidator","emitValueEvent","updatePath","updateValue","_updateValue","valueChanges","_runValidation","searchProperty","base","result","findRoot","getProperty","substr","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","params","setParentAndPlatErrors","platErrors","visible","setVisible","_b","_a","sfComp","_inited","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","_propertiesId","createProperties","orderedProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","cleanValue","addProperty","newProperty","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","Injectable","AjvSchemaValidatorFactory","document","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","REGEX","mobile","idCard","extraOptions","validate","w","SchemaValidatorFactory","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","useFactory","ComponentFactoryResolver","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","platform","unsubscribe$","_renders","Map","_valid","locale","layout","compact","loading","noColon","formValueChange","EventEmitter","formChange","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","uiSchemaInArr","size","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","isBrowser","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Platform","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","[class.sf__item]","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","nativeElement","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","showError","get","afterViewInit","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","reValid","addItem","removeItem","[class.sf__array]","AutoCompleteWidget","typing","isAsync","fixData","nzLabel","data","nzValue","_setValue","val","toString","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","mergeMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDateOptions","formatString","v","toDate","endValue","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","floor","ObjectWidget","showExpand","expand","showTitle","_c","propertiesId","_d","show","changeExpand","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","search$","hasGroup","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","onSearch","searchDebounceTime","switchMap","catchError","getOrgData","children","openChange","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","autofocus","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonLocaleModule","declarations","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","getDateLocale","formatDistance"],"mappings":"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","sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const SF_SEQ = '/';\n","import { toBoolean } from '@delon/util/decorator';\nimport { deepCopy } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any): boolean {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean): boolean {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): any {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIfSchema(_schema: SFSchema, _ui: SFUISchemaItemRun): void {\n  const fn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n    resolveIf(schema, ui);\n\n    Object.keys(schema.properties!).forEach(key => {\n      const property = schema.properties![key];\n      const uiKey = `$${key}`;\n      if (property.items) {\n        fn(property.items, ui[uiKey].$items);\n      }\n      if (property.properties) {\n        fn(property, ui[uiKey]);\n      }\n    });\n  };\n  fn(_schema, _ui);\n}\n\nfunction resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) {\n    schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n  }\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): AlainSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue == null ? this.value : options.updateValue;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]): ErrorData[] {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat: boolean = true): void {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  /**\n   * Set the hide or display of widget\n   * 设置小部件的隐藏或显示\n   */\n  setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { REGEX } from '@delon/util/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat('color', REGEX.color);\n    this.ajv.addFormat('mobile', REGEX.mobile);\n    this.ajv.addFormat('id-card', REGEX.idCard);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: any): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { BooleanInput, InputBoolean } from '@delon/util/decorator';\nimport { deepCopy } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIfSchema, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService): FormPropertyFactory {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\nexport type SFMode = 'default' | 'search' | 'edit';\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode(): SFMode {\n    return this._mode;\n  }\n  private _mode: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /**\n   * Whether the form is valid\n   *\n   * 表单是否有效\n   */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /**\n   * The value of the form\n   *\n   * 表单值\n   */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * Get form element property based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素属性\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * Get element value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素值\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * Set form element new value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)设置某个表单元素属性值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ...(_schema as any).ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIfSchema(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.validator();\n    this._inited = true;\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (!this._inited) {\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  /**\n   * Validator the form is valid\n   *\n   * 校验表单是否有效\n   * - `emitError` 当表单无效时是否触发 `formError` 事件，默认：`true`\n   * - `onlyRoot` 只对根进行检验，不进行向下逐个递归，根已经包含整个 Json Schema，默认：`true`\n   */\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): boolean {\n    if (!this.platform.isBrowser) {\n      return false;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this._valid;\n  }\n\n  /**\n   * Refresh the form Schema, when specifying `newSchema` means to replace the current Schema\n   *\n   * 刷新 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 可以针对某个表单元素进行刷新，例如：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * Reset form\n   *\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  host: { '[class.sf__item]': 'true' },\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    const p = this.formProperty;\n    this.ref = this.widgetFactory.createWidget(this.container, (p.ui.widget || p.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util/decorator';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls(): string | string[] {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): any {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  host: { '[class.sf__array]': 'true' },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled || (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    return !this.disabled && !!this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  private reValid(): void {\n    this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: true });\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    this.reValid();\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    this.reValid();\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, mergeMap, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue): void {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util/date-time';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue): void {\n    const toDateOptions = { formatString: this.startFormat, defaultValue: null };\n    if (Array.isArray(value)) {\n      value = value.map(v => toDate(v, toDateOptions));\n    } else {\n      value = toDate(value, toDateOptions);\n    }\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null,\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  private search$ = new Subject<string>();\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n  loading = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n      showArrow,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      showArrow: typeof showArrow !== 'boolean' ? undefined : showArrow,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n\n    const onSearch = this.ui.onSearch!;\n    if (onSearch) {\n      this.search$\n        .pipe(\n          takeUntil(this.sfItemComp!.unsubscribe$),\n          distinctUntilChanged(),\n          debounceTime(this.ui.searchDebounceTime || 300),\n          switchMap(text => onSearch(text)),\n          catchError(() => []),\n        )\n        .subscribe(list => {\n          this.data = list;\n          this.checkGroup(list);\n          this.loading = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n\n  onSearch(value: string): void {\n    if (this.ui.onSearch) {\n      this.loading = true;\n      this.search$.next(value);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon, autofocus } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        ((this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement).focus();\n      }, 20);\n    }\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util/other';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile): any {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): void {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService } from '@delon/util/config';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  exports: COMPONENTS,\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}