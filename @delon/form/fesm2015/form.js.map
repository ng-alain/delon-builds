{"version":3,"file":"form.js","sources":["../../../../packages/form/src/config.ts","../../../../packages/form/src/const.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/schema/index.ts","../../../../packages/form/src/schema/ui.ts","../../../../packages/form/src/interface.ts","../../../../packages/form/src/errors.ts","../../../../packages/form/src/widgets/object/schema.ts","../../../../packages/form/src/widgets/array/schema.ts","../../../../packages/form/src/widgets/string/schema.ts","../../../../packages/form/src/widgets/number/schema.ts","../../../../packages/form/src/widgets/date/schema.ts","../../../../packages/form/src/widgets/time/schema.ts","../../../../packages/form/src/widgets/radio/schema.ts","../../../../packages/form/src/widgets/checkbox/schema.ts","../../../../packages/form/src/widgets/cascader/schema.ts","../../../../packages/form/src/widgets/textarea/schema.ts","../../../../packages/form/src/widgets/select/schema.ts","../../../../packages/form/src/widgets/tree-select/schema.ts","../../../../packages/form/src/widgets/tag/schema.ts","../../../../packages/form/src/widgets/upload/schema.ts","../../../../packages/form/src/widgets/transfer/schema.ts","../../../../packages/form/src/widgets/slider/schema.ts","../../../../packages/form/src/widgets/rate/schema.ts","../../../../packages/form/src/widgets/autocomplete/schema.ts","../../../../packages/form/src/widgets/mention/schema.ts","../../../../packages/form/src/widgets/text/schema.ts"],"sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","export const SF_SEQ = '/';\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any): boolean {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean): boolean {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): any {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIfSchema(_schema: SFSchema, _ui: SFUISchemaItemRun): void {\n  const fn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n    resolveIf(schema, ui);\n\n    Object.keys(schema.properties!).forEach(key => {\n      const property = schema.properties![key];\n      const uiKey = `$${key}`;\n      if (property.items) {\n        fn(property.items, ui[uiKey].$items);\n      }\n      if (property.properties) {\n        fn(property, ui[uiKey]);\n      }\n    });\n  };\n  fn(_schema, _ui);\n}\n\nfunction resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) {\n    schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n  }\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): AlainSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue == null ? this.value : options.updateValue;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]): ErrorData[] {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat: boolean = true): void {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  /**\n   * Set the hide or display of widget\n   * 设置小部件的隐藏或显示\n   */\n  setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: any): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, BooleanInput, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIfSchema, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService): FormPropertyFactory {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\nexport type SFMode = 'default' | 'search' | 'edit';\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode(): SFMode {\n    return this._mode;\n  }\n  private _mode: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /**\n   * Whether the form is valid\n   *\n   * 表单是否有效\n   */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /**\n   * The value of the form\n   *\n   * 表单值\n   */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * Get form element property based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素属性\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * Get element value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素值\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * Set form element new value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)设置某个表单元素属性值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIfSchema(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.validator();\n    this._inited = true;\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (!this._inited) {\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  /**\n   * Validator the form is valid\n   *\n   * 校验表单是否有效\n   * - `emitError` 当表单无效时是否触发 `formError` 事件，默认：`true`\n   * - `onlyRoot` 只对根进行检验，不进行向下逐个递归，根已经包含整个 Json Schema，默认：`true`\n   */\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): boolean {\n    if (!this.platform.isBrowser) {\n      return false;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this._valid;\n  }\n\n  /**\n   * Refresh the form Schema, when specifying `newSchema` means to replace the current Schema\n   *\n   * 刷新 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 可以针对某个表单元素进行刷新，例如：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * Reset form\n   *\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  host: { '[class.sf__item]': 'true' },\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    const p = this.formProperty;\n    this.ref = this.widgetFactory.createWidget(this.container, (p.ui.widget || p.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls(): string | string[] {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): any {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  host: { '[class.sf__array]': 'true' },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled || (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    return !this.disabled && !!this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, mergeMap, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue): void {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue): void {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null,\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  private search$ = new Subject<string>();\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n  loading = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n\n    const onSearch = this.ui.onSearch!;\n    if (onSearch) {\n      this.search$\n        .pipe(\n          takeUntil(this.sfItemComp!.unsubscribe$),\n          distinctUntilChanged(),\n          debounceTime(this.ui.searchDebounceTime || 300),\n          switchMap(text => onSearch(text)),\n          catchError(() => []),\n        )\n        .subscribe(list => {\n          this.data = list;\n          this.checkGroup(list);\n          this.loading = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n\n  onSearch(value: string): void {\n    if (this.ui.onSearch) {\n      this.loading = true;\n      this.search$.next(value);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon, autofocus } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        ((this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement).focus();\n      }, 20);\n    }\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile): any {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): void {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { SFUISchemaItem } from './ui';\n\nexport interface SFSchemaDefinition {\n  [key: string]: SFSchema;\n}\n\nexport interface SFSchemaEnum {\n  [key: string]: any;\n\n  /** 是否禁用状态 */\n  disabled?: boolean;\n\n  /** 文本 */\n  label?: any;\n\n  /** 文本 */\n  title?: any;\n\n  /** 值 */\n  value?: any;\n\n  /**\n   * 主键，适用部分小部件数据键名，例如：`tree-select`\n   */\n  key?: any;\n\n  /** 是否选中 */\n  checked?: boolean;\n\n  /**\n   * 组名，适用部分允许组列表的小部件，例如：`select`\n   * - 组对应的文本为 `label`\n   * - `children` 为子项\n   */\n  group?: boolean;\n\n  isLeaf?: boolean;\n\n  /** 组对应的子类 */\n  children?: SFSchemaEnum[];\n}\n\nexport type SFSchemaType = 'number' | 'integer' | 'string' | 'boolean' | 'object' | 'array';\n\nexport type SFSchemaEnumType = SFSchemaEnum | number | string | boolean;\n\n/**\n * JSON Schema Form 结构体\n *\n * **注意：** 所有结构都以标准为基准，除了 `ui` 属性为非标准单纯只是为了更好的开发\n */\nexport interface SFSchema {\n  [key: string]: any;\n  //////////// Any /////////////\n  /**\n   * 数据类型，支持 JavaScript 基础类型；注意项：\n   *\n   * - `integer` 表示整型，`number` 表示浮点型\n   * - JSON 中 `date` 等同 `string` 类型\n   * - 指定 `format` 标准参数可以自动适配渲染小部件\n   * - 指定 `widget` 参数强制渲染小部件\n   */\n  type?: SFSchemaType;\n  /**\n   * 枚举，静态数据源，例如：`radio`、`checkbox` 等\n   *\n   * - `disabled` 属性表示：禁用状态\n   * - `label` 属性表示：文本\n   * - `value` 属性表示：返回值\n   * - 基础数据类型数组会自动转化成 `SFSchemaEnum` 数组格式\n   */\n  enum?: SFSchemaEnumType[];\n  //////////// 数值类型 /////////////\n  /**\n   * 最小值\n   */\n  minimum?: number;\n  /**\n   * 约束是否包括 `minimum` 值\n   */\n  exclusiveMinimum?: boolean;\n  /**\n   * 最大值\n   */\n  maximum?: number;\n  /**\n   * 约束是否包括 `maximum` 值\n   */\n  exclusiveMaximum?: boolean;\n  /**\n   * 倍数\n   */\n  multipleOf?: number;\n  //////////// 字符串类型/////////////\n  /**\n   * 定义字符串的最大长度\n   */\n  maxLength?: number;\n  /**\n   * 定义字符串的最小长度\n   */\n  minLength?: number;\n  /**\n   * 验证输入字段正则表达式字符串，若指定 `format: 'regex'` 时务必指定\n   */\n  pattern?: string;\n  //////////// 数组类型/////////////\n  /**\n   * 数组元素类型描述，只支持数组对象，若需要基础类型数组可通过其他部件支持\n   *\n   * ```json\n   * items: {\n   *   type: 'object',\n   *   properties: {\n   *     name: { type: 'string' },\n   *     age: { type: 'number' }\n   *   }\n   * }\n   * ```\n   *\n   * 结果\n   *\n   * ```json\n   * [\n   *   { \"name\": \"cipchk1\", \"age\": 18 },\n   *   { \"name\": \"cipchk2\", \"age\": 16 }\n   * ]\n   * ```\n   */\n  items?: SFSchema;\n  /**\n   * 约束数组最小的元素个数\n   * - `type=\"array\"` 时有效\n   */\n  minItems?: number;\n  /**\n   * 约束数组最大的元素个数\n   * - `type=\"array\"` 时有效\n   */\n  maxItems?: number;\n  /**\n   * 约束数组每个元素都不相同\n   * - `type=\"array\"` 时有效\n   */\n  uniqueItems?: boolean;\n  /**\n   * 数组额外元素的校验规则\n   */\n  additionalItems?: SFSchema;\n  //////////// 对象类型/////////////\n  /**\n   * 最大属性个数，必须是非负整数\n   */\n  maxProperties?: number;\n  /**\n   * 最小属性个数，必须是非负整数\n   */\n  minProperties?: number;\n  /**\n   * 必填项属性\n   */\n  required?: string[];\n  /**\n   * 定义属性\n   */\n  properties?: { [key: string]: SFSchema };\n  //////////// 条件类/////////////\n  // 未来可能被移除\n  // dependencies?: { [key: string]: string[] | SFSchema };\n  /**\n   * 条件验证\n   * - 必须包含 `properties` 节点\n   *  - 键名必须是当前节点 `properties` 值之一\n   *  - 利用 `enum` 属性表示条件值，支持 `$ANY$` 表示任意值\n   * - 不支持跨 Schema 节点\n   * - 当条件成功会执行 `then` 否则执行 `else`\n   * - `if`和`then` 是必须同时出现，`else` 可选项\n   */\n  if?: SFSchema;\n  /**\n   * 条件成功时执行\n   * - 只支持 `required` 参数，用于表示显示\n   */\n  then?: SFSchema;\n  /**\n   * 条件失败时执行\n   * - 只支持 `required` 参数，用于表示显示\n   */\n  else?: SFSchema;\n  //////////// 逻辑类/////////////\n  /** **不建议** 使用，可用 `required` 替代 */\n  allOf?: SFSchema[];\n  /** **不建议** 使用，可用 `required` 和 `minProperties` 替代 */\n  anyOf?: SFSchema[];\n  /** 值必须是其中之一 */\n  oneOf?: SFSchema[];\n  //////////// 格式/////////////\n  /**\n   * 数据格式，[文档](http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3)\n   * - `date-time` 日期时间，渲染为 `date`，[RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6)\n   * - `date`、`full-date` 日期，渲染为 `date`\n   * - `time`、`full-time` 时间，渲染为 `time`\n   * - `email` Email格式，渲染为 `autocomplete`\n   * - 非标准：`week`，渲染为 `nz-week-picker`\n   * - 非标准：`month`，渲染为 `nz-month-picker`\n   * - `ip` IP地址，渲染为 `input`\n   * - `uri` URL地址，渲染为 `upload`\n   * - `regex` 正则表达式，必须指定 `pattern` 属性，渲染为 `input`\n   * - `mobile` 手机号\n   * - `id-card` 身份证\n   * - `color` 颜色值\n   */\n  format?: string;\n  //////////// 注释/////////////\n  /**\n   * 属性描述，相当于 `label` 值，按以下规则展示：\n   * - 当值为 `null`、`undefined` 时使用 `key` 替代\n   * - 当值为 `''` 空字符串表示不展示 `label` 部分，例如：`checkbox` 可能需要\n   */\n  title?: string | null;\n  /**\n   * 属性目的性解释\n   */\n  description?: string;\n  /**\n   * 默认值\n   */\n  default?: any;\n  /**\n   * 是否只读状态\n   */\n  readOnly?: boolean;\n  //////////// 其他/////////////\n  //////////// Definitions /////////////\n  // /** 指定 Schema JSON 模式，默认为：`http://json-schema.org/draft-07/schema` */\n  // $schema?: string;\n  /** 内部类型定义体 */\n  definitions?: SFSchemaDefinition;\n  /** 引用定义体 */\n  $ref?: string;\n  // $schema?: string;\n  /** 针对开发者的注释，无任何意义，也不会被校验 */\n  $comment?: string;\n  //////////// 非标准/////////////\n  /** **唯一非标准：** 指定UI配置信息，优先级高于 `sf` 组件 `ui` 属性值 */\n  ui?: SFUISchemaItem | string;\n}\n","import { TemplateRef } from '@angular/core';\nimport { ACLCanType } from '@delon/acl';\nimport { ErrorSchema } from '../errors';\n\nexport type SFPlacement =\n  | 'top'\n  | 'left'\n  | 'right'\n  | 'bottom'\n  | 'topLeft'\n  | 'topRight'\n  | 'bottomLeft'\n  | 'bottomRight'\n  | 'leftTop'\n  | 'leftBottom'\n  | 'rightTop'\n  | 'rightBottom';\n\nexport type SFTrigger = 'click' | 'focus' | 'hover';\n\nexport type SFLSSize = 'large' | 'small';\n\nexport type SFDLSSize = 'default' | 'large' | 'small';\n\nexport interface SFGridSizeSchema {\n  span?: number | null;\n  order?: number | null;\n  offset?: number | null;\n  push?: number | null;\n  pull?: number | null;\n}\n\nexport interface SFGridSchema {\n  /**\n   * 栅格间隔\n   */\n  gutter?: number | null;\n  /**\n   * 栅格占位格数，为 `0` 时相当于 `display: none`\n   */\n  span?: number | null;\n  /**\n   * 数据栅格占位格数，为 `0` 时相当于 `display: none`\n   */\n  arraySpan?: number | null;\n  /**\n   * 栅格左侧的间隔格数，间隔内不可以有栅格\n   */\n  offset?: number | null;\n  xs?: number | SFGridSizeSchema;\n  sm?: number | SFGridSizeSchema;\n  md?: number | SFGridSizeSchema;\n  lg?: number | SFGridSizeSchema;\n  xl?: number | SFGridSizeSchema;\n  xxl?: number | SFGridSizeSchema;\n}\n\nexport interface SFRenderSchema {\n  /**\n   * 指定采用什么小部件渲染，所有小部件名可[查阅文档](https://ng-alain.com/)\n   */\n  widget?: string;\n  /**\n   * 自定义类，等同 `[ngClass]` 值\n   */\n  class?: string | string[];\n  /**\n   * 元素组件大小\n   */\n  size?: SFDLSSize;\n  /**\n   * 指定宽度，单位：`px`\n   */\n  width?: number;\n  /**\n   * 响应式属性\n   */\n  grid?: SFGridSchema;\n  /**\n   * 标签可选信息\n   */\n  optional?: string;\n  /**\n   * 标签可选帮助，使用 `nz-tooltip` 展示\n   */\n  optionalHelp?: string | SFOptionalHelp;\n}\n\nexport interface SFOptionalHelp {\n  text?: string;\n  i18n?: string;\n  /** 文字提示背景颜色 */\n  bgColor?: string;\n  /** 图标，默认：`question-circle` */\n  icon?: string;\n  placement?: SFPlacement;\n  trigger?: SFTrigger;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  overlayClassName?: string;\n  overlayStyle?: { [key: string]: string };\n}\n\nexport interface SFHorizontalLayoutSchema {\n  /**\n   * `label` 栅格占位格数，默认：`5`\n   * - `0` 时相当于 `display: none`\n   * - 限 `horizontal` 水平布局有效\n   */\n  spanLabel?: number | null;\n\n  /**\n   * `control` 栅格占位格数，默认：`19`\n   * - `0` 时相当于 `display: none`\n   * - 限 `horizontal` 水平布局有效\n   */\n  spanControl?: number | null;\n\n  /**\n   * `control` 栅格左侧的间隔格数，间隔内不可以有栅格\n   * - 限 `horizontal` 水平布局有效\n   */\n  offsetControl?: number | null;\n\n  /**\n   * `label` 固定宽度\n   * - 限 `horizontal` 水平布局有效\n   */\n  spanLabelFixed?: number | null;\n}\n\nexport interface SFSchemaI18n {\n  /**\n   * 指 `schema.title` 的国际化键值\n   */\n  i18n?: string;\n  /**\n   * 对应 `schema.description` 国际化\n   */\n  descriptionI18n?: string;\n}\n\n/** 指定如何渲染 `Schema` */\nexport interface SFUISchemaItem extends SFRenderSchema, SFHorizontalLayoutSchema, ErrorSchema, SFSchemaI18n {\n  [key: string]: any;\n\n  /** 是否开启调试模式，在数据变更、校验会打印出相信信息，不建议在生产环境中使用 */\n  debug?: boolean;\n\n  /**\n   * 属性顺序\n   *\n   * 当你只想某几个属性靠前时，则允许使用通配符 `*` 来表示剩余部分，且只允许出现一次\n   *\n   * @example\n   *\n   * [ 'a', 'b', 'c', 'd' ] + [ 'c', 'b', '*' ] = [ 'c', 'b', 'a', 'd']\n   */\n  order?: string[];\n  /**\n   * 是否隐藏\n   */\n  hidden?: boolean;\n  /**\n   * 指定条件时才显示，但需要**注意**：\n   * - 键值表示监听对象属性名\n   * - JSON Schema 校验是各属性独立运行，监听对象属性每一次值变化都会重新做一次整个JSON结构计算\n   *\n   * 有效格式包括：\n   * - `visibleIf: { shown: [ true ] }`：当 `shown: true` 时才显示当前属性\n   * - `visibleIf: { shown: [ '$ANY$' ] }`：当 `shown` 包括任意值时\n   * - `visibleIf: { shown: (value: any) => value > 0 }`：复杂表达式\n   */\n  visibleIf?: { [key: string]: any[] | ((value: any) => boolean) };\n\n  /**\n   * ACL 配置\n   */\n  acl?: ACLCanType;\n}\n\n/**\n * UI Schema，KEY名**务必**是 `$` 开头（例如：`$name`、`$id`），以便能区分KEY值还是UI选项\n * - 结构层级应同 `SFSchema` 一致\n * - 当KEY为 `*` 时表示对所有子表单元素都有效\n */\nexport interface SFUISchema {\n  [key: string]: SFUISchemaItem | SFUISchemaItemRun;\n}\n\n/**\n * 内部运行时使用\n */\nexport interface SFUISchemaItemRun extends SFUISchemaItem {\n  /** @internal 自定义模板 */\n  _render?: TemplateRef<void>;\n  /** @internal 是否必填 */\n  _required?: boolean;\n}\n","import { SFHorizontalLayoutSchema, SFRenderSchema } from './schema/ui';\n\nexport type SFValue = any;\n\nexport type SFLayout = 'horizontal' | 'vertical' | 'inline';\n\nexport interface SFFormValueChange {\n  path: string | null;\n  pathValue: SFValue;\n  value: SFValue;\n}\n\nexport interface SFValueChange {\n  /**\n   * Always return complete data\n   */\n  value: SFValue;\n  /**\n   * Current triggered path\n   */\n  path: string | null;\n  /**\n   * Current path value\n   */\n  pathValue: SFValue;\n}\n\nexport interface SFUpdateValueAndValidity {\n  /**\n   * 是否包含上级字段，默认：`false`\n   */\n  onlySelf?: boolean;\n  /**\n   * 是否触发值变更通知，默认：`true`\n   */\n  emitValueEvent?: boolean;\n  /**\n   * 是否触发校验，默认：`true`\n   */\n  emitValidator?: boolean;\n  /**\n   * 当前更新路径\n   */\n  updatePath?: string;\n  /**\n   * 当前更新路径对应值\n   */\n  updateValue?: SFValue | null;\n}\n\nexport interface SFButton {\n  /** 提交按钮文本，默认：`提交` */\n  submit?: string;\n  /** 提交按钮类型，默认：`primary` */\n  submit_type?: string;\n  /** 提交按钮图标 */\n  submit_icon?: SFButtonIcon;\n  /** 重置按钮文本，`null `或 `undefined` 表示不需要该按钮，默认：`重置` */\n  reset?: string;\n  /** 重置按钮类型，默认：`default` */\n  reset_type?: string;\n  /** 重置按钮图标 */\n  reset_icon?: SFButtonIcon;\n  /** 按钮样式，主要用于指定按钮 `grid`、`class` 属性 */\n  render?: SFRenderButton;\n  /** 搜索按钮文本，默认：`搜索` */\n  search?: string;\n  /** 编辑按钮文本，默认：`保存` */\n  edit?: string;\n}\n\nexport interface SFButtonIcon {\n  /** 等同 `nz-icon` 的 `nzType` 值 */\n  type?: string;\n  /** 图标主题风格，默认：`outline` */\n  theme?: 'outline' | 'twotone' | 'fill';\n  /** 仅适用双色图标，设置双色图标的主要颜色，仅对当前 icon 生效 */\n  twoToneColor?: string;\n  /** 指定来自 IconFont 的图标类型 */\n  iconfont?: string;\n}\n\nexport interface SFRenderButton extends SFHorizontalLayoutSchema, SFRenderSchema {}\n\nexport interface SFIcon {\n  type?: string;\n\n  theme?: 'fill' | 'outline' | 'twotone';\n\n  twotoneColor?: string;\n\n  rotate?: number;\n\n  spin?: boolean;\n\n  iconfont?: string;\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { TemplateRef } from '@angular/core';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport type SFObjectWidgetRenderType = 'card' | 'default';\n\nexport interface SFObjectWidgetSchema extends SFUISchemaItem {\n  /**\n   * 是否显示扩展，点击隐藏内容，默认：`true`\n   * - 限 `type === 'card'`\n   */\n  showExpand?: boolean;\n  /**\n   * 展开状态，默认：`true`\n   * - 限 `type === 'card'`\n   */\n  expand?: boolean;\n  /**\n   * 是否显示标题，默认：`false`\n   */\n  showTitle?: boolean;\n  /**\n   * 渲染类型\n   * - `card` 使用 `nz-card` 渲染\n   * - `default` 使用默认渲染\n   */\n  type?: SFObjectWidgetRenderType;\n  /**\n   * 等同 `nzSize` 属性，默认：`small`\n   */\n  cardSize?: 'default' | 'small';\n  /**\n   * 等同 `nzBodyStyle` 属性\n   */\n  cardBodyStyle?: { [key: string]: string };\n  /**\n   * 等同 `nzBordered` 属性，默认：`true`\n   * @deprecated 使用 `cardBorderless` 替代\n   */\n  cardBordered?: boolean;\n  /**\n   * 等同 `nzBorderless` 属性，是否移除边框，默认：`false`\n   */\n  cardBorderless?: boolean;\n  /**\n   * 等同 `nzExtra` 属性\n   */\n  cardExtra?: string | TemplateRef<void>;\n  /**\n   * 等同 `nzActions` 属性\n   */\n  cardActions?: Array<TemplateRef<void>>;\n}\n","import { FormProperty } from '../../model/form.property';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFArrayWidgetSchema extends SFUISchemaItem {\n  /** 指定添加按钮文本，默认：添加 */\n  addTitle?: string;\n\n  /** 指定添加按钮风格，等同按钮 `nzType`，默认：dashed */\n  addType?: string;\n\n  /** 指定是否显示移除按钮 */\n  removable?: boolean;\n\n  /** 指定移除按钮文本，默认：移除 */\n  removeTitle?: string;\n\n  /** 添加回调，`property` 表示添加后的表单属性 */\n  add: (property: FormProperty) => void;\n\n  /** 移除回调 */\n  remove: (index: number) => void;\n}\n","import { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFStringWidgetSchema extends SFUISchemaItem {\n  /**\n   * 指定 `input` 的 `type` 值，默认为：`text`\n   */\n  type?: string;\n\n  /**\n   * 文字框中显示提示信息\n   */\n  placeholder?: string;\n\n  /**\n   * 自动完成功能的表单\n   */\n  autocomplete?: 'on' | 'off';\n\n  /**\n   * 加载时是否获得焦点\n   */\n  autofocus?: boolean;\n\n  /**\n   * 前置标签，等同 `nzAddOnBefore`\n   */\n  addOnBefore?: string;\n\n  /**\n   * 后置标签，等同 `nzAddOnAfter`\n   */\n  addOnAfter?: string;\n\n  /**\n   * 前置Icon，等同 `nzAddOnBeforeIcon`\n   */\n  addOnBeforeIcon?: string;\n\n  /**\n   * 后置Icon，等同 `nzAddOnAfterIcon`\n   */\n  addOnAfterIcon?: string;\n\n  /**\n   * 带有前缀图标的 input，等同 `nzPrefix`\n   */\n  prefix?: string;\n\n  /**\n   * 前缀图标，等同 `nzPrefixIcon`\n   */\n  prefixIcon?: string;\n\n  /**\n   * 带有后缀图标的 input，等同 `nzSuffix`\n   */\n  suffix?: string;\n\n  /**\n   * 后缀图标，等同 `nzSuffixIcon`\n   */\n  suffixIcon?: string;\n\n  /**\n   * Whether hide border, Default: `false`\n   */\n  borderless?: boolean;\n\n  /**\n   * 内容变更事件\n   */\n  change?: (val: string) => void;\n\n  /**\n   * 焦点事件\n   */\n  focus?: (e: FocusEvent) => void;\n\n  /**\n   * 失焦事件\n   */\n  blur?: (e: FocusEvent) => void;\n\n  /**\n   * 回车事件\n   */\n  enter?: (e: KeyboardEvent) => void;\n}\n","import { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFNumberWidgetSchema extends SFUISchemaItem {\n  size?: SFDLSSize;\n\n  /**\n   * 前缀，简化 `nzFormatter`、`nzParser` 的使用\n   */\n  prefix?: string;\n\n  /**\n   * 单位，简化 `nzFormatter`、`nzParser` 的使用\n   */\n  unit?: string;\n\n  /**\n   * 指定输入框展示值的格式\n   */\n  formatter?: (value: number) => string | number;\n\n  /**\n   * 指定从 nzFormatter 里转换回数字的方式，和 nzFormatter 搭配使用\n   */\n  parser?: (value: string) => string | number;\n\n  /**\n   * 数值精度\n   */\n  precision?: number;\n\n  /**\n   * 指定 `nz-number` 宽度\n   */\n  widgetWidth?: number;\n}\n","import { DisabledDateFn, DisabledTimeFn, SupportTimeOptions } from 'ng-zorro-antd/date-picker';\nimport { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFDateWidgetSchema extends SFUISchemaItem {\n  mode?: 'date' | 'week' | 'month' | 'year' | 'range';\n\n  size?: SFDLSSize;\n\n  placeholder?: string;\n\n  /**\n   * **Just only support date-fns**\n   *\n   * Return the formatted date string in the given format, [Accepted tokens](https://date-fns.org/v2.12.0/docs/format), like this:\n   * - `yyyy-MM-dd HH:mm:ss` Date time\n   * - `t` Seconds timestamp\n   * - `T` Milliseconds timestamp\n   */\n  format?: string;\n\n  /**\n   * To set the date format (equar [nzFormat](https://ng.ant.design/components/date-picker/zh#api))\n   *\n   * **TIPS** [nzFormat special instructions](https://ng.ant.design/components/date-picker/en#api)\n   */\n  displayFormat?: string;\n\n  /**\n   * The end value corresponding to the date range `key`, a date range [demo](https://ng-alain.com/form/date/en#form-date-range).\n   */\n  end?: string;\n\n  /**\n   * Whether to show clear button, default: `true`\n   */\n  allowClear?: boolean;\n\n  /**\n   * Picker className\n   */\n  className?: string;\n\n  /**\n   * Localization configuration\n   */\n  locale?: {};\n\n  /**\n   * To customize the style of the popup calendar\n   */\n  popupStyle?: {};\n\n  /**\n   * To customize the className of the popup calendar\n   */\n  dropdownClassName?: string;\n\n  /**\n   * Set picker mode of range picker, default: `date`\n   */\n  rangeMode?: 'date' | 'week' | 'month' | 'year';\n\n  /**\n   * A callback emitter, can be executed whether the popup calendar is popped up or closed\n   */\n  onOpenChange?: (status: boolean) => void;\n\n  /**\n   * Specify the date that cannot be selected\n   */\n  disabledDate?: DisabledDateFn;\n\n  /**\n   * To specify the time that cannot be selected, support components: `nz-date-picker`, `nz-range-picker`\n   */\n  disabledTime?: DisabledTimeFn;\n\n  /**\n   * Render extra footer in panel, support components: `nz-date-picker`, `nz-range-picker`, `nz-year-picker`, `nz-month-picker`\n   */\n  renderExtraFooter?: string;\n\n  /**\n   * To provide an additional time selection\n   */\n  showTime?: SupportTimeOptions | boolean;\n\n  /**\n   * Whether to show \"Today\" button, default: `true`\n   */\n  showToday?: boolean;\n\n  /**\n   * Set the readonly attribute of the input tag (avoids virtual keyboard on touch devices), default: `false`\n   */\n  inputReadOnly?: boolean;\n\n  /**\n   * Callback when click ok button\n   */\n  onOk?: (data: Date | Date[]) => void;\n\n  /**\n   * Date change callback\n   */\n  change?: (data: Date | Date[] | null) => void;\n}\n","import { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFTimeWidgetSchema extends SFUISchemaItem {\n  size?: SFDLSSize;\n\n  placeholder?: string;\n\n  /**\n   * **Just only support date-fns**\n   *\n   * Return the formatted date string in the given format, [Accepted tokens](https://date-fns.org/v2.12.0/docs/format), like this:\n   * - `yyyy-MM-dd HH:mm:ss` Date time\n   * - `t` Seconds timestamp\n   * - `T` Milliseconds timestamp\n   */\n  format?: string;\n\n  /**\n   * To set the date format (equar [nzFormat](https://ng.ant.design/components/date-picker/zh#api))\n   *\n   * **TIPS** [nzFormat special instructions](https://ng.ant.design/components/date-picker/en#api)\n   */\n  displayFormat?: string;\n\n  /**\n   * 是否UTC新纪元（表示从 `1970` 开始计毫秒数），当 `type='number'` 时有效，默认：`false`\n   */\n  utcEpoch?: boolean;\n\n  /**\n   * Allow clearing text, default: `true`\n   */\n  allowEmpty?: boolean;\n\n  /**\n   * Clear tooltip of icon, default: `清除`\n   */\n  clearText?: string;\n\n  /**\n   * Default open panel value, default: `new Date()`\n   */\n  defaultOpenValue?: Date;\n\n  /**\n   * To specify the hours that cannot be selected\n   */\n  disabledHours?: () => number[];\n\n  /**\n   * To specify the minutes that cannot be selected\n   */\n  disabledMinutes?: (hour: number) => number[];\n\n  /**\n   * To specify the seconds that cannot be selected\n   */\n  disabledSeconds?: (hour: number, minute: number) => number[];\n\n  /**\n   * Hide the options that can not be selected, default: `false`\n   */\n  hideDisabledOptions?: boolean;\n\n  /**\n   * Display as 12 hours format, with default format, default: `h:mm:ss a`\n   */\n  use12Hours?: boolean;\n\n  /**\n   * Interval between hours in picker, default: `1`\n   */\n  hourStep?: number;\n\n  /**\n   * Interval between minutes in picker, default: `1`\n   */\n  minuteStep?: number;\n\n  /**\n   * Interval between seconds in picker, default: `1`\n   */\n  secondStep?: number;\n\n  /**\n   * ClassName of panel\n   */\n  popupClassName?: string;\n\n  /**\n   * a callback function, can be executed when the selected time is changing\n   */\n  change?: (value: Date | null) => void;\n\n  /**\n   * a callback function which will be called while panel opening/closing\n   */\n  openChange?: (status: boolean) => void;\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnumType } from '../../schema';\nimport { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFRadioWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  size?: SFDLSSize;\n\n  /**\n   * radio 的样式，默认：`default`\n   */\n  styleType?: 'default' | 'button';\n\n  /**\n   * RadioButton 的风格样式，目前有描边和填色两种风格，默认：`outline`\n   */\n  buttonStyle?: 'outline' | 'solid';\n\n  /**\n   * 值变更事件\n   */\n  change?: (res: SFValue) => void;\n}\n","import { Observable } from 'rxjs';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFCheckboxWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步静态数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  /**\n   * 指定每个选框单元格数量，参考[布局](https://ng.ant.design/components/checkbox/zh#components-checkbox-demo-layout)\n   */\n  span?: number;\n\n  /**\n   * radio的样式，默认：`default`\n   */\n  styleType?: 'default' | 'button';\n\n  /**\n   * 是否需要全选\n   */\n  checkAll?: boolean;\n\n  /**\n   * 全选按钮文本\n   */\n  checkAllText?: string;\n\n  /**\n   * 值变更事件，参数：单个多选框为 `boolean`，否则为 `SFSchemaEnum[]`\n   */\n  change?: (res: boolean | SFSchemaEnum[]) => void;\n}\n","import { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFUISchemaItem } from '../../schema/ui';\nimport { CascaderWidget } from './cascader.widget';\n\nexport interface SFCascaderWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步静态数据源\n   */\n  asyncData?: (node: NzCascaderOption, index: number, me?: CascaderWidget) => PromiseLike<any>;\n  /**\n   * 在文字框中显示提示讯息\n   */\n  placeholder?: string;\n\n  /**\n   * 是否支持搜索，默认：`false`\n   */\n  showSearch?: boolean;\n\n  /**\n   * 是否显示清除按钮，默认：`true`\n   */\n  allowClear?: boolean;\n\n  /**\n   * 清除按钮的标题，默认：`清除`\n   */\n  clearText?: string;\n\n  /**\n   * 是否显示箭头，默认：`true`\n   */\n  showArrow?: boolean;\n\n  /**\n   * 是否显示箭头，默认：`true`\n   */\n  showInput?: boolean;\n\n  /**\n   * 自定义浮层类名\n   */\n  menuClassName?: string;\n\n  /**\n   * 自定义浮层样式\n   */\n  menuStyle?: string;\n\n  /**\n   * 当下拉列表为空时显示的内容\n   */\n  notFoundContent?: string;\n\n  /**\n   * 弹出菜单中数据列的自定义样式\n   */\n  columnClassName?: string;\n\n  /**\n   * 是否缓存异步加载的数据，若每次异步加载的数据都是变化的，需将该值设置为 `false`，默认：`true`\n   */\n  enableCache?: boolean;\n\n  /**\n   * 次级菜单的展开方式，默认：`click`\n   */\n  expandTrigger?: 'click' | 'hover';\n\n  /**\n   * 当此项为 `true` 时，点选每级菜单选项值都会发生变化，具体见上面的演示，默认：`false`\n   */\n  changeOnSelect?: boolean;\n\n  /**\n   * 可通过自定义的函数来判断点击菜单选项是否应该发生变化，当函数返回 `true` 时，将发生变化\n   */\n  changeOn?: (option: NzCascaderOption, level: number) => boolean;\n\n  /**\n   * 触发菜单出现的行为，默认：`['click']`\n   */\n  triggerAction?: Array<'click' | 'hover'>;\n\n  /**\n   * 值 `value` 的属性名称，默认：`value`\n   */\n  valueProperty?: string;\n\n  /**\n   * 值 `label` 的属性名称，默认：`label`\n   */\n  labelProperty?: string;\n\n  /**\n   * 异步加载事件\n   */\n  visibleChange?: (value: boolean) => void;\n\n  /**\n   * 选项值变更事件\n   */\n  change?: (values: any[] | null) => void;\n\n  /**\n   * 选项变更事件\n   */\n  selectionChange?: (values: NzCascaderOption[]) => void;\n\n  /**\n   * 内容被清空事件\n   */\n  clear?: () => void;\n}\n","import { AutoSizeType } from 'ng-zorro-antd/input';\nimport { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFTextareaWidgetSchema extends SFUISchemaItem {\n  size?: SFDLSSize;\n\n  /**\n   * 在文字框中显示提示讯息\n   */\n  placeholder?: string;\n\n  /**\n   * 自适应内容高度，可设置为 `true|false` 或对象：`{ minRows: 2, maxRows: 6 }`\n   */\n  autosize?: boolean | AutoSizeType;\n\n  /**\n   * Whether hide border, Default: `false`\n   */\n  borderless?: boolean;\n\n  /**\n   * 内容变更事件\n   */\n  change?: (val: string) => void;\n\n  /**\n   * 焦点事件\n   */\n  focus?: (e: FocusEvent) => void;\n\n  /**\n   * 失焦事件\n   */\n  blur?: (e: FocusEvent) => void;\n}\n","import { TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzOptionComponent } from 'ng-zorro-antd/select';\nimport { Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFSelectWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  size?: SFDLSSize;\n\n  /**\n   * 在文字框中显示提示讯息\n   */\n  placeholder?: string;\n\n  /**\n   * 与 [SelectControlValueAccessor](https://angular.io/api/forms/SelectControlValueAccessor#caveat-option-selection) 相同\n   */\n  compareWith?: (o1: any, o2: any) => boolean;\n\n  /**\n   * 是否在选中项后清空搜索框，只在 `mode` 为 `multiple` 或 `tags` 时有效，默认：`true`\n   */\n  autoClearSearchValue?: boolean;\n\n  /**\n   * 支持清除，默认：`false`\n   */\n  allowClear?: boolean;\n\n  /**\n   * 是否无边框，默认：`false`\n   */\n  borderless?: boolean;\n\n  /**\n   * 默认获取焦点，默认：`false`\n   */\n  autoFocus?: boolean;\n\n  /**\n   * 下拉菜单的 className 属性\n   */\n  dropdownClassName?: string;\n\n  /**\n   * 下拉菜单和选择器同宽，默认：`true`\n   */\n  dropdownMatchSelectWidth?: boolean;\n\n  /**\n   * 下拉菜单的 style 属性\n   */\n  dropdownStyle?: {};\n\n  /**\n   * 是否使用服务端搜索，当为 `true` 时，将不再在前端对 `nz-option` 进行过滤，默认：`false`\n   */\n  serverSearch?: boolean;\n\n  /**\n   * 最多选中多少个标签，默认：`Infinity`\n   */\n  maxMultipleCount?: number;\n\n  /**\n   * 设置 `nz-select` 的模式，`tags` 建议增加 `default: null`，否则可能会遇到初始化有一个空的标签\n   */\n  mode?: 'default' | 'multiple' | 'tags';\n\n  /**\n   * 当下拉列表为空时显示的内容\n   */\n  notFoundContent?: string;\n\n  /**\n   * 使单选模式可搜索，默认：`false`\n   */\n  showSearch?: boolean;\n\n  /**\n   * 搜索内容变化回调函数，参数为搜索内容，必须返回 `Promise` 对象\n   */\n  onSearch?: (text: string) => Promise<SFSchemaEnum[]>;\n\n  /** 搜索抖动时间，默认：`300` */\n  searchDebounceTime?: number;\n\n  /** 搜索加载中文本 */\n  searchLoadingText?: string;\n\n  /**\n   * 在 `tags` 和 `multiple` 模式下自动分词的分隔符\n   */\n  tokenSeparators?: string[];\n\n  /**\n   * 最多显示多少个 tag\n   */\n  maxTagCount?: number;\n\n  /**\n   * 自定义选择框的Template内容\n   */\n  customTemplate?: TemplateRef<{ $implicit: NzOptionComponent }>;\n\n  /**\n   * 自定义的选择框后缀图标\n   */\n  suffixIcon?: TemplateRef<any> | string;\n\n  /**\n   * 自定义的多选框清除图标\n   */\n  removeIcon?: TemplateRef<any>;\n\n  /**\n   * 自定义的多选框清空图标\n   */\n  clearIcon?: TemplateRef<any>;\n\n  /**\n   * 自定义当前选中的条目图标\n   */\n  menuItemSelectedIcon?: TemplateRef<any>;\n\n  /**\n   * 隐藏 tag 时显示的内容\n   */\n  maxTagPlaceholder?: TemplateRef<{ $implicit: any[] }>;\n\n  /**\n   * 下拉菜单中每个 Option 的高度，默认：`32`\n   */\n  optionHeightPx?: number;\n\n  /**\n   * 下拉菜单中最多展示的 Option 个数，超出部分滚动，默认：`8`\n   */\n  optionOverflowSize?: number;\n\n  /**\n   * 自由扩展\n   */\n  dropdownRender?: TemplateRef<NzSafeAny>;\n\n  /**\n   * 选中的 `nz-option` 发生变化时，调用此函数\n   */\n  change?: (ngModel: SFValue | SFValue[], orgData: SFSchemaEnum | SFSchemaEnum[]) => void;\n\n  /**\n   * 下拉菜单打开关闭回调函数\n   */\n  openChange?: (status: boolean) => void;\n\n  /**\n   * 下拉菜单滚动到底部回调，可用于作为动态加载的触发条件\n   */\n  scrollToBottom?: () => void;\n}\n","import { TemplateRef } from '@angular/core';\nimport { NzFormatEmitEvent, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { Observable } from 'rxjs';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFTreeSelectWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  size?: SFDLSSize;\n\n  placeholder?: string;\n\n  /**\n   * 支持清除，默认：`false`\n   */\n  allowClear?: boolean;\n\n  /**\n   * 下拉菜单和选择器同宽，默认：`true`\n   */\n  dropdownMatchSelectWidth?: boolean;\n\n  /**\n   * 下拉菜单的 style 属性\n   */\n  dropdownStyle?: object;\n\n  /**\n   * 下拉菜单的 className 属性\n   */\n  dropdownClassName?: string;\n\n  /**\n   * 支持多选（当设置 `checkable` 时自动变为true），默认：`false`\n   */\n  multiple?: boolean;\n\n  /**\n   * 搜索隐藏未匹配的节点，默认：`false`\n   */\n  hideUnMatched?: boolean;\n\n  /**\n   * 节点前添加 Checkbox 复选框，默认：`false`\n   */\n  checkable?: boolean;\n\n  /**\n   * checkable 状态下节点选择完全受控（父子节点选中状态不再关联），默认：`false`\n   */\n  checkStrictly?: boolean;\n\n  /**\n   * 是否展示 TreeNode title 前的图标，没有默认样式，默认：`false`\n   */\n  showIcon?: boolean;\n\n  /**\n   * 节点前添加展开图标，默认：`true`\n   */\n  showExpand?: boolean;\n\n  /**\n   * 节点前添加展开图标，默认：`false`\n   */\n  showLine?: boolean;\n\n  /**\n   * 默认展开所有树节点，默认：`false`\n   */\n  defaultExpandAll?: boolean;\n\n  /**\n   * 当下拉列表为空时显示的内容\n   */\n  notFoundContent?: string;\n\n  /**\n   * 默认展开指定的树节点\n   */\n  expandedKeys?: string[];\n\n  /**\n   * 最多显示多少个 tag\n   */\n  maxTagCount?: number;\n\n  /**\n   * 隐藏 tag 时显示的内容\n   */\n  maxTagPlaceholder?: TemplateRef<{ $implicit: NzTreeNode[] }> | null;\n\n  /**\n   * 自定义节点\n   */\n  treeTemplate?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n\n  /**\n   * The size of the items in the list, same as [cdk itemSize](https://material.angular.io/cdk/scrolling/api), Default: `28`\n   */\n  virtualItemSize?: number;\n\n  /**\n   *  The number of pixels worth of buffer to render for when rendering new items, same as [cdk maxBufferPx](https://material.angular.io/cdk/scrolling/api), Default: `28`\n   */\n  virtualMaxBufferPx?: number;\n\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels),same as [cdk minBufferPx](https://material.angular.io/cdk/scrolling/api), Default: `28`\n   */\n  virtualMinBufferPx?: number;\n\n  /**\n   * The height of virtual scroll\n   */\n  virtualHeight?: string | null;\n\n  /**\n   * 如何在输入框显示所选的节点值的方法\n   */\n  displayWith?: (node: NzTreeNode) => string | undefined;\n\n  /**\n   * 点击展开树节点图标调用\n   */\n  expandChange?: (e: NzFormatEmitEvent) => Observable<SFSchemaEnum[]>;\n}\n","import { Observable } from 'rxjs';\nimport { SFSchemaEnumType } from '../../schema';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFTagWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  /**\n   * 设定标签工作的模式，默认：`checkable`\n   */\n  mode?: 'closeable' | 'default' | 'checkable';\n\n  /**\n   * 关闭时的回调，在 `nzMode=\"closable\"` 时可用\n   */\n  onClose?: (e: MouseEvent) => void;\n\n  /**\n   * 设置标签的选中状态的回调\n   */\n  checkedChange?: (status: boolean) => void;\n}\n","import {\n  NzShowUploadList,\n  NzUploadChangeParam,\n  NzUploadFile,\n  NzUploadTransformFileType,\n  NzUploadXHRArgs,\n  UploadFilter,\n} from 'ng-zorro-antd/upload';\nimport { Observable, Subscription } from 'rxjs';\nimport { SFSchemaEnumType } from '../../schema';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFUploadWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  /**\n   * 上传类型，默认：`select`\n   */\n  type?: 'select' | 'drag';\n\n  /**\n   * 按钮文本，默认：`点击上传`\n   */\n  text?: string;\n\n  /**\n   * 提醒文本，drag 时有效，默认：`支持单个或批量，严禁上传公司数据或其他安全文件`\n   */\n  hint?: string;\n\n  /**\n   * 重命名返回参数，支持 `a.b.c` 的嵌套写法，若不指定表示整个返回体\n   */\n  resReName?: string;\n\n  /**\n   * 重命名预览图像URL返回参数，支持 `a.b.c` 的嵌套写法，若不指定表示使用文件对象的 `url`、`thumbUrl` 值\n   */\n  urlReName?: string;\n\n  /**\n   * **必选参数** 上传的地址\n   */\n  action?: string | ((file: NzUploadFile) => string | Observable<string>);\n\n  /**\n   * 接受上传的文件类型, 详见 [input accept Attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept)\n   */\n  accept?: string | string[];\n\n  /**\n   * 限制单次最多上传数量，`multiple` 打开时有效；`0` 表示不限，默认：`0`\n   */\n  limit?: number;\n\n  /**\n   * 限制上传文件数量，超过数量隐藏上传按钮\n   */\n  limitFileCount?: number;\n\n  /**\n   * 自定义过滤器\n   */\n  filter?: UploadFilter[];\n\n  /**\n   * 文件列表\n   */\n  fileList?: NzUploadFile[];\n\n  /**\n   * 限制文件大小，单位：KB；`0` 表示不限，默认：`0`\n   */\n  fileSize?: number;\n\n  /**\n   * 限制文件类型，例如：`image/png,image/jpeg,image/gif,image/bmp`\n   */\n  fileType?: string;\n\n  /**\n   * 设置上传的请求头部\n   */\n  headers?: {} | ((file: NzUploadFile) => {} | Observable<{}>);\n\n  /**\n   * 上传列表的内建样式，默认：`text`\n   */\n  listType?: 'text' | 'picture' | 'picture-card';\n\n  /**\n   * 是否展示列表, 可设为一个对象，用于单独设定 `showPreviewIcon` 和 `showRemoveIcon`，默认：`true`\n   */\n  showUploadList?: boolean | NzShowUploadList;\n\n  /**\n   * 是否支持多选文件，`IE10+` 支持。开启后按住 `ctrl` 可选择多个文件，默认：`false`\n   */\n  multiple?: boolean;\n\n  /**\n   * 发到后台的文件参数名，默认：`file`\n   */\n  name?: string;\n\n  /**\n   * 上传所需参数或返回上传参数的方法\n   */\n  data?: {} | ((file: NzUploadFile) => {} | Observable<{}>);\n\n  /**\n   * 上传请求时是否携带 cookie，默认：`false`\n   */\n  withCredentials?: boolean;\n\n  /**\n   * 支持上传文件夹（[caniuse](https://caniuse.com/#feat=input-file-directory)），默认：`false`\n   */\n  directory?: boolean;\n\n  /**\n   * 点击打开文件对话框，默认：`true`\n   */\n  openFileDialogOnClick?: boolean;\n\n  /**\n   * 上传文件之前的钩子，参数为上传的文件，若返回 `false` 则停止上传\n   */\n  beforeUpload?: (file: NzUploadFile, fileList: NzUploadFile[]) => boolean | Observable<boolean>;\n\n  /**\n   * 通过覆盖默认的上传行为，可以自定义自己的上传实现\n   */\n  customRequest?: (item: NzUploadXHRArgs) => Subscription;\n\n  /**\n   * 点击移除文件时的回调，返回值为 `false` 时不移除\n   */\n  remove?: (file: NzUploadFile) => boolean | Observable<boolean>;\n\n  /**\n   * 点击文件链接或预览图标时的回调\n   */\n  preview?: (file: NzUploadFile) => void;\n\n  /**\n   * 自定义文件预览逻辑\n   */\n  previewFile?: (file: NzUploadFile) => Observable<string>;\n\n  /**\n   * 点击下载文件时的回调，如果没有指定，则默认跳转到文件 url 对应的标签页\n   */\n  download?: (file: NzUploadFile) => void;\n\n  /**\n   * 在上传之前转换文件。支持返回一个 Observable 对象\n   */\n  transformFile?: (file: NzUploadFile) => NzUploadTransformFileType;\n\n  /**\n   * 上传文件改变时的状态\n   */\n  change?: (args: NzUploadChangeParam) => void;\n}\n","import { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable } from 'rxjs';\nimport { SFSchemaEnumType } from '../../schema';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFTransferWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  /**\n   * 标题集合，顺序从左至右，默认：`['', '']`\n   */\n  titles?: string[];\n\n  /**\n   * 操作文案集合，顺序从下至上，默认：`['', '']`\n   */\n  operations?: string[];\n\n  /**\n   * 两个穿梭框的自定义样式，以`ngStyle`写法标题\n   */\n  listStyle?: object;\n\n  /**\n   * 单数单位\n   */\n  itemUnit?: string;\n\n  /**\n   * 复数单位\n   */\n  itemsUnit?: string;\n\n  /**\n   * 是否显示搜索框，默认：`false`\n   */\n  showSearch?: boolean;\n\n  /**\n   * 接收 `inputValueoption` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`\n   */\n  filterOption?: (inputValue: string, item: TransferItem) => boolean;\n\n  /**\n   * 搜索框的默认值\n   */\n  searchPlaceholder?: string;\n\n  /**\n   * 当列表为空时显示的内容\n   */\n  notFoundContent?: string;\n\n  /**\n   * 穿梭时二次校验\n   */\n  canMove?: (arg: TransferCanMove) => Observable<TransferItem[]>;\n\n  /**\n   * 选项在两栏之间转移时的回调函数\n   */\n  change?: (options: TransferChange) => void;\n\n  /**\n   * 搜索框内容时改变时的回调函数\n   */\n  searchChange?: (options: TransferSearchChange) => void;\n\n  /**\n   * 选中项发生改变时的回调函数\n   */\n  selectChange?: (options: TransferSelectChange) => void;\n}\n","import { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFSliderWidgetSchema extends SFUISchemaItem {\n  /**\n   * 当添加该属性时，启动双滑块模式\n   */\n  range?: boolean;\n\n  /**\n   * 刻度标记\n   */\n  marks?: NzMarks | null;\n\n  /**\n   * 是否只能拖拽到刻度上，默认：`false`\n   */\n  dots?: boolean;\n\n  /**\n   * 是否包含。`marks` 不为空对象时有效，值为 `true` 时表示值为包含关系，`false` 表示并列\n   */\n  included?: boolean;\n\n  /**\n   * 竖直显示。添加该属性时，Slider 为垂直方向\n   */\n  vertical?: boolean;\n\n  /**\n   * 与 `onmouseup` 触发时机一致，把当前值作为参数传入\n   */\n  afterChange?: (value: NzSliderValue) => void;\n\n  /**\n   * Slider 会把当前值传给 `nzTipFormatter`，并在 Tooltip 中显示 `nzTipFormatter` 的返回值，若为 null，则隐藏 Tooltip\n   */\n  formatter?: (value: number) => string;\n}\n","import { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFRateWidgetSchema extends SFUISchemaItem {\n  /**\n   * 是否允许再次点击后清除，默认：`true`\n   */\n  allowClear?: boolean;\n\n  /**\n   * 自动获取焦点，默认：`false`\n   */\n  autoFocus?: boolean;\n\n  /**\n   * 提醒文本模板，`{{value}}` 表示当前值（注意无任何空格）\n   */\n  text?: string;\n\n  /**\n   * 自定义每项的提示信息\n   */\n  tooltips?: string[];\n}\n","import { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable } from 'rxjs';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFAutoCompleteWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步静态数据源\n   */\n  asyncData?: (input: string) => Observable<SFSchemaEnumType[]>;\n\n  /**\n   * 在文字框中显示提示讯息\n   */\n  placeholder?: string;\n\n  /**\n   * 是否根据输入项进行筛选，默认只对 `label` 属性执行不区分大小定 `indexOf` 过滤\n   * 当其为一个函数时，会接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`。\n   */\n  filterOption?: boolean | ((input: string, option: SFSchemaEnum) => boolean);\n\n  /**\n   * 模式，自动完成常见邮箱后缀，可以重新使用 `enum` 来指定新后缀\n   */\n  type?: 'email';\n\n  /**\n   * 去抖时间，当实时数据源时默认最少 `50`，单位：毫秒\n   */\n  debounceTime?: number;\n\n  /**\n   * 是否默认高亮第一个选项，默认：`true`\n   */\n  defaultActiveFirstOption?: boolean;\n\n  /**\n   * 使用键盘选择选项的时候把选中项回填到输入框中，默认：`false`\n   */\n  backfill?: boolean;\n\n  /**\n   * 自定义宽度单位 `px`，默认：触发元素宽度\n   */\n  nzWidth?: number;\n\n  /**\n   * 变更回调\n   */\n  change?: (item: NzAutocompleteOptionComponent, orgData: SFSchemaEnum) => void;\n}\n","import { AutoSizeType } from 'ng-zorro-antd/input';\nimport { MentionOnSearchTypes } from 'ng-zorro-antd/mention';\nimport { Observable } from 'rxjs';\nimport { SFSchemaEnumType } from '../../schema';\nimport { SFDLSSize, SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFMentionWidgetSchema extends SFUISchemaItem {\n  /**\n   * 异步静态数据源\n   */\n  asyncData?: () => Observable<SFSchemaEnumType[]>;\n\n  size?: SFDLSSize;\n\n  /**\n   * 在文字框中显示提示讯息\n   */\n  placeholder?: string;\n\n  /**\n   * 实时数据\n   */\n  loadData?: (option: MentionOnSearchTypes) => Observable<SFSchemaEnumType[]>;\n\n  /**\n   * 未找到时的内容，默认：`无匹配结果，轻敲空格完成输入`\n   */\n  notFoundContent?: string;\n\n  /**\n   * 建议框位置，默认：`button`\n   */\n  placement?: 'button' | 'top';\n\n  /**\n   * 触发弹出下拉框的字符，默认：`@`\n   */\n  prefix?: string | string[];\n\n  /**\n   * 建议选项的取值方法，默认：`item => item.label`\n   */\n  valueWith?: (value: any) => string;\n\n  /**\n   * 下拉框选择建议时回调\n   */\n  select?: (value: any) => void;\n\n  /**\n   * 文本框类型，默认：`text`\n   */\n  inputStyle?: 'text' | 'textarea';\n\n  /**\n   * 自适应内容高度，可设置为 `true|false` 或对象：`{ minRows: 2, maxRows: 6 }`\n   */\n  autosize?: boolean | AutoSizeType;\n}\n","import { SFUISchemaItem } from '../../schema/ui';\n\nexport interface SFTextWidgetSchema extends SFUISchemaItem {\n  /**\n   * 当值不存在时所指定的文本，默认：`-`\n   */\n  defaultText?: string;\n}\n"],"names":[],"mappings":"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"}