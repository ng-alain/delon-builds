{"version":3,"file":"form.js","sources":["../../../../packages/form/src/config.ts","../../../../packages/form/src/const.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/errors.ts","../../../../packages/form/form.ts"],"sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util/config';\n\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' }\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com']\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","export const SF_SEQ = '/';\n","import { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toBoolean } from '@delon/util/decorator';\nimport { deepCopy } from '@delon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: NzSafeAny): boolean {\n  return o == null;\n}\n\nexport function toBool(value: NzSafeAny, defaultValue: boolean): boolean {\n  return toBoolean(value, defaultValue)!!;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (ui.debug) {\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): NzSafeAny {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: NzSafeAny = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIfSchema(_schema: SFSchema, _ui: SFUISchemaItemRun): void {\n  const fn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n    resolveIf(schema, ui);\n\n    Object.keys(schema.properties!).forEach(key => {\n      const property = schema.properties![key];\n      const uiKey = `$${key}`;\n      if (property.items) {\n        fn(property.items, ui[uiKey].$items);\n      }\n      if (property.properties) {\n        fn(property, ui[uiKey]);\n      }\n    });\n  };\n  fn(_schema, _ui);\n}\n\nfunction resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: NzSafeAny = {};\n  const visibleElse: NzSafeAny = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: NzSafeAny) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) {\n    schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n  }\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: NzSafeAny[], formData: NzSafeAny, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: NzSafeAny) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: NzSafeAny[], formData: NzSafeAny, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: NzSafeAny,\n  asyncArgs?: NzSafeAny\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AlainSFConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: Record<string, unknown>;\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: Record<string, unknown>,\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as NzSafeAny;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): AlainSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = {\n      onlySelf: false,\n      emitValidator: true,\n      emitValueEvent: true,\n      updatePath: '',\n      updateValue: null,\n      ...options\n    };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue == null ? this.value : options.updateValue;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: Record<string, unknown>): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return `${value}`.length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]): ErrorData[] {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat: boolean = true): void {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-zA-Z0-9]+)}/g,\n              (_v: string, key: string) => err.params![key] || ''\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  /**\n   * Set the hide or display of widget\n   * 设置小部件的隐藏或显示\n   */\n  setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 渲染时需要重新触发 reset\n    if (visible) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value, property);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              })\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged()\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui[`$${propertyId}`],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        properties[propertyId].resetValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: Record<string, unknown>,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: NzSafeAny[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: Record<string, unknown>): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<Record<string, unknown>>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: Record<string, unknown>): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util/config';\n\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: Record<string, unknown>,\n    parent: PropertyGroup | null = null,\n    propertyId?: string\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error(`Instanciation of a FormProperty with an unknown parent type: ${parent.type}`);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (\n        (propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) ||\n        ui.showRequired === true\n      ) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\n\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\n\nimport { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { REGEX } from '@delon/util/format';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean }\n  ): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: Ajv;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService, private ngZone: NgZone) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    const customOptions = this.options.ajv || {};\n    this.ngZone.runOutsideAngular(() => {\n      this.ajv = new Ajv({\n        allErrors: true,\n        loopEnum: 50,\n        ...customOptions,\n        formats: {\n          'data-url': /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\n          color: REGEX.color,\n          mobile: REGEX.mobile,\n          'id-card': REGEX.idCard,\n          ...customOptions.formats\n        }\n      });\n      addFormats(this.ajv as NzSafeAny);\n    });\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean }\n  ): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [\n      ...(this.options.ingoreKeywords as string[]),\n      ...((extraOptions.ingoreKeywords as string[]) || [])\n    ];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ngZone.runOutsideAngular(() => this.ajv.validate(schema, value));\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors as ErrorData[];\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: NzSafeAny): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: NzSafeAny): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as NzSafeAny;\n    const componentFactory =\n      this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { BooleanInput, InputBoolean } from '@delon/util/decorator';\nimport { deepCopy } from '@delon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIfSchema, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(\n  schemaValidatorFactory: SchemaValidatorFactory,\n  cogSrv: AlainConfigService\n): FormPropertyFactory {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\nexport type SFMode = 'default' | 'search' | 'edit';\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService]\n    },\n    TerminatorService\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: Record<string, unknown>;\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: Record<string, unknown>;\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n  get btnGrid(): NzSafeAny {\n    return this._btn.render!.grid;\n  }\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: Record<string, NzSafeAny>;\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button?: SFButton | 'none' | null = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode(): SFMode {\n    return this._mode;\n  }\n  private _mode: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<Record<string, unknown>>();\n  @Output() readonly formSubmit = new EventEmitter<Record<string, unknown>>();\n  @Output() readonly formReset = new EventEmitter<Record<string, unknown>>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /**\n   * Whether the form is valid\n   *\n   * 表单是否有效\n   */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /**\n   * The value of the form\n   *\n   * 表单值\n   */\n  get value(): { [key: string]: NzSafeAny } {\n    return this._item;\n  }\n\n  /**\n   * Get form element property based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素属性\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * Get element value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素值\n   */\n  getValue(path: string): NzSafeAny {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * Set form element new value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)设置某个表单元素属性值\n   */\n  setValue(path: string, value: NzSafeAny): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<NzSafeAny> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<NzSafeAny>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$)\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = deepCopy({\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0\n            ? { widget: 'select' }\n            : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey]\n        }) as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          ui._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ...(_schema as NzSafeAny).ui,\n      ...this.ui['*']\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIfSchema(_schema, this._ui);\n\n    this._schema = _schema;\n    delete _schema.ui;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton)\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.validator();\n    this._inited = true;\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (!this._inited) {\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  /**\n   * Validator the form is valid\n   *\n   * 校验表单是否有效\n   * - `emitError` 当表单无效时是否触发 `formError` 事件，默认：`true`\n   * - `onlyRoot` 只对根进行检验，不进行向下逐个递归，根已经包含整个 Json Schema，默认：`true`\n   */\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): boolean {\n    if (!this.platform.isBrowser) {\n      return false;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key =>\n          fn((property.properties as { [key: string]: FormProperty })[key])\n        );\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this._valid;\n  }\n\n  /**\n   * Refresh the form Schema, when specifying `newSchema` means to replace the current Schema\n   *\n   * 刷新 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 可以针对某个表单元素进行刷新，例如：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * Reset form\n   *\n   * 重置表单\n   *\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  host: { '[class.sf__item]': 'true' },\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    const p = this.formProperty;\n    this.ref = this.widgetFactory.createWidget(this.container, (p.ui.widget || p.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\n\nimport { InputNumber } from '@delon/util/decorator';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = `${this.num}px`;\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\n\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SFItemWrapComponent {\n  _showTitle: boolean = false;\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input()\n  set showTitle(val: boolean | string | null | undefined) {\n    this._showTitle = !!val;\n  }\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]'\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { LocaleData } from '@delon/theme';\nimport { NgClassType, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls(): NgClassType {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.unsubscribe$))\n      .subscribe((errors: ErrorData[] | null) => {\n        if (errors == null) return;\n        di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n        // 不显示首次校验视觉\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? (errors[0].message as string) : '';\n\n          this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): NzSafeAny {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { NzButtonType } from 'ng-zorro-antd/button';\n\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  host: { '[class.sf__array]': 'true' },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: NzButtonType;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled ||\n      (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    return !this.disabled && !!this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  private reValid(): void {\n    this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: true });\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    this.reValid();\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    this.reValid();\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, mergeMap, startWith } from 'rxjs/operators';\n\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: NzSafeAny = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n  private updateTyping = true;\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => {\n        const data = getEnum(res, null, this.schema.readOnly!);\n        if (this.updateTyping) {\n          this.updateTyping = false;\n          this.typing = data.find(w => w.value === this.value)?.label ?? '';\n        }\n        return data;\n      })\n    );\n  }\n\n  reset(value: SFValue): void {\n    this.typing = value;\n    this.updateTyping = true;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(\n          this.schema.enum! || this.formProperty.options.uiEmailSuffixes,\n          null,\n          this.schema.readOnly!\n        );\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { ControlUIWidget } from '../../widget';\nimport { SFBooleanWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BooleanWidget extends ControlUIWidget<SFBooleanWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<NzSafeAny>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) =>\n        asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: NzSafeAny[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { format } from 'date-fns';\n\nimport { toDate } from '@delon/util/date-time';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i!: { allowClear: boolean; showToday: boolean };\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true)\n    };\n  }\n\n  reset(value: SFValue): void {\n    const toDateOptions = { formatString: this.startFormat, defaultValue: null };\n    if (Array.isArray(value)) {\n      value = value.map(v => toDate(v, toDateOptions));\n    } else {\n      value = toDate(value, toDateOptions);\n    }\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: NzSafeAny): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: NzSafeAny;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as NzSafeAny;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: NzSafeAny): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!))\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    this.step = multipleOf || 1;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + this.step : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - this.step : maximum;\n    }\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n    if (this.ui.change) this.ui.change(this.value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: NzSafeAny;\n  type: SFObjectWidgetRenderType = 'default';\n  list: NzSafeAny[] = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (\n      this.type === 'card' ||\n      (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)\n    ) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: NzSafeAny[] = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ArrayService } from '@delon/util/array';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  private search$ = new Subject<string>();\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n  loading = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n      showArrow\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      showArrow: typeof showArrow !== 'boolean' ? undefined : showArrow,\n      compareWith: compareWith || ((o1: NzSafeAny, o2: NzSafeAny) => o1 === o2)\n    };\n\n    const onSearch = this.ui.onSearch!;\n    if (onSearch) {\n      this.search$\n        .pipe(\n          takeUntil(this.sfItemComp!.unsubscribe$),\n          distinctUntilChanged(),\n          debounceTime(this.ui.searchDebounceTime || 300),\n          switchMap(text => onSearch(text)),\n          catchError(() => [])\n        )\n        .subscribe(list => {\n          this.data = list;\n          this.checkGroup(list);\n          this.loading = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    const srv = this.injector.get(ArrayService);\n    if (!Array.isArray(values)) {\n      return srv.findTree(this.data, (item: SFSchemaEnum) => item.value === values)!;\n    }\n    return values.map(value => srv.findTree(this.data, (item: SFSchemaEnum) => item.value === value));\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n\n  onSearch(value: string): void {\n    if (this.ui.onSearch) {\n      this.loading = true;\n      this.search$.next(value);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\n\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return `${value}`;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n  private change$: BehaviorSubject<string> | null = null;\n\n  ngOnInit(): void {\n    const {\n      addOnAfter,\n      addOnAfterIcon,\n      addOnBefore,\n      addOnBeforeIcon,\n      prefix,\n      prefixIcon,\n      suffix,\n      suffixIcon,\n      autofocus\n    } = this.ui;\n    this.type = !!(\n      addOnAfter ||\n      addOnBefore ||\n      addOnAfterIcon ||\n      addOnBeforeIcon ||\n      prefix ||\n      prefixIcon ||\n      suffix ||\n      suffixIcon\n    )\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        (\n          (this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement\n        ).focus();\n      }, 20);\n    }\n    this.initChange();\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  private initChange(): void {\n    const dueTime = this.ui.changeDebounceTime;\n    const changeFn = this.ui.change;\n    if (dueTime == null || dueTime <= 0 || changeFn == null) return;\n\n    this.change$ = new BehaviorSubject<string>(this.value);\n    let obs = this.change$.asObservable().pipe(debounceTime(dueTime), takeUntil(this.sfItemComp!.unsubscribe$));\n    if (this.ui.changeMap != null) {\n      obs = obs.pipe(switchMap(this.ui.changeMap));\n    }\n    obs.subscribe(val => changeFn(val));\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.change$ != null) {\n      this.change$.next(val);\n      return;\n    }\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: Event): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  text: string = '';\n  ngOnInit(): void {\n    this.ui._required = false;\n    this.ui.html = toBool(this.ui.html, true);\n  }\n\n  reset(value: SFValue): void {\n    this.text = value || this.ui.defaultText || '-';\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { AutoSizeType } from 'ng-zorro-antd/input';\n\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { format } from 'date-fns';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: NzSafeAny;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.minuteStep || 1,\n      secondStep: ui.secondStep || 1\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ${value}`);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport {\n  TransferCanMove,\n  TransferChange,\n  TransferItem,\n  TransferSearchChange,\n  TransferSelectChange\n} from 'ng-zorro-antd/transfer';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i!: { titles: string[]; operations: string[]; itemUnit: string; itemsUnit: string };\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项'\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as NzSafeAny[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: SFSchemaEnum) => options.list.indexOf(w as TransferItem) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/core/tree';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title)\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { deepGet } from '@delon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\n\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: NzSafeAny;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount\n    } = this.ui;\n    const res: NzSafeAny = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(\n      list => {\n        this.fileList = list as NzUploadFile[];\n        this.formProperty._value = this.pureValue(list);\n        this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n        this.detectChanges();\n      }\n    );\n  }\n\n  private _getValue(file: NzUploadFile): NzSafeAny {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): NzSafeAny {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","/* eslint-disable import/order */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, NgZone } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService } from '@delon/util/config';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  exports: COMPONENTS,\n  entryComponents: WIDGETS\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService, NgZone]\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry }\n      ]\n    };\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`\n};\n\nexport interface ErrorData {\n  [key: string]: NzSafeAny;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: NzSafeAny };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SFSchema as ɵb} from './src/schema';\nexport {TerminatorService as ɵa} from './src/terminator.service';"],"names":[],"mappings":"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"}