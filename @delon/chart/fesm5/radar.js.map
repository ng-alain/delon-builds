{"version":3,"file":"radar.js","sources":["ng://@delon/chart/radar/radar.component.ts","ng://@delon/chart/radar/radar.module.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { InputBoolean, InputNumber } from '@delon/util';\n\ndeclare var G2: any;\n\nexport interface G2RadarData {\n  name: string;\n  label: string;\n  value: number;\n  [key: string]: any;\n}\n\n@Component({\n  selector: 'g2-radar',\n  exportAs: 'g2Radar',\n  templateUrl: './radar.component.html',\n  host: {\n    '[style.height.px]': 'height',\n    '[class.g2-radar]': 'true',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class G2RadarComponent implements OnInit, OnDestroy, OnChanges {\n  @ViewChild('container', { static: true }) private node: ElementRef;\n  private chart: any;\n  legendData: any[] = [];\n\n  // #region fields\n\n  @Input() @InputNumber() delay = 0;\n  @Input() title: string | TemplateRef<void>;\n  @Input() @InputNumber() height = 0;\n  @Input() padding: number[] = [44, 30, 16, 30];\n  @Input() @InputBoolean() hasLegend = true;\n  @Input() @InputNumber() tickCount = 4;\n  @Input() data: G2RadarData[] = [];\n  @Input() colors = ['#1890FF', '#FACC14', '#2FC25B', '#8543E0', '#F04864', '#13C2C2', '#fa8c16', '#a0d911'];\n\n  // #endregion\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone) {}\n\n  private getHeight() {\n    return this.height - (this.hasLegend ? 80 : 22);\n  }\n\n  private install() {\n    const { node, padding } = this;\n\n    const chart = (this.chart = new G2.Chart({\n      container: node.nativeElement,\n      forceFit: true,\n      height: this.getHeight(),\n      padding,\n    }));\n\n    chart.coord('polar');\n    chart.legend(false);\n    chart.axis('label', {\n      line: null,\n      labelOffset: 8,\n      labels: {\n        label: {\n          fill: 'rgba(0, 0, 0, .65)',\n        },\n      },\n      grid: {\n        line: {\n          stroke: '#e9e9e9',\n          lineWidth: 1,\n          lineDash: [0, 0],\n        },\n      },\n    });\n    chart.axis('value', {\n      grid: {\n        type: 'polygon',\n        line: {\n          stroke: '#e9e9e9',\n          lineWidth: 1,\n          lineDash: [0, 0],\n        },\n      },\n      labels: {\n        label: {\n          fill: 'rgba(0, 0, 0, .65)',\n        },\n      },\n    });\n    chart.filter('name', (name: string) => {\n      const legendItem = this.legendData.find(w => w.name === name);\n      return legendItem ? legendItem.checked !== false : true;\n    });\n\n    chart.line().position('label*value');\n\n    chart\n      .point()\n      .position('label*value')\n      .shape('circle')\n      .size(3);\n\n    chart.render();\n\n    this.attachChart();\n  }\n\n  private attachChart() {\n    const { chart, padding, data, colors, tickCount } = this;\n    if (!chart || !data || data.length <= 0) return;\n\n    chart.set('height', this.getHeight());\n    chart.set('padding', padding);\n\n    chart.source(data, {\n      value: {\n        min: 0,\n        tickCount,\n      },\n    });\n\n    chart.get('geoms').forEach(g => {\n      g.color('name', colors);\n    });\n\n    chart.repaint();\n\n    this.ngZone.run(() => this.genLegend());\n  }\n\n  private genLegend() {\n    const { hasLegend, cdr, chart } = this;\n    if (!hasLegend) return;\n\n    this.legendData = chart\n      .get('geoms')[0]\n      .get('dataArray')\n      .map((item: any) => {\n        const origin = item[0]._origin;\n        const result = {\n          name: origin.name,\n          color: item[0].color,\n          checked: true,\n          value: item.reduce((p, n) => p + n._origin.value, 0),\n        };\n\n        return result;\n      });\n\n    cdr.detectChanges();\n  }\n\n  _click(i: number) {\n    const { legendData, chart } = this;\n    legendData[i].checked = !legendData[i].checked;\n    chart.repaint();\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => setTimeout(() => this.install(), this.delay));\n  }\n\n  ngOnChanges(): void {\n    this.legendData.forEach(i => (i.checked = true));\n    this.ngZone.runOutsideAngular(() => this.attachChart());\n  }\n\n  ngOnDestroy(): void {\n    if (this.chart) {\n      this.ngZone.runOutsideAngular(() => this.chart.destroy());\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\n\nimport { G2RadarComponent } from './radar.component';\n\nconst COMPONENTS = [G2RadarComponent];\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule, NzGridModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class G2RadarModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}