/**
 * @license ng-alain(cipchk@qq.com) v8.9.3
 * (c) 2019 cipchk https://ng-alain.com/
 * License: MIT
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@delon/util"),require("@angular/common"),require("ng-zorro-antd/card"),require("ng-zorro-antd/spin")):"function"==typeof define&&define.amd?define("@delon/chart/card",["exports","@angular/core","@delon/util","@angular/common","ng-zorro-antd/card","ng-zorro-antd/spin"],e):e(((t=t||self).delon=t.delon||{},t.delon.chart=t.delon.chart||{},t.delon.chart.card={}),t.ng.core,t.delon.util,t.ng.common,t["ng-zorro-antd/card"],t["ng-zorro-antd/spin"])}(this,(function(t,e,n,o,r,a){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function i(t,e,n,o){var r,a=arguments.length,i=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(i=(a<3?r(i):a>3?r(e,n,i):r(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i}function c(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function d(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,a=n.call(t),i=[];try{for(;(void 0===e||e-- >0)&&!(o=a.next()).done;)i.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return i}function l(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(d(arguments[e]));return t}var p=function(){function t(t){this.cdr=t,this.bordered=!1,this.total="",this._height="auto",this.loading=!1}return Object.defineProperty(t.prototype,"contentHeight",{set:function(t){this._orgHeight=t,this._height="number"==typeof t?this._height=t+"px":t},enumerable:!0,configurable:!0}),t.prototype.ngOnChanges=function(){this.cdr.detectChanges()},t.decorators=[{type:e.Component,args:[{selector:"g2-card",exportAs:"g2Card",template:'<nz-card [nzBodyStyle]="{padding: \'20px 24px 8px 24px\'}" [nzBordered]="bordered">\n  <nz-spin [nzSpinning]="loading">\n    <div class="g2-card__top">\n      <div class="g2-card__avatar">\n        <ng-container *stringTemplateOutlet="avatar">{{avatar}}</ng-container>\n      </div>\n      <div class="g2-card__meta-wrap">\n        <div class="g2-card__meta">\n          <span class="g2-card__meta-title" *ngIf="title">\n            <ng-container *stringTemplateOutlet="title">{{title}}</ng-container>\n          </span>\n          <span class="g2-card__meta-action" *ngIf="action">\n            <ng-container *stringTemplateOutlet="action">{{action}}</ng-container>\n          </span>\n        </div>\n        <p *ngIf="total" class="g2-card__total">{{total}}</p>\n      </div>\n    </div>\n    <div class="g2-card__desc" [ngStyle]="{\'height\':_height}">\n      <div [ngClass]="{\'g2-card__fixed\': !!_orgHeight }">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class="g2-card__footer" *ngIf="footer">\n      <ng-container *stringTemplateOutlet="footer">{{footer}}</ng-container>\n    </div>\n  </nz-spin>\n</nz-card>\n',host:{"[class.g2-card]":"true"},preserveWhitespaces:!1,changeDetection:e.ChangeDetectionStrategy.OnPush,encapsulation:e.ViewEncapsulation.None}]}],t.ctorParameters=function(){return[{type:e.ChangeDetectorRef}]},t.propDecorators={bordered:[{type:e.Input}],avatar:[{type:e.Input}],title:[{type:e.Input}],action:[{type:e.Input}],total:[{type:e.Input}],contentHeight:[{type:e.Input}],footer:[{type:e.Input}],loading:[{type:e.Input}]},i([n.InputBoolean(),c("design:type",Object)],t.prototype,"bordered",void 0),i([n.InputBoolean(),c("design:type",Object)],t.prototype,"loading",void 0),t}();var g=[p],s=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[o.CommonModule,n.DelonUtilModule,r.NzCardModule,a.NzSpinModule],declarations:l(g),exports:l(g)}]}],t}();t.G2CardComponent=p,t.G2CardModule=s,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=card.umd.min.js.map