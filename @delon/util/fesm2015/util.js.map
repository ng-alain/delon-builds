{"version":3,"file":"util.js","sources":["../../../../packages/util/src/other/deep.ts","../../../../packages/util/src/string/string.ts","../../../../packages/util/src/time/time.ts","../../../../packages/util/src/lazy/lazy.service.ts","../../../../packages/util/src/validate/validate.ts","../../../../packages/util/src/validate/validators.ts","../../../../packages/util/src/logger/logger.ts","../../../../packages/util/src/other/check.ts","../../../../packages/util/src/other/copy.ts","../../../../packages/util/src/other/style.ts","../../../../packages/util/src/config/abc/error-collect.type.ts","../../../../packages/util/src/config/abc/image.type.ts","../../../../packages/util/src/config/abc/date-picker.type.ts","../../../../packages/util/src/config/abc/loading.type.ts","../../../../packages/util/src/config/abc/lodop.type.ts","../../../../packages/util/src/config/abc/page-header.type.ts","../../../../packages/util/src/config/abc/qr.type.ts","../../../../packages/util/src/config/abc/se.type.ts","../../../../packages/util/src/config/abc/sv.type.ts","../../../../packages/util/src/config/abc/sg.type.ts","../../../../packages/util/src/config/abc/st.type.ts","../../../../packages/util/src/config/abc/xlsx.type.ts","../../../../packages/util/src/config/abc/zip.type.ts","../../../../packages/util/src/config/abc/media.type.ts","../../../../packages/util/src/config/acl/acl.type.ts","../../../../packages/util/src/config/auth/auth.type.ts","../../../../packages/util/src/config/cache/cache.type.ts","../../../../packages/util/src/config/chart/chart.type.ts","../../../../packages/util/src/config/util/array.type.ts","../../../../packages/util/src/config/theme/http.type.ts","../../../../packages/util/src/config/theme/responsive.type.ts","../../../../packages/util/src/config/mock/mock.type.ts","../../../../packages/util/src/config/sf/sf.type.ts","../../../../packages/util/src/config/config.types.ts","../../../../packages/util/src/config/config.service.ts","../../../../packages/util/src/array/array.service.ts","../../../../packages/util/src/util.module.ts"],"sourcesContent":["import extend from 'extend';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * 类似 `_.get`，根据 `path` 获取安全值\n * jsperf: https://jsperf.com/es-deep-getttps://jsperf.com/es-deep-get\n *\n * @param obj 数据源，无效时直接返回 `defaultValue` 值\n * @param path 若 `null`、`[]`、未定义及未找到时返回 `defaultValue` 值\n * @param defaultValue 默认值\n */\nexport function deepGet(obj: NzSafeAny | null, path: string | string[] | null | undefined, defaultValue?: NzSafeAny): NzSafeAny {\n  if (!obj || path == null || path.length === 0) return defaultValue;\n  if (!Array.isArray(path)) {\n    path = ~path.indexOf('.') ? path.split('.') : [path];\n  }\n  if (path.length === 1) {\n    const checkObj = obj[path[0]];\n    return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n  }\n  const res = path.reduce((o, k) => (o || {})[k], obj);\n  return typeof res === 'undefined' ? defaultValue : res;\n}\n\n/**\n * 基于 [extend](https://github.com/justmoon/node-extend) 的深度拷贝\n */\nexport function deepCopy(obj: NzSafeAny): NzSafeAny {\n  const result = extend(true, {}, { _: obj });\n  return result._;\n}\n\n/**\n * 深度合并对象\n *\n * @param original 原始对象\n * @param arrayProcessMethod 数组处理方式\n *  - `true` 表示替换新值，不管新值为哪种类型\n *  - `false` 表示会合并整个数组（将旧数据与新数据合并成新数组）\n * @param objects 要合并的对象\n */\nexport function deepMergeKey(original: any, arrayProcessMethod: boolean, ...objects: any[]): any {\n  if (Array.isArray(original) || typeof original !== 'object') return original;\n\n  const isObject = (v: any) => typeof v === 'object' || typeof v === 'function';\n\n  const merge = (target: any, obj: NzSafeAny) => {\n    Object.keys(obj)\n      .filter(key => key !== '__proto__' && Object.prototype.hasOwnProperty.call(obj, key))\n      .forEach(key => {\n        const fromValue = obj[key];\n        const toValue = target[key];\n        if (Array.isArray(toValue)) {\n          target[key] = arrayProcessMethod ? fromValue : [...toValue, ...fromValue];\n        } else if (fromValue != null && isObject(fromValue) && toValue != null && isObject(toValue)) {\n          target[key] = merge(toValue, fromValue);\n        } else {\n          target[key] = deepCopy(fromValue);\n        }\n      });\n    return target;\n  };\n\n  objects.filter(v => v != null && isObject(v)).forEach(v => merge(original, v));\n\n  return original;\n}\n\n/**\n * 深度合并对象\n *\n * @param original 原始对象\n * @param objects 要合并的对象\n */\nexport function deepMerge(original: any, ...objects: any[]): any {\n  return deepMergeKey(original, false, ...objects);\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { deepGet } from '../other/deep';\n\n/**\n * 字符串格式化\n * ```\n * format('this is ${name}', { name: 'asdf' })\n * // output: this is asdf\n * format('this is ${user.name}', { user: { name: 'asdf' } }, true)\n * // output: this is asdf\n * ```\n */\nexport function format(str: string | null | undefined, obj: NzSafeAny | null | undefined, needDeepGet: boolean = false): string {\n  return (str || '').replace(/\\${([^}]+)}/g, (_work: string, key: string) =>\n    needDeepGet ? deepGet(obj, key.split('.'), '') : (obj || {})[key] || '',\n  );\n}\n","import addDays from 'date-fns/addDays';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport parse from 'date-fns/parse';\nimport parseISO from 'date-fns/parseISO';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\nimport subMonths from 'date-fns/subMonths';\nimport subWeeks from 'date-fns/subWeeks';\nimport subYears from 'date-fns/subYears';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * 获取时间范围\n * @param type 类型，带 `-` 表示过去一个时间，若指定 `number` 表示天数\n * @param time 开始时间\n */\nexport function getTimeDistance(\n  type: 'today' | '-today' | 'yesterday' | 'week' | '-week' | 'month' | '-month' | 'year' | '-year' | number,\n  time?: Date | string | number,\n): [Date, Date] {\n  time = time ? (typeof time === 'string' ? parse(time, 'yyyy-MM-dd HH:mm:ss', new Date()) : new Date(time)) : new Date();\n  const options: { weekStartsOn: 1 } = { weekStartsOn: 1 };\n\n  let res: [Date, Date];\n  switch (type) {\n    case 'today':\n      res = [time, time];\n      break;\n    case '-today':\n      res = [addDays(time, -1), time];\n      break;\n    case 'yesterday':\n      res = [addDays(time, -1), addDays(time, -1)];\n      break;\n    case 'week':\n      res = [startOfWeek(time, options), endOfWeek(time, options)];\n      break;\n    case '-week':\n      res = [startOfWeek(subWeeks(time, 1), options), endOfWeek(subWeeks(time, 1), options)];\n      break;\n    case 'month':\n      res = [startOfMonth(time), endOfMonth(time)];\n      break;\n    case '-month':\n      res = [startOfMonth(subMonths(time, 1)), endOfMonth(subMonths(time, 1))];\n      break;\n    case 'year':\n      res = [startOfYear(time), endOfYear(time)];\n      break;\n    case '-year':\n      res = [startOfYear(subYears(time, 1)), endOfYear(subYears(time, 1))];\n      break;\n    default:\n      res = type > 0 ? [time, addDays(time, type)] : [addDays(time, type), time];\n      break;\n  }\n  return fixEndTimeOfRange(res);\n}\n\n/**\n * fix time is the most, big value\n */\nexport function fixEndTimeOfRange(dates: [Date, Date]): [Date, Date] {\n  return [startOfDay(dates[0]), endOfDay(dates[1])];\n}\n\nexport type ToDateOptions = string | { formatString?: string; defaultValue?: NzSafeAny };\n\n/**\n * Return the date parsed from string using the given format string\n * - If the argument is a number, it is treated as a timestamp.\n * @param formatString If parsing fails try to parse the date by pressing `formatString`\n * @param defaultValue If parsing fails returned default value, default: `new Date(NaN)`\n */\nexport function toDate(value: Date | string | number, options?: ToDateOptions): Date {\n  if (typeof options === 'string') options = { formatString: options };\n  const { formatString, defaultValue } = { formatString: 'yyyy-MM-dd HH:mm:ss', defaultValue: new Date(NaN), ...options };\n  if (value == null) {\n    return defaultValue;\n  }\n  if (value instanceof Date) {\n    return value;\n  }\n  if (typeof value === 'number' || (typeof value === 'string' && /[0-9]{10,13}/.test(value))) {\n    return new Date(+value);\n  }\n  let tryDate = parseISO(value);\n  if (isNaN(tryDate as NzSafeAny)) {\n    tryDate = parse(value, formatString!, new Date());\n  }\n\n  return isNaN(tryDate as NzSafeAny) ? defaultValue : tryDate;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, share } from 'rxjs/operators';\n\nexport interface LazyResult {\n  path: string;\n  status: 'ok' | 'error' | 'loading';\n  error?: {};\n}\n\n/**\n * 延迟加载资源（js 或 css）服务\n */\n@Injectable({ providedIn: 'root' })\nexport class LazyService {\n  private list: { [key: string]: boolean } = {};\n  private cached: { [key: string]: LazyResult } = {};\n  private _notify: BehaviorSubject<LazyResult[]> = new BehaviorSubject<LazyResult[]>([]);\n\n  constructor(@Inject(DOCUMENT) private doc: any) {}\n\n  get change(): Observable<LazyResult[]> {\n    return this._notify.asObservable().pipe(\n      share(),\n      filter(ls => ls.length !== 0),\n    );\n  }\n\n  clear(): void {\n    this.list = {};\n    this.cached = {};\n  }\n\n  load(paths: string | string[]): Promise<LazyResult[]> {\n    if (!Array.isArray(paths)) {\n      paths = [paths];\n    }\n\n    const promises: Array<Promise<LazyResult>> = [];\n    paths.forEach(path => {\n      if (path.endsWith('.js')) {\n        promises.push(this.loadScript(path));\n      } else {\n        promises.push(this.loadStyle(path));\n      }\n    });\n\n    return Promise.all(promises).then(res => {\n      this._notify.next(res);\n      return Promise.resolve(res);\n    });\n  }\n\n  loadScript(path: string, innerContent?: string): Promise<LazyResult> {\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve({ ...this.cached[path], status: 'loading' });\n        return;\n      }\n\n      this.list[path] = true;\n      const onSuccess = (item: LazyResult) => {\n        this.cached[path] = item;\n        resolve(item);\n        this._notify.next([item]);\n      };\n\n      const node = this.doc.createElement('script') as NzSafeAny;\n      node.type = 'text/javascript';\n      node.src = path;\n      node.charset = 'utf-8';\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      if (node.readyState) {\n        // IE\n        node.onreadystatechange = () => {\n          if (node.readyState === 'loaded' || node.readyState === 'complete') {\n            node.onreadystatechange = null;\n            onSuccess({\n              path,\n              status: 'ok',\n            });\n          }\n        };\n      } else {\n        node.onload = () =>\n          onSuccess({\n            path,\n            status: 'ok',\n          });\n      }\n      node.onerror = (error: {}) =>\n        onSuccess({\n          path,\n          status: 'error',\n          error,\n        });\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n    });\n  }\n\n  loadStyle(path: string, rel: string = 'stylesheet', innerContent?: string): Promise<LazyResult> {\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n\n      this.list[path] = true;\n\n      const node = this.doc.createElement('link') as HTMLLinkElement;\n      node.rel = rel;\n      node.type = 'text/css';\n      node.href = path;\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n      const item: LazyResult = {\n        path,\n        status: 'ok',\n      };\n      this.cached[path] = item;\n      resolve(item);\n    });\n  }\n}\n","/** 是否为数字 */\nexport function isNum(value: string | number): boolean {\n  return /^((-?\\d+\\.\\d+)|(-?\\d+)|(-?\\.\\d+))$/.test(value.toString());\n}\n\n/** 是否为整数 */\nexport function isInt(value: string | number): boolean {\n  return isNum(value) && parseInt(value.toString(), 10).toString() === value.toString();\n}\n\n/** 是否为小数 */\nexport function isDecimal(value: string | number): boolean {\n  return isNum(value) && !isInt(value);\n}\n\n/** 是否为身份证 */\nexport function isIdCard(value: string): boolean {\n  return typeof value === 'string' && /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/i.test(value);\n}\n\n/** 是否为手机号 */\nexport function isMobile(value: string): boolean {\n  return typeof value === 'string' && /^(0|\\+?86|17951)?(13[0-9]|15[0-9]|17[0678]|18[0-9]|14[57])[0-9]{8}$/.test(value);\n}\n\n/** 是否URL地址 */\nexport function isUrl(url: string): boolean {\n  return /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+(?::\\d+)?|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/.test(\n    url,\n  );\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { isDecimal, isIdCard, isInt, isMobile, isNum, isUrl } from './validate';\n\n/** 一套日常验证器 */\n// tslint:disable-next-line:class-name\nexport class _Validators {\n  /** 是否为数字 */\n  static num(control: AbstractControl): ValidationErrors | null {\n    return isNum(control.value) ? null : { num: true };\n  }\n\n  /** 是否为整数 */\n  static int(control: AbstractControl): ValidationErrors | null {\n    return isInt(control.value) ? null : { int: true };\n  }\n\n  /** 是否为小数 */\n  static decimal(control: AbstractControl): ValidationErrors | null {\n    return isDecimal(control.value) ? null : { decimal: true };\n  }\n\n  /** 是否为身份证 */\n  static idCard(control: AbstractControl): ValidationErrors | null {\n    return isIdCard(control.value) ? null : { idCard: true };\n  }\n\n  /** 是否为手机号 */\n  static mobile(control: AbstractControl): ValidationErrors | null {\n    return isMobile(control.value) ? null : { mobile: true };\n  }\n\n  /** 是否URL地址 */\n  static url(control: AbstractControl): ValidationErrors | null {\n    return isUrl(control.value) ? null : { url: true };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { environment } from 'ng-zorro-antd/core/environments';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nconst record: Record<string, boolean> = {};\n\nexport const PREFIX = '[@DELON]:';\n\nfunction notRecorded(...args: NzSafeAny[]): boolean {\n  const asRecord = args.reduce((acc, c) => acc + c.toString(), '');\n\n  if (record[asRecord]) {\n    return false;\n  } else {\n    record[asRecord] = true;\n    return true;\n  }\n}\n\nfunction consoleCommonBehavior(consoleFunc: (...args: NzSafeAny) => void, ...args: NzSafeAny[]): void {\n  if (environment.isTestMode || (isDevMode() && notRecorded(...args))) {\n    consoleFunc(...args);\n  }\n}\n\n// Warning should only be printed in dev mode and only once.\nexport const warn = (...args: NzSafeAny[]) => consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, ...arg), ...args);\n\nexport const deprecation11 = (comp: string, from: string, to?: string) => {\n  warnDeprecation(`${comp} => '${from}' is going to be removed in 11.0.0${to ? `, Please use '${to}' instead` : ``}.`);\n};\n\nexport const warnDeprecation = (...args: NzSafeAny[]) => {\n  if (!environment.isTestMode) {\n    const stack = new Error().stack;\n    return consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, 'deprecated:', ...arg, stack), ...args);\n  } else {\n    return () => {};\n  }\n};\n\n// Log should only be printed in dev mode.\nexport const log = (...args: NzSafeAny[]) => {\n  if (isDevMode()) {\n    console.log(PREFIX, ...args);\n  }\n};\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { warn } from '../logger/logger';\n\nexport function isEmpty(element: HTMLElement): boolean {\n  const nodes = element.childNodes;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes.item(i);\n    if (node.nodeType === 1 && (node as HTMLElement).outerHTML.toString().trim().length !== 0) {\n      return false;\n    } else if (node.nodeType === 3 && node.textContent!.toString().trim().length !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction propDecoratorFactory<T, D>(\n  name: string,\n  fallback: (v: T, defaultValue: D) => D,\n  defaultValue: NzSafeAny,\n): (target: NzSafeAny, propName: string) => void {\n  function propDecorator(target: NzSafeAny, propName: string, originalDescriptor?: TypedPropertyDescriptor<NzSafeAny>): NzSafeAny {\n    const privatePropName = `$$__${propName}`;\n\n    if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n      warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n    }\n\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n    });\n\n    return {\n      get(): string {\n        return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n      },\n      set(value: T): void {\n        if (originalDescriptor && originalDescriptor.set) {\n          originalDescriptor.set.bind(this)(fallback(value, defaultValue));\n        }\n        this[privatePropName] = fallback(value, defaultValue);\n      },\n    };\n  }\n\n  return propDecorator;\n}\n\nexport function toBoolean(value: any, allowUndefined: boolean | null = false): boolean | undefined {\n  return allowUndefined && typeof value === 'undefined' ? undefined : value != null && `${value}` !== 'false';\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toBoolean\n *\n * ```ts\n * @Input() InputBoolean() visible: boolean = false;\n * @Input() @InputBoolean(null) visible: boolean = false;\n * ```\n */\nexport function InputBoolean(defaultValue: boolean | null = false): NzSafeAny {\n  return propDecoratorFactory('InputNumber', toBoolean, defaultValue);\n}\n\nexport function toNumber(value: any): number;\nexport function toNumber<D>(value: any, fallback: D): number | D;\nexport function toNumber(value: any, fallbackValue: number = 0): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toNumber\n *\n * ```ts\n * @Input() @InputNumber() visible: number = 1;\n * @Input() @InputNumber(null) visible: number = 2;\n * ```\n */\nexport function InputNumber(defaultValue: number | null = 0): NzSafeAny {\n  return propDecoratorFactory('InputNumber', toNumber, defaultValue);\n}\n\nexport type BooleanInput = boolean | string | undefined | null;\nexport type NumberInput = number | string | undefined | null;\n","/**\n * 复制字符串文档至剪贴板\n */\nexport function copy(value: string): Promise<string> {\n  return new Promise<string>((resolve): void => {\n    let copyTextArea: HTMLTextAreaElement | null = null;\n    try {\n      copyTextArea = document.createElement('textarea');\n      copyTextArea.style.height = '0px';\n      copyTextArea.style.opacity = '0';\n      copyTextArea.style.width = '0px';\n      document.body.appendChild(copyTextArea);\n      copyTextArea.value = value;\n      copyTextArea.select();\n      document.execCommand('copy');\n      resolve(value);\n    } finally {\n      if (copyTextArea && copyTextArea.parentNode) {\n        copyTextArea.parentNode.removeChild(copyTextArea);\n      }\n    }\n  });\n}\n","import { Renderer2 } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nfunction removeClass(el: HTMLElement, classMap: object, renderer: Renderer2): void {\n  // tslint:disable-next-line: forin\n  for (const i in classMap) {\n    renderer.removeClass(el, i);\n  }\n}\n\nfunction addClass(el: HTMLElement, classMap: NzSafeAny, renderer: Renderer2): void {\n  for (const i in classMap) {\n    if (classMap[i]) {\n      renderer.addClass(el, i);\n    }\n  }\n}\n\n/**\n * 更新宿主组件样式 `class`，例如：\n *\n * ```ts\n * updateHostClass(\n *  this.el.nativeElement,\n *  this.renderer,\n *  {\n *    [ 'classname' ]: true,\n *    [ 'classname' ]: this.type === '1',\n *    [ this.cls ]: true,\n *    [ `a-${this.cls}` ]: true\n *  })\n * ```\n *\n * @param [cleanAll] 是否先清理所有 `class` 值，默认：`false`\n */\nexport function updateHostClass(el: HTMLElement, renderer: Renderer2, classMap: object, cleanAll: boolean = false): void {\n  if (cleanAll === true) {\n    renderer.removeAttribute(el, 'class');\n  } else {\n    removeClass(el, classMap, renderer);\n  }\n  classMap = { ...classMap };\n  addClass(el, classMap, renderer);\n}\n","export interface AlainErrorCollectConfig {\n  /**\n   * 监听频率，默认：`500`\n   */\n  freq?: number;\n  /**\n   * 顶部偏移值，默认：`145`\n   */\n  offsetTop?: number;\n}\n","export interface AlainImageConfig {\n  /**\n   * 默认大小，默认值：`64`，单位：px\n   */\n  size?: number;\n\n  /**\n   * 错误图片，默认：`./assets/img/logo.svg`\n   */\n  error?: string;\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DisabledTimeFn, NzDateMode, PresetRanges, SupportTimeOptions } from 'ng-zorro-antd/date-picker';\n\nexport interface AlainDateRangePickerConfig {\n  /**\n   * 默认：`yyyy-MM-dd`\n   */\n  nzFormat?: string;\n  nzClassName?: string;\n  nzSize?: string;\n  nzStyle?: string;\n  /**\n   * 默认：`true`\n   */\n  nzAllowClear?: boolean;\n  /**\n   * 默认：`false`\n   */\n  nzAutoFocus?: boolean;\n  nzDisabledDate?: (d: Date) => boolean;\n  nzDisabledTime?: DisabledTimeFn;\n  /**\n   * 默认：`{ position: 'relative' }`\n   */\n  nzPopupStyle?: object;\n  nzDropdownClassName?: string;\n  nzRenderExtraFooter?: string;\n  nzShowTime?: SupportTimeOptions | boolean;\n  /**\n   * 默认：`true`\n   */\n  nzShowToday?: boolean;\n  nzMode?: NzDateMode | NzDateMode[];\n  nzRanges?: PresetRanges;\n  shortcuts?: AlainDateRangePickerShortcut;\n}\n\nexport interface AlainDateRangePickerShortcut {\n  /** Whether to enable, default: `false` */\n  enabled?: boolean;\n  /** Whether to close the panel after clicking, default: `true` */\n  closed?: boolean;\n  /**\n   * Shortcut list, default: `今天`, `昨天`, `近3天`, `近7天`, `本周`, `本月`, `全年`\n   */\n  list?: AlainDateRangePickerShortcutItem[];\n}\n\nexport interface AlainDateRangePickerShortcutItem {\n  [key: string]: NzSafeAny;\n\n  text: string;\n  fn: (value: [Date, Date]) => [Date, Date];\n}\n","import { SafeHtml } from '@angular/platform-browser';\n\nexport interface AlainLoadingConfig {\n  /**\n   * 类型，默认：`spin`\n   */\n  type?: 'text' | 'icon' | 'spin' | 'custom';\n  /**\n   * 显示文本，默认：`加载中...`\n   */\n  text?: string;\n  icon?: {\n    /** `nz-icon.nzType`，默认：`loading` */\n    type?: string;\n    /** `nz-icon.nzTheme`，默认：`outline` */\n    theme?: 'fill' | 'outline' | 'twotone';\n    /** `nz-icon.nzSpin`，默认：`true` */\n    spin?: boolean;\n  };\n  custom?: {\n    html?: string | SafeHtml;\n    style?: object;\n  };\n  /**\n   * 延迟，默认：`0`\n   */\n  delay?: number;\n}\n","export interface AlainLodopConfig {\n  /**\n   * 注册信息：主注册号\n   */\n  license?: string;\n  /**\n   * 注册信息：附加注册号A\n   */\n  licenseA?: string;\n  /**\n   * 注册信息：附加注册号B\n   */\n  licenseB?: string;\n  /**\n   * 注册信息：注册单位名称\n   */\n  companyName?: string;\n  /**\n   * Lodop 远程脚本URL地址，**注意**务必使用 `name` 属性指定变量值\n   *\n   * - http://localhost:18000/CLodopfuncs.js\n   * - https://localhost:8443/CLodopfuncs.js [默认]\n   */\n  url?: string;\n  /**\n   * Lodop 变量名，默认：`CLODOP`\n   */\n  name?: string;\n  /**\n   * 检查次数，默认 `100`，当检查超过时视为异常，这是因为 Lodop 需要连接 WebSocket\n   */\n  checkMaxCount?: number;\n}\n","export interface AlainPageHeaderConfig {\n  /**\n   * 首页文本，若指定空表示不显示，默认：`首页`\n   */\n  home?: string;\n  /**\n   * 首页链接，默认：`/`\n   */\n  homeLink?: string;\n  /**\n   * 首页链接国际化参数\n   */\n  homeI18n?: string;\n  /**\n   * 自动生成导航，以当前路由从主菜单中定位，默认：`true`\n   */\n  autoBreadcrumb?: boolean;\n  /**\n   * 自动向上递归查找，默认：`false`\n   *  - 菜单数据源包含 `/ware`，则 `/ware/1` 也视为 `/ware` 项\n   */\n  recursiveBreadcrumb?: boolean;\n  /**\n   * 自动生成标题，以当前路由从主菜单中定位，默认：`true`\n   */\n  autoTitle?: boolean;\n  /**\n   * 是否自动将标准信息同步至 `TitleService`、`ReuseService` 下，默认：`true`\n   */\n  syncTitle?: boolean;\n  /**\n   * 是否固定模式，默认：`false`\n   */\n  fixed?: boolean;\n  /**\n   * 固定偏移值，默认：`64`\n   */\n  fixedOffsetTop?: number;\n}\n","export interface AlainQRConfig {\n  /**\n   * [qrious](https://neocotic.com/qrious) 外网地址，默认：`https://cdn.bootcdn.net/ajax/libs/qrious/4.0.2/qrious.min.js`\n   *\n   * 若在 `angular.json` 配置 `\"scripts\": [ \"node_modules/qrious/dist/qrious.min.js\" ]` 则优先使用\n   */\n  lib?: string;\n  /** 背景，默认：`white` */\n  background?: string;\n  /** 背景透明级别，范围：`0-1` 之间，默认：`1` */\n  backgroundAlpha?: number;\n  /** 前景，默认：`black` */\n  foreground?: string;\n  /** 前景透明级别，范围：`0-1` 之间，默认：`1` */\n  foregroundAlpha?: number;\n  /** 误差校正级别，默认：`L` */\n  level?: 'L' | 'M' | 'Q' | 'H';\n  /** 二维码输出图片MIME类型，默认：`image/png` */\n  mime?: string;\n  /** 内边距（单位：px），默认：`10` */\n  padding?: number;\n  /** 大小（单位：px），默认：`220` */\n  size?: number;\n  delay?: number;\n}\n","export interface AlainSEConfig {\n  /**\n   * 大小，默认：`default`\n   * - `compact` 紧凑型，强制忽略 `error`、`extra` 展示\n   */\n  size?: 'default' | 'compact';\n  /**\n   * 布局类型，等同 `nzLayout`，默认：`horizontal`\n   * - `inline` 时强制大小为 `compact`\n   */\n  nzLayout?: 'horizontal' | 'vertical' | 'inline';\n  /**\n   * 间距，当 `nzLayout:horizontal` 时有效，默认：`32`\n   */\n  gutter?: number;\n  /**\n   * 列数，默认：`2`\n   */\n  col?: number;\n  /**\n   * 标签文本宽度，单位：`px`，默认：`150`\n   */\n  labelWidth?: number;\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否忽略 `dirty` 校验，默认：`false`\n   */\n  ingoreDirty?: boolean;\n}\n","export class AlainSVConfig {\n  /** 大小，默认：`large` */\n  size?: 'small' | 'large';\n  /** 间距，默认：`32` */\n  gutter?: number;\n  /** 布局，默认：`horizontal` */\n  layout?: 'horizontal' | 'vertical';\n  /** 列数，默认：`3` */\n  col?: number;\n  /** 是否显示默认值，当内容为空值时显示 `-`，默认：`true` */\n  default?: boolean;\n  /** `label` 固定宽度，若 `null` 或 `undefined` 表示非固定，默认：`null` */\n  labelWidth?: number;\n}\n","export interface AlainSGConfig {\n  /**\n   * 间距，默认：`32`\n   */\n  gutter?: number;\n  /**\n   * 列数，默认：`2`\n   */\n  col?: number;\n}\n","import { TemplateRef, TrackByFunction } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDrawerOptions } from 'ng-zorro-antd/drawer';\nimport { ModalOptions } from 'ng-zorro-antd/modal';\nimport { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';\nimport { NzTableData } from 'ng-zorro-antd/table';\n\nexport interface AlainSTConfig {\n  /**\n   * 起始页码，默认为：`1`\n   */\n  pi?: number;\n  /**\n   * 每页数量，默认：`10`\n   */\n  ps?: number;\n  /**\n   * 是否显示边框，默认：`false`\n   */\n  bordered?: boolean;\n  /**\n   * table大小，默认：`default`\n   */\n  size?: 'small' | 'middle' | 'default';\n  /**\n   * 是否开启响应式，默认：`true`\n   */\n  responsive?: boolean;\n  /**\n   * 是否在小屏幕下才显示顶部与底部，默认：`false`\n   */\n  responsiveHideHeaderFooter?: boolean;\n  /** 请求体配置 */\n  req?: {\n    /**\n     * 分页类型，默认：`page`\n     * - `page` 使用 `pi`，`ps` 组合\n     * - `skip` 使用 `skip`，`limit` 组合\n     */\n    type?: 'page' | 'skip';\n    /** 请求方法，默认：`GET` */\n    method?: string;\n    /** 请求体 `Header` */\n    headers?: NzSafeAny;\n    /**\n     * 重命名参数 `pi`、`ps`，默认：`{ pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' }`\n     * - `{ pi: 'Page' }` => `pi` 会被替换成 Page\n     */\n    reName?: {\n      pi?: string;\n      ps?: string;\n      skip?: string;\n      limit?: string;\n    };\n    /**\n     * 是否将请求所有参数数据都放入 `body` 当中（`url` 地址本身参数除外），仅当 `method: 'POST'` 时有效，默认：`false`\n     */\n    allInBody?: boolean;\n    /**\n     * 是否延迟加载数据，即渲染结束后不会主动发起请求，默认：`false`\n     */\n    lazyLoad?: boolean;\n    /**\n     * 请求前数据处理\n     */\n    process?: (requestOptions: NzSafeAny) => NzSafeAny;\n  };\n  /** 返回体配置 */\n  res?: {\n    /**\n     * 重命名返回参数 `total`、`list`，默认：`{ list: ['list'], total: ['total'] }`\n     * - `{ total: 'Total' }` => Total 会被当作 `total`\n     */\n    reName?: {\n      total?: string | string[];\n      list?: string | string[];\n    };\n    /**\n     * 数据预处理\n     */\n    process?: (data: NzSafeAny[], rawData?: NzSafeAny) => NzSafeAny[];\n  };\n  /** 返回体配置 */\n  page?: {\n    /**\n     * 前端分页，当 `data` 为`any[]` 或 `Observable<any[]>` 有效，默认：`true`\n     * - `true` 由 `st` 根据 `data` 长度受控分页，包括：排序、过滤等\n     * - `false` 由用户通过 `total` 和 `data` 参数受控分页，并维护 `(change)` 当分页变更时重新加载数据\n     */\n    front?: boolean;\n    /**\n     * 后端分页是否采用`0`基索引，只在`data`类型为`string`时有效，默认：`false`\n     */\n    zeroIndexed?: boolean;\n    /**\n     * 指定分页显示的位置，默认：`bottom`\n     */\n    position?: 'top' | 'bottom' | 'both';\n    /**\n     * 指定分页分页方向，默认：`right`\n     */\n    placement?: 'left' | 'center' | 'right';\n    /**\n     * 是否显示分页器，默认：`true`\n     */\n    show?: boolean;\n    /**\n     * 是否显示分页器中改变页数，默认：`false`\n     */\n    showSize?: boolean;\n    /**\n     * 分页器中每页显示条目数下拉框值，默认：`[10, 20, 30, 40, 50]`\n     */\n    pageSizes?: number[];\n    /**\n     * 是否显示分页器中快速跳转，默认：`false`\n     */\n    showQuickJumper?: boolean;\n    /**\n     * 是否显示总数据量，默认：`true`\n     * - `boolean` 类型显示与否，默认模板：`共 {{total}} 条`\n     * - `string` 自定义模板，模板变量：\n     *  - `{{total}}` 表示数据总量\n     *  - `{{range[0]}}` 表示当前页开始数量值\n     *  - `{{range[1]}}` 表示当前页结束数量值\n     */\n    total?: string | boolean;\n    /**\n     * 用于自定义页码的结构，用法参照 Pagination 组件\n     */\n    itemRender?: TemplateRef<PaginationItemRenderContext> | null;\n    /**\n     * 当添加该属性时，显示为简单分页，默认：`false`\n     */\n    simple?: boolean;\n    /**\n     * 切换分页时返回顶部，默认：`true`\n     */\n    toTop?: boolean;\n    /**\n     * 返回顶部偏移值，默认：`100`\n     */\n    toTopOffset?: number;\n  };\n  /**\n   * 重命名排序值，`columns` 的重命名高于属性\n   */\n  sortReName?: { ascend?: string; descend?: string };\n  /**\n   * 单排序规则\n   * - 若不指定，则返回：`columnName=ascend|descend`\n   * - 若指定，则返回：`sort=columnName.(ascend|descend)`\n   */\n  singleSort?: {\n    /** 请求参数名，默认：`sort` */\n    key?: string;\n    /** 列名与状态间分隔符，默认：`.` */\n    nameSeparator?: string;\n  };\n  /**\n   * 是否多排序，当 `sort` 多个相同值时自动合并，建议后端支持时使用\n   */\n  multiSort?: {\n    /** 请求参数名，默认：`sort` */\n    key?: string;\n    /** 不同属性间分隔符，默认：`-` */\n    separator?: string;\n    /** 列名与状态间分隔符，默认：`.` */\n    nameSeparator?: string;\n    /**\n     * 是否以数组的形式传递参数\n     * - `true` 表示使用 `url?sort=name.asc&sort=age.desc` 形式\n     * - `false` 表示使用 `url?sort=name.asc-age.desc` 形式\n     */\n    arrayParam?: boolean;\n    /**\n     * 是否全局多排序模式，默认：`true`\n     * - `true` 表示所有 `st` 默认为多排序\n     * - `false` 表示需要为每个 `st` 添加 `multiSort` 才会视为多排序模式\n     */\n    global?: boolean;\n    /**\n     * 是否保持空值的键名，默认：`true`\n     * - `true` 表示不管是否有排序都会发送 `key` 键名\n     * - `false` 表示无排序动作时不会发送 `key` 键名\n     */\n    keepEmptyKey?: boolean;\n  };\n  /**\n   * 按钮模态框配置\n   */\n  modal?: {\n    /**\n     * 指定模态框目标组件的接收参数名，默认：`record`\n     */\n    paramsName?: string;\n    /** 大小；例如：lg、600，默认：`lg` */\n    size?: 'sm' | 'md' | 'lg' | 'xl' | '' | number;\n    /** 对话框 [ModalOptions](https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/modal/modal-types.ts) 参数 */\n    modalOptions?: ModalOptions;\n    /** 是否精准（默认：`true`），若返回值非空值（`null`或`undefined`）视为成功，否则视为错误 */\n    exact?: boolean;\n  };\n  /**\n   * 按钮抽屉配置\n   */\n  drawer?: {\n    /**\n     * 抽屉目标组件的接收参数名，默认：`record`\n     */\n    paramsName?: string;\n    /**\n     * 大小；例如：lg、600，默认：`md`\n     *\n     * | 类型 | 默认大小 |\n     * | --- | ------ |\n     * | `sm` | `300` |\n     * | `md` | `600` |\n     * | `lg` | `900` |\n     * | `xl` | `1200` |\n     *\n     * > 以上值，可通过覆盖相应的LESS参数自行调整\n     */\n    size?: 'sm' | 'md' | 'lg' | 'xl' | number;\n    /**\n     * 是否包含底部工具条，默认：`true`\n     */\n    footer?: boolean;\n    /**\n     * 底部工具条高度，默认：`55`\n     */\n    footerHeight?: number;\n    /** 抽屉 [NzDrawerOptions](https://ng.ant.design/components/drawer/zh#nzdraweroptions) 参数 */\n    drawerOptions?: NzDrawerOptions;\n  };\n  /**\n   * 气泡参数\n   */\n  pop?: {\n    /**\n     * Title of the popover, default: `确认删除吗？`\n     */\n    title?: string;\n\n    /**\n     * Popover trigger mode, default: `click`\n     */\n    trigger?: 'click' | 'focus' | 'hover';\n\n    /**\n     * The position of the popover relative to the target, default: `top`\n     */\n    placement?:\n      | 'top'\n      | 'left'\n      | 'right'\n      | 'bottom'\n      | 'topLeft'\n      | 'topRight'\n      | 'bottomLeft'\n      | 'bottomRight'\n      | 'leftTop'\n      | 'leftBottom'\n      | 'rightTop'\n      | 'rightBottom';\n\n    /**\n     * Class name of the popover card\n     */\n    overlayClassName?: string;\n\n    /**\n     * Style of the popover card\n     */\n    overlayStyle?: {};\n\n    /**\n     * Text of the Cancel button\n     */\n    cancelText?: string;\n\n    /**\n     * Text of the Confirm button\n     */\n    okText?: string;\n\n    /**\n     * Button `type` of the Confirm button\n     */\n    okType?: 'primary' | 'ghost' | 'dashed' | 'danger' | 'default';\n\n    /**\n     * Customize icon of confirmation\n     */\n    icon?: string;\n  };\n  /**\n   * 行单击多少时长之类为双击（单位：毫秒），默认：`200`\n   */\n  rowClickTime?: number;\n  /**\n   * 过滤按钮确认文本\n   */\n  filterConfirmText?: string;\n  /**\n   * 过滤按钮重置文本\n   */\n  filterClearText?: string;\n  /**\n   * 按钮图标\n   */\n  btnIcon?: {\n    /** 图标主题风格，默认：`outline` */\n    theme?: 'outline' | 'twotone' | 'fill';\n    /** 是否有旋转动画，默认：`false` */\n    spin?: boolean;\n    /** 仅适用双色图标，设置双色图标的主要颜色，仅对当前 icon 生效 */\n    twoToneColor?: string;\n    /** 指定来自 IconFont 的图标类型 */\n    iconfont?: string;\n  };\n  /**\n   * 行号索引，默认：`1`\n   * - 计算规则为：`index + noIndex`\n   */\n  noIndex?: number;\n  /**\n   * 表格行的类名\n   */\n  rowClassName?: (record: NzSafeAny, index: number) => string;\n  /**\n   * 通过点击行来展开子行，Default: `false`\n   */\n  expandRowByClick?: boolean;\n  /**\n   * 手风琴模式，Default: `false`\n   */\n  expandAccordion?: boolean;\n  /**\n   * 指定 `width` 模式\n   */\n  widthMode?: {\n    /**\n     * 宽度类型，默认：`default`\n     * - `default` 默认行为\n     * - `strict` 严格模式，即强制按 `width` 指定的宽度呈现，并根据 `strictBehavior` 类型处理\n     */\n    type?: 'strict' | 'default';\n    /**\n     * 严格模式的处理行为，默认：`truncate`\n     * - `wrap` 强制换行\n     * - `truncate` 截短\n     */\n    strictBehavior?: 'wrap' | 'truncate';\n  };\n  /**\n   * Default: `54`\n   */\n  virtualItemSize?: number;\n  /**\n   * Default: `200`\n   */\n  virtualMaxBufferPx?: number;\n  /**\n   * Default: `100`\n   */\n  virtualMinBufferPx?: number;\n  /**\n   * The TrackByFunction to use for tracking changes\n   */\n  virtualForTrackBy?: TrackByFunction<NzTableData>;\n  /**\n   * Conditional expression rendering behavior, can be set to `hide` (default) or `disabled`, Default: `hide`\n   */\n  iifBehavior?: 'hide' | 'disabled';\n  /**\n   * The spinning indicator\n   */\n  loadingIndicator?: TemplateRef<void>;\n  /**\n   * Specifies a delay in milliseconds for loading state (prevent flush)\n   */\n  loadingDelay?: number;\n  /**\n   * Custom no result content\n   */\n  noResult?: string | TemplateRef<void>;\n}\n","export interface AlainXlsxConfig {\n  /**\n   * Xlsx library path, default: `//cdn.bootcss.com/xlsx/0.15.6/xlsx.full.min.js`\n   */\n  url?: string;\n  /**\n   * Defines which Xlsx optional modules should get loaded, e.g:\n   *\n   * `[ '//cdn.bootcss.com/xlsx/0.15.6/cpexcel.js' ]`\n   */\n  modules?: string[];\n}\n","export interface AlainZipConfig {\n  /**\n   * Zip library path, Default: `//cdn.bootcss.com/jszip/3.3.0/jszip.min.js`\n   */\n  url?: string;\n  /**\n   * Defines which zip optional utils should get loaded\n   */\n  utils?: string[];\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface AlainMediaConfig {\n  /**\n   * Plyr library path, default: `[\"https://cdn.bootcdn.net/ajax/libs/plyr/3.5.10/plyr.min.js\", \"https://cdn.bootcdn.net/ajax/libs/plyr/3.5.10/plyr.css\"]`\n   */\n  urls?: string[];\n  /**\n   * Please refer to [plyr options](https://github.com/sampotts/plyr#options)\n   */\n  options?: NzSafeAny;\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface AlainACLConfig {\n  /**\n   * Router URL when guard fail, default: `/403`\n   */\n  guard_url?: string;\n\n  /**\n   * `can` before execution callback\n   */\n  preCan?: ((roleOrAbility: number | number[] | string | string[] | AlainACLType) => AlainACLType | null) | null;\n}\n\nexport interface AlainACLType {\n  /**\n   * 角色\n   */\n  role?: string[];\n  /**\n   * 权限点\n   */\n  ability?: number[] | string[];\n\n  /**\n   * Validated against, default: `oneOf`\n   * - `allOf` the value validates against all the roles or abilities\n   * - `oneOf` the value validates against exactly one of the roles or abilities\n   */\n  mode?: 'allOf' | 'oneOf';\n\n  /**\n   * 是否取反，即结果为 `true` 时表示未授权\n   */\n  except?: boolean;\n\n  [key: string]: NzSafeAny;\n}\n","export interface AlainAuthConfig {\n  /**\n   * 存储KEY值，默认：`_token`\n   */\n  store_key?: string;\n  /**\n   * 无效时跳转至登录页，默认：`true`，包括：\n   * - 无效token值\n   * - token已过期（限JWT）\n   */\n  token_invalid_redirect?: boolean;\n  /**\n   * token过期时间偏移值，默认：`10` 秒（单位：秒）\n   */\n  token_exp_offset?: number;\n  /**\n   * 发送token参数名，默认：·\n   */\n  token_send_key?: string;\n  /**\n   * 发送token模板（默认为：`'${token}'`），使用 `${token}` 表示token点位符（**注意：**请务必使用 \\`\\` 包裹），例如：\n   *\n   * - `Bearer ${token}`\n   */\n  token_send_template?: string;\n  /**\n   * 发送token参数位置，默认：`header`\n   */\n  token_send_place?: 'header' | 'body' | 'url';\n  /**\n   * 登录页路由地址，默认：`/login`\n   */\n  login_url?: string;\n  /**\n   * 忽略TOKEN的URL地址列表，默认值为：`[/\\/login/, /assets\\//, /passport\\//]`\n   */\n  ignores?: RegExp[];\n  /**\n   * 允许匿名登录KEY，若请求参数中带有该KEY表示忽略TOKEN，默认：`_allow_anonymous`\n   */\n  allow_anonymous_key?: string;\n  /**\n   * 是否校验失效时命中后继续调用后续拦截器的 `intercept` 方法，默认：`true`\n   */\n  executeOtherInterceptors?: boolean;\n  /**\n   * 刷新间隔时长（单位：ms），默认：`3000`\n   */\n  refreshTime?: number;\n  /**\n   * 过期计算偏移值（单位：ms），默认：`6000`\n   * - **建议**根据 `refreshTime` 倍数来设置\n   */\n  refreshOffset?: number;\n}\n","export interface AlainCacheConfig {\n  /**\n   * Cache mode, default: `promise`\n   * - `promise` Convention mode, allowing `key` to get data as http\n   * - `none` Normal mode\n   */\n  mode?: 'promise' | 'none';\n  /**\n   * Rename the return parameters, default: ``, for example:\n   * - `null` The response body is content\n   * - `list` The response body should be `{ list: [] }`\n   * - `result.list` The response body should be `{ result: { list: [] } }`\n   */\n  reName?: string | string[];\n  /**\n   * Set the default storage type\n   * - `m` Storage via memory\n   * - `s` Storage via `localStorage`\n   */\n  type?: 'm' | 's';\n  /**\n   * Set the default expire time (Unit: second)\n   */\n  expire?: number;\n  /**\n   * Key prefix of persistent data, default: ``\n   */\n  prefix?: string;\n  /**\n   * Key name of persistent data metadata storage, default: `__cache_meta`\n   */\n  meta_key?: string;\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface AlainChartConfig {\n  theme?: string | { [key: string]: NzSafeAny };\n}\n","export interface AlainUtilArrayConfig {\n  /** 深度项名，默认：`'deep'` */\n  deepMapName?: string;\n  /** 扁平后数组的父数据项名，默认：`'parent'` */\n  parentMapName?: string;\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 源数据子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 标题项名，默认：`'title'` */\n  titleMapName?: string;\n  /** 节点 Checkbox 是否选中项名，默认：`'checked'` */\n  checkedMapname?: string;\n  /** 节点本身是否选中项名，默认：`'selected'` */\n  selectedMapname?: string;\n  /** 节点是否展开(叶子节点无效)项名，默认：`'expanded'` */\n  expandedMapname?: string;\n  /** 设置是否禁用节点(不可进行任何操作)项名，默认：`'disabled'` */\n  disabledMapname?: string;\n}\n","export interface AlainThemeHttpClientConfig {\n  /**\n   * 空值处理，默认：`include`\n   * - include：包含\n   * - ignore：忽略\n   */\n  nullValueHandling?: 'include' | 'ignore';\n  /**\n   * 时间值处理，默认：`timestamp`\n   * - timestamp：时间戳\n   * - ignore：忽略处理，保持原始状态\n   */\n  dateValueHandling?: 'timestamp' | 'ignore';\n}\n","export interface AlainThemeResponsiveConfig {\n  rules: {\n    [key: number]: {\n      xs?: number;\n      sm?: number;\n      md?: number;\n      lg?: number;\n      xl?: number;\n      xxl?: number;\n    };\n  };\n}\n","export interface AlainMockConfig {\n  /**\n   * 规则定义数据\n   */\n  data: any;\n  /**\n   * 请求延迟，单位：毫秒，默认：`300`\n   */\n  delay?: number;\n  /**\n   * 是否强制所有请求都Mock，默认：`false`，`true` 表示当请求的URL不存在时直接返回 404 错误，`false` 表示未命中时发送真实HTTP请求\n   */\n  force?: boolean;\n  /**\n   * 是否打印 Mock 请求信息，弥补浏览器无Network信息，默认：`true`\n   */\n  log?: boolean;\n  /**\n   * 是否拦截命中后继续调用后续拦截器的 `intercept` 方法，默认：`true`\n   */\n  executeOtherInterceptors?: boolean;\n}\n","export interface AlainSFConfigFormatMap {\n  'date-time': { widget?: string; showTime?: boolean; format?: string };\n  date: { widget?: string; format?: string };\n  'full-date': { widget?: string; format?: string };\n  time: { widget?: string; format?: string };\n  'full-time': { widget?: string; format?: string };\n  week: { widget?: string; mode?: string; format?: string };\n  month: { widget?: string; mode?: string; format?: string };\n  uri: { widget?: string };\n  email: { widget?: string; type?: string };\n  color: { widget?: string; type?: string };\n  '': { widget?: string };\n}\n\nexport interface AlainSFConfig {\n  formatMap?: AlainSFConfigFormatMap;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`，默认：`[ 'type', 'enum' ]`\n   *\n   * - `type` 限定 Schema 中 `type` 类型\n   * - `enum` 限定应当是预设定的枚举值之一\n   */\n  ingoreKeywords?: string[];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) 参数\n   */\n  ajv?: any;\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 指定表单 `autocomplete` 值，默认：`on`\n   */\n  autocomplete?: 'on' | 'off' | null;\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 自定义通用错误信息，默认：`{}`\n   */\n  errors?: { [key: string]: string };\n  /**\n   * 默认全局布局，类型为：`SFUISchemaItem`，使用时加上可智能提示，例如：\n   *\n   * ```ts\n   * ui: {} as SFUISchemaItem\n   * ```\n   */\n  ui?: any;\n  /**\n   * 元素组件大小，用于 `nzSize` 值\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * 按钮风格，类型为：`SFButton`，使用时加上可智能提示，例如：\n   *\n   * ```ts\n   * button: {} as SFButton\n   * ```\n   */\n  button?: any;\n  /**\n   * date小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`yyyy-MM-dd HH:mm:ss`\n   */\n  uiDateStringFormat?: string;\n  /**\n   * date小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`T` 13位 Unix Timestamp\n   */\n  uiDateNumberFormat?: string;\n  /**\n   * time小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string;\n  /**\n   * time小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`T` 13位 Unix Timestamp，日期统一使用 `1970-01-01`\n   */\n  uiTimeNumberFormat?: string;\n  /**\n   * 指定 `format: 'email'` 的默认Email后缀，默认：`['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com']`\n   */\n  uiEmailSuffixes?: string[];\n}\n","import { InjectionToken } from '@angular/core';\nimport {\n  AlainDateRangePickerConfig,\n  AlainErrorCollectConfig,\n  AlainImageConfig,\n  AlainLoadingConfig,\n  AlainLodopConfig,\n  AlainMediaConfig,\n  AlainPageHeaderConfig,\n  AlainQRConfig,\n  AlainSEConfig,\n  AlainSGConfig,\n  AlainSTConfig,\n  AlainSVConfig,\n  AlainXlsxConfig,\n  AlainZipConfig,\n} from './abc/index';\nimport { AlainACLConfig } from './acl/acl.type';\nimport { AlainAuthConfig } from './auth/auth.type';\nimport { AlainCacheConfig } from './cache/cache.type';\nimport { AlainChartConfig } from './chart/chart.type';\nimport { AlainMockConfig } from './mock/mock.type';\nimport { AlainSFConfig } from './sf/sf.type';\nimport { AlainThemeHttpClientConfig, AlainThemeResponsiveConfig } from './theme/index';\nimport { AlainUtilArrayConfig } from './util/array.type';\n\nexport interface AlainConfig {\n  dataRange?: AlainDateRangePickerConfig;\n  errorCollect?: AlainErrorCollectConfig;\n  image?: AlainImageConfig;\n  loading?: AlainLoadingConfig;\n  lodop?: AlainLodopConfig;\n  pageHeader?: AlainPageHeaderConfig;\n  qr?: AlainQRConfig;\n  se?: AlainSEConfig;\n  sg?: AlainSGConfig;\n  sv?: AlainSVConfig;\n  st?: AlainSTConfig;\n  sf?: AlainSFConfig;\n  xlsx?: AlainXlsxConfig;\n  zip?: AlainZipConfig;\n  media?: AlainMediaConfig;\n  acl?: AlainACLConfig;\n  auth?: AlainAuthConfig;\n  cache?: AlainCacheConfig;\n  chart?: AlainChartConfig;\n  mock?: AlainMockConfig;\n  utilArray?: AlainUtilArrayConfig;\n  themeHttp?: AlainThemeHttpClientConfig;\n  themeResponsive?: AlainThemeResponsiveConfig;\n}\n\nexport type AlainConfigKey = keyof AlainConfig;\n\nexport const ALAIN_CONFIG = new InjectionToken<AlainConfig>('alain-config', {\n  providedIn: 'root',\n  factory: ALAIN_CONFIG_FACTORY,\n});\n\nexport function ALAIN_CONFIG_FACTORY(): AlainConfig {\n  return {};\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { deepMergeKey } from '../other/deep';\nimport { AlainConfig, AlainConfigKey, ALAIN_CONFIG } from './config.types';\n\n@Injectable({ providedIn: 'root' })\nexport class AlainConfigService {\n  private config: AlainConfig;\n\n  constructor(@Optional() @Inject(ALAIN_CONFIG) defaultConfig?: AlainConfig) {\n    this.config = { ...defaultConfig };\n  }\n\n  get<T extends AlainConfigKey>(componentName: T, key?: string): AlainConfig[T] {\n    const res = ((this.config[componentName] as { [key: string]: NzSafeAny }) || {}) as NzSafeAny;\n    return key ? { [key]: res[key] } : res;\n  }\n\n  merge<T extends AlainConfigKey>(componentName: T, ...defaultValues: AlainConfig[T][]): AlainConfig[T] {\n    return deepMergeKey({}, true, ...defaultValues, this.get(componentName));\n  }\n\n  attach<T extends AlainConfigKey>(componentThis: NzSafeAny, componentName: T, defaultValues: AlainConfig[T]): void {\n    Object.assign(componentThis, this.merge(componentName, defaultValues));\n  }\n\n  attachKey<T extends AlainConfigKey>(componentThis: NzSafeAny, componentName: T, key: string): void {\n    Object.assign(componentThis, this.get(componentName, key));\n  }\n\n  set<T extends AlainConfigKey>(componentName: T, value: AlainConfig[T]): void {\n    this.config[componentName] = { ...this.config[componentName], ...value };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NzTreeNode } from 'ng-zorro-antd/core/tree';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { AlainConfigService, AlainUtilArrayConfig } from '../config';\n\nexport interface ArrayServiceTreeToArrOptions {\n  /** 深度项名，默认：`'deep'` */\n  deepMapName?: string;\n  /** 扁平后数组的父数据项名，默认：`'parent'` */\n  parentMapName?: string;\n  /** 源数据子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 是否移除 `children` 节点，默认：`true` */\n  clearChildren?: boolean;\n  /** 转换成数组结构时回调 */\n  cb?: (item: NzSafeAny, parent: NzSafeAny, deep: number) => void;\n}\n\nexport interface ArrayServiceArrToTreeOptions {\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 转换成树数据时回调 */\n  cb?: (item: NzSafeAny) => void;\n}\n\nexport interface ArrayServiceArrToTreeNodeOptions {\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 标题项名，默认：`'title'` */\n  titleMapName?: string;\n  /** 设置为叶子节点项名，若数据源不存在时自动根据 `children` 值决定是否为叶子节点，默认：`'isLeaf'` */\n  isLeafMapName?: string;\n  /** 节点 Checkbox 是否选中项名，默认：`'checked'` */\n  checkedMapname?: string;\n  /** 节点本身是否选中项名，默认：`'selected'` */\n  selectedMapname?: string;\n  /** 节点是否展开(叶子节点无效)项名，默认：`'expanded'` */\n  expandedMapname?: string;\n  /** 设置是否禁用节点(不可进行任何操作)项名，默认：`'disabled'` */\n  disabledMapname?: string;\n  /** 转换成树数据后，执行的递归回调 */\n  cb?: (item: NzSafeAny, parent: NzSafeAny, deep: number) => void;\n}\n\nexport interface ArrayServiceGetKeysByTreeNodeOptions {\n  /** 是否包含半选状态的值，默认：`true` */\n  includeHalfChecked?: boolean;\n  /** 是否重新指定 `key` 键名，若不指定表示使用 `NzTreeNode.key` 值 */\n  keyMapName?: string;\n  /** 回调，返回一个值 `key` 值，优先级高于其他 */\n  cb?: (item: NzTreeNode, parent: NzTreeNode, deep: number) => NzSafeAny;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ArrayService {\n  private c: AlainUtilArrayConfig;\n  constructor(cog: AlainConfigService) {\n    this.c = cog.merge('utilArray', {\n      deepMapName: 'deep',\n      parentMapName: 'parent',\n      idMapName: 'id',\n      parentIdMapName: 'parent_id',\n      childrenMapName: 'children',\n      titleMapName: 'title',\n      checkedMapname: 'checked',\n      selectedMapname: 'selected',\n      expandedMapname: 'expanded',\n      disabledMapname: 'disabled',\n    })!;\n  }\n  /**\n   * 将树结构转换成数组结构\n   */\n  treeToArr(tree: NzSafeAny[], options?: ArrayServiceTreeToArrOptions): NzSafeAny[] {\n    const opt = {\n      deepMapName: this.c.deepMapName,\n      parentMapName: this.c.parentMapName,\n      childrenMapName: this.c.childrenMapName,\n      clearChildren: true,\n      cb: null,\n      ...options,\n    } as ArrayServiceTreeToArrOptions;\n    const result: NzSafeAny[] = [];\n    const inFn = (list: NzSafeAny[], parent: NzSafeAny, deep: number = 0) => {\n      for (const i of list) {\n        i[opt.deepMapName!] = deep;\n        i[opt.parentMapName!] = parent;\n        if (opt.cb) {\n          opt.cb(i, parent, deep);\n        }\n        result.push(i);\n        const children = i[opt.childrenMapName!];\n        if (children != null && Array.isArray(children) && children.length > 0) {\n          inFn(children, i, deep + 1);\n        }\n        if (opt.clearChildren) {\n          delete i[opt.childrenMapName!];\n        }\n      }\n    };\n    inFn(tree, 1);\n    return result;\n  }\n\n  /**\n   * 数组转换成树数据\n   */\n  arrToTree(arr: NzSafeAny[], options?: ArrayServiceArrToTreeOptions): NzSafeAny[] {\n    const opt = {\n      idMapName: this.c.idMapName,\n      parentIdMapName: this.c.parentIdMapName,\n      childrenMapName: this.c.childrenMapName,\n      cb: null,\n      ...options,\n    } as ArrayServiceArrToTreeOptions;\n    const tree: NzSafeAny[] = [];\n    const childrenOf: NzSafeAny = {};\n    for (const item of arr) {\n      const id = item[opt.idMapName!];\n      const pid = item[opt.parentIdMapName!];\n      childrenOf[id] = childrenOf[id] || [];\n      item[opt.childrenMapName!] = childrenOf[id];\n      if (opt.cb) {\n        opt.cb(item);\n      }\n      if (pid) {\n        childrenOf[pid] = childrenOf[pid] || [];\n        childrenOf[pid].push(item);\n      } else {\n        tree.push(item);\n      }\n    }\n    return tree;\n  }\n\n  /**\n   * 数组转换成 `nz-tree` 数据源，通过 `options` 转化项名，也可以使用 `options.cb` 更高级决定数据项\n   */\n  arrToTreeNode(arr: NzSafeAny[], options?: ArrayServiceArrToTreeNodeOptions): NzTreeNode[] {\n    const opt = {\n      idMapName: this.c.idMapName,\n      parentIdMapName: this.c.parentIdMapName,\n      titleMapName: this.c.titleMapName,\n      isLeafMapName: 'isLeaf',\n      checkedMapname: this.c.checkedMapname,\n      selectedMapname: this.c.selectedMapname,\n      expandedMapname: this.c.expandedMapname,\n      disabledMapname: this.c.disabledMapname,\n      cb: null,\n      ...options,\n    } as ArrayServiceArrToTreeNodeOptions;\n    const tree = this.arrToTree(arr, {\n      idMapName: opt.idMapName,\n      parentIdMapName: opt.parentIdMapName,\n      childrenMapName: 'children',\n    });\n    this.visitTree(tree, (item: NzSafeAny, parent: NzSafeAny, deep: number) => {\n      item.key = item[opt.idMapName!];\n      item.title = item[opt.titleMapName!];\n      item.checked = item[opt.checkedMapname!];\n      item.selected = item[opt.selectedMapname!];\n      item.expanded = item[opt.expandedMapname!];\n      item.disabled = item[opt.disabledMapname!];\n      if (item[opt.isLeafMapName!] == null) {\n        item.isLeaf = item.children.length === 0;\n      } else {\n        item.isLeaf = item[opt.isLeafMapName!];\n      }\n      if (opt.cb) {\n        opt.cb(item, parent, deep);\n      }\n    });\n    return tree.map(node => new NzTreeNode(node));\n  }\n\n  /**\n   * 递归访问整个树\n   */\n  visitTree(\n    tree: NzSafeAny[],\n    cb: (item: NzSafeAny, parent: NzSafeAny, deep: number) => void,\n    options?: {\n      /** 子项名，默认：`'children'` */\n      childrenMapName?: string;\n    },\n  ): void {\n    options = {\n      childrenMapName: this.c.childrenMapName,\n      ...options,\n    };\n    const inFn = (data: NzSafeAny[], parent: NzSafeAny, deep: number) => {\n      for (const item of data) {\n        cb(item, parent, deep);\n        const childrenVal = item[options!.childrenMapName!];\n        if (childrenVal && childrenVal.length > 0) {\n          inFn(childrenVal, item, deep + 1);\n        }\n      }\n    };\n    inFn(tree, null, 1);\n  }\n\n  /**\n   * 获取所有已经选中的 `key` 值\n   */\n  getKeysByTreeNode(tree: NzTreeNode[], options?: ArrayServiceGetKeysByTreeNodeOptions): NzSafeAny[] {\n    const opt = {\n      includeHalfChecked: true,\n      ...options,\n    } as ArrayServiceGetKeysByTreeNodeOptions;\n    const keys: NzSafeAny[] = [];\n    this.visitTree(tree, (item: NzTreeNode, parent: NzTreeNode, deep: number) => {\n      if (item.isChecked || (opt.includeHalfChecked && item.isHalfChecked)) {\n        keys.push(opt.cb ? opt.cb(item, parent, deep) : opt.keyMapName ? item.origin[opt.keyMapName] : item.key);\n      }\n    });\n    return keys;\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class DelonUtilModule {}\n"],"names":[],"mappings":"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"}