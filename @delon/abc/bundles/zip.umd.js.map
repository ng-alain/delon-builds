{"version":3,"file":"zip.umd.js.map","sources":["ng://@delon/abc/zip/zip.config.ts","ng://@delon/abc/zip/zip.service.ts","ng://@delon/abc/zip/zip.module.ts"],"sourcesContent":["export class ZipConfig {\n  /**\n   * Zip library path\n   */\n  url? = '//cdn.bootcss.com/jszip/3.1.5/jszip.min.js';\n  /**\n   * Defines which zip optional utils should get loaded\n   */\n  utils?: string[] = [];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport { LazyService, LazyResult } from '@delon/util';\n\nimport { ZipSaveOptions } from './zip.types';\nimport { ZipConfig } from './zip.config';\n\ndeclare var JSZip: any;\n\n@Injectable()\nexport class ZipService {\n  constructor(\n    private cog: ZipConfig,\n    private http: HttpClient,\n    private lazy: LazyService,\n  ) {}\n\n  private init(): Promise<LazyResult[]> {\n    return this.lazy.load([this.cog.url].concat(this.cog.utils));\n  }\n\n  private check(zip: any) {\n    if (!zip) throw new Error('get instance via `ZipService.create()`');\n  }\n\n  /** è§£å */\n  read(fileOrUrl: File | string, options?: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.init().then(() => {\n        // from url\n        if (typeof fileOrUrl === 'string') {\n          this.http\n            .request('GET', fileOrUrl, { responseType: 'arraybuffer' })\n            .subscribe(\n              (res: ArrayBuffer) => {\n                JSZip.loadAsync(res, options).then(ret => resolve(ret));\n              },\n              (err: any) => {\n                reject(err);\n              },\n            );\n          return;\n        }\n        // from file\n        const reader: FileReader = new FileReader();\n        reader.onload = (e: any) => {\n          JSZip.loadAsync(e.target.result, options).then(ret => resolve(ret));\n        };\n        reader.readAsBinaryString(<File>fileOrUrl);\n      });\n    });\n  }\n\n  /** åå»º Zip å®ä¾ï¼ç¨äºåå»ºåç¼©æä»¶ */\n  create(): Promise<any> {\n    return new Promise<any>(resolve => {\n      this.init().then(() => {\n        const zipFile: any = new JSZip();\n        resolve(zipFile);\n      });\n    });\n  }\n\n  /**\n   * ä¸è½½URLèµæºå¹¶åå¥ zip\n   * @param zip Zip å®ä¾\n   * @param path Zip è·¯å¾ï¼ä¾å¦ï¼ `text.txt`ã`txt/hi.txt`\n   * @param url URL å°å\n   */\n  pushUrl(zip: any, path: string, url: string): Promise<void> {\n    this.check(zip);\n    return new Promise<void>((resolve, reject) => {\n      this.http.request('GET', url, { responseType: 'arraybuffer' }).subscribe(\n        (res: ArrayBuffer) => {\n          zip.file(path, res);\n          resolve();\n        },\n        (error: any) => {\n          reject({ url, error });\n        },\n      );\n    });\n  }\n\n  /**\n   * ä¿å­Zipå¹¶æ§è¡æå¼ä¿å­å¯¹è¯æ¡\n   *\n   * @param zip zip å¯¹è±¡ï¼å¡å¿éè¿ `create()` æå»º\n   * @param options é¢å¤åæ°ï¼\n   */\n  save(zip: any, options?: ZipSaveOptions): Promise<void> {\n    this.check(zip);\n    const opt = Object.assign({}, options);\n    return new Promise<void>((resolve, reject) => {\n      zip\n        .generateAsync(Object.assign({ type: 'blob' }, opt.options), opt.update)\n        .then(\n          (data: Blob) => {\n            if (opt.callback) opt.callback(data);\n            saveAs(data, opt.filename || 'download.zip');\n            resolve();\n          },\n          err => {\n            reject(err);\n          },\n        );\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { ZipService } from './zip.service';\nimport { ZipConfig } from './zip.config';\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule],\n})\nexport class ZipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ZipModule,\n      providers: [ZipConfig, ZipService],\n    };\n  }\n}\n"],"names":["http","saveAs","Injectable","HttpClient","LazyService","NgModule","CommonModule","DelonUtilModule"],"mappings":"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"}
