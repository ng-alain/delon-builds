{"version":3,"file":"ellipsis.js.map","sources":["ng://@delon/abc/ellipsis/ellipsis.component.ts","ng://@delon/abc/ellipsis/ellipsis.module.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n} from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Component({\n  selector: 'ellipsis',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.ellipsis]': 'true' },\n})\nexport class EllipsisComponent {\n  /** å¨æç§è¡æ°æªåä¸æå¤§çè¡æ°ï¼è¶è¿åæªåçç¥ */\n  @Input()\n  @InputNumber()\n  @HostBinding('style.-webkit-line-clamp')\n  lines = 3;\n\n  constructor(el: ElementRef, render: Renderer2) {\n    render.setStyle(el.nativeElement, '-webkit-box-orient', 'vertical');\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { EllipsisComponent } from './ellipsis.component';\n\nconst COMPONENTS = [EllipsisComponent];\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class EllipsisModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: EllipsisModule, providers: [] };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;IAqBE,2BAAY,EAAc,EAAE,MAAiB;;;;qBAFrC,CAAC;QAGP,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,oBAAoB,EAAE,UAAU,CAAC,CAAC;KACrE;;gBAdF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,2BAA2B;oBACrC,IAAI,EAAE,EAAE,kBAAkB,EAAE,MAAM,EAAE;iBACrC;;;;gBARC,UAAU;gBADV,SAAS;;;wBAYR,KAAK,YAEL,WAAW,SAAC,0BAA0B;;;QADtC,WAAW,EAAE;;;4BAjBhB;;;;;;;;ACMA,IAAM,UAAU,GAAG,CAAC,iBAAiB,CAAC,CAAC;;;;;;;IAQ9B,sBAAO;;;IAAd;QACE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KACpD;;gBARF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;oBACxC,YAAY,WAAM,UAAU,CAAC;oBAC7B,OAAO,WAAM,UAAU,CAAC;iBACzB;;yBAZD;;;;;;;;;;;;;;;"}
