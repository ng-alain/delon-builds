{"version":3,"file":"table.js","sources":["ng://@delon/abc/table/table.interfaces.ts","ng://@delon/abc/table/table-row.directive.ts","ng://@delon/abc/table/table.config.ts","ng://@delon/abc/table/table-column-source.ts","ng://@delon/abc/table/table-data-source.ts","ng://@delon/abc/table/table-export.ts","ng://@delon/abc/table/table.component.ts","ng://@delon/abc/table/table.module.ts"],"sourcesContent":["import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { DrawerHelperOptions, ModalHelperOptions, YNMode } from '@delon/theme';\nimport { NzDrawerOptions } from 'ng-zorro-antd/drawer';\nimport { ModalOptionsForService } from 'ng-zorro-antd/modal';\nimport { STComponent } from './table.component';\n\nexport interface STWidthMode {\n  /**\n   * å®½åº¦ç±»å\n   * - `default` é»è®¤è¡ä¸º\n   * - `strict` ä¸¥æ ¼æ¨¡å¼ï¼å³å¼ºå¶æ `width` æå®çå®½åº¦åç°ï¼å¹¶æ ¹æ® `strictBehavior` ç±»åå¤ç\n   */\n  type?: 'strict' | 'default';\n  /**\n   * ä¸¥æ ¼æ¨¡å¼çå¤çè¡ä¸º\n   * - `wrap` å¼ºå¶æ¢è¡\n   * - `truncate` æªç­\n   */\n  strictBehavior?: 'wrap' | 'truncate';\n}\n\nexport interface STResetColumnsOption {\n  pi?: number;\n  ps?: number;\n  columns?: STColumn[];\n  /**\n   * Whether to trigger a data load, default: `true`\n   */\n  emitReload?: boolean;\n}\n\nexport interface STReq {\n  /**\n   * åé¡µç±»åï¼é»è®¤ï¼`page`\n   * - `page` ä½¿ç¨ `pi`ï¼`ps` ç»å\n   * - `skip` ä½¿ç¨ `skip`ï¼`limit` ç»å\n   */\n  type?: 'page' | 'skip';\n  /**\n   * é¢å¤è¯·æ±åæ°ï¼é»è®¤èªå¨éå  `pi`ã`ps` è³URL\n   * - `{ status: 'new' }` => `url?pi=1&ps=10&status=new`\n   */\n  params?: any;\n  /** è¯·æ±æ¹æ³ï¼é»è®¤ï¼`GET` */\n  method?: string;\n  /** è¯·æ±ä½ `body` */\n  body?: any;\n  /** è¯·æ±ä½ `Header` */\n  headers?: any;\n  /**\n   * éå½ååæ° `pi`ã`ps`ï¼é»è®¤ï¼`{ pi: 'pi', ps: 'ps' }`\n   * - `{ pi: 'Page' }` => `pi` ä¼è¢«æ¿æ¢æ Page\n   */\n  reName?: STReqReNameType;\n  /**\n   * æ¯å¦å°è¯·æ±ææåæ°æ°æ®é½æ¾å¥ `body` å½ä¸­ï¼`url` å°åæ¬èº«åæ°é¤å¤ï¼ï¼ä»å½ `method: 'POST'` æ¶ææï¼é»è®¤ï¼`false`\n   */\n  allInBody?: boolean;\n  /**\n   * æ¯å¦å»¶è¿å è½½æ°æ®ï¼å³æ¸²æç»æåä¸ä¼ä¸»å¨åèµ·è¯·æ±ï¼é»è®¤ï¼`false`\n   */\n  lazyLoad?: boolean;\n  /**\n   * è¯·æ±åæ°æ®å¤ç\n   */\n  process?: (requestOptions: STRequestOptions) => STRequestOptions;\n}\n\nexport interface STRequestOptions {\n  body?: any;\n  headers?:\n  | HttpHeaders\n  | {\n    [header: string]: string | string[];\n  };\n  params?:\n  | HttpParams\n  | {\n    [param: string]: string | string[];\n  };\n  observe?: 'body' | 'events' | 'response';\n  reportProgress?: boolean;\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  withCredentials?: boolean;\n}\n\nexport interface STLoadOptions {\n  /** æ¯å¦åå¹¶ï¼é»è®¤ï¼`false` */\n  merge?: boolean;\n}\n\nexport interface STRes {\n  /**\n   * éå½åè¿ååæ° `total`ã`list`\n   * - `{ total: 'Total' }` => Total ä¼è¢«å½ä½ `total`\n   */\n  reName?: STResReNameType;\n  /**\n   * æ°æ®é¢å¤ç\n   */\n  process?: (data: STData[], rawData?: any) => STData[];\n}\n\nexport interface STPage {\n  /**\n   * åç«¯åé¡µï¼å½ `data` ä¸º`any[]` æ `Observable<any[]>` ææï¼é»è®¤ï¼`true`\n   * - `true` ç± `st` æ ¹æ® `data` é¿åº¦åæ§åé¡µï¼åæ¬ï¼æåºãè¿æ»¤ç­\n   * - `false` ç±ç¨æ·éè¿ `total` å `data` åæ°åæ§åé¡µï¼å¹¶ç»´æ¤ `(change)` å½åé¡µåæ´æ¶éæ°å è½½æ°æ®\n   */\n  front?: boolean;\n  /**\n   * åç«¯åé¡µæ¯å¦éç¨`0`åºç´¢å¼ï¼åªå¨`data`ç±»åä¸º`string`æ¶ææï¼é»è®¤ï¼`false`\n   */\n  zeroIndexed?: boolean;\n  /**\n   * æå®åé¡µæ¾ç¤ºçä½ç½®ï¼é»è®¤ï¼`bottom`\n   */\n  position?: 'top' | 'bottom' | 'both';\n  /**\n   * æå®åé¡µåé¡µæ¹åï¼é»è®¤ï¼`right`\n   */\n  placement?: 'left' | 'center' | 'right';\n  /**\n   * æ¯å¦æ¾ç¤ºåé¡µå¨ï¼é»è®¤ï¼`true`\n   */\n  show?: boolean;\n  /**\n   * æ¯å¦æ¾ç¤ºåé¡µå¨ä¸­æ¹åé¡µæ°ï¼é»è®¤ï¼`false`\n   */\n  showSize?: boolean;\n  /**\n   * åé¡µå¨ä¸­æ¯é¡µæ¾ç¤ºæ¡ç®æ°ä¸ææ¡å¼ï¼é»è®¤ï¼`[10, 20, 30, 40, 50]`\n   */\n  pageSizes?: number[];\n  /**\n   * æ¯å¦æ¾ç¤ºåé¡µå¨ä¸­å¿«éè·³è½¬ï¼é»è®¤ï¼`false`\n   */\n  showQuickJumper?: boolean;\n  /**\n   * æ¯å¦æ¾ç¤ºæ»æ°æ®é\n   * - `boolean` ç±»åæ¾ç¤ºä¸å¦ï¼é»è®¤æ¨¡æ¿ï¼`å± {{total}} æ¡`\n   * - `string` èªå®ä¹æ¨¡æ¿ï¼æ¨¡æ¿åéï¼\n   *  - `{{total}}` è¡¨ç¤ºæ°æ®æ»é\n   *  - `{{range[0]}}` è¡¨ç¤ºå½åé¡µå¼å§æ°éå¼\n   *  - `{{range[1]}}` è¡¨ç¤ºå½åé¡µç»ææ°éå¼\n   */\n  total?: string | boolean;\n  /**\n   * åæ¢åé¡µæ¶è¿åé¡¶é¨ï¼é»è®¤ï¼`true`\n   */\n  toTop?: boolean;\n  /**\n   * è¿åé¡¶é¨åç§»å¼ï¼é»è®¤ï¼`100`\n   */\n  toTopOffset?: number;\n}\n\n/**\n * æ°æ®æº\n */\nexport interface STData {\n  /**\n   * éæ©æ¡æåéæ¡ç¶æå¼\n   */\n  checked?: boolean;\n  /**\n   * éæ©æ¡æåéæ¡ `disabled` å¼\n   */\n  disabled?: boolean;\n  /**\n   * æ¯å¦å±å¼ç¶æ\n   */\n  expand?: boolean;\n  /**\n   * æ¯å¦æ¾ç¤ºå±å¼æé®\n   */\n  showExpand?: boolean;\n\n  [key: string]: any;\n}\n\n/**\n * åæè¿°\n */\nexport interface STColumn {\n  /**\n   * ç¨äºå®ä¹æ°æ®æºä¸»é®ï¼ä¾å¦ï¼`STStatistical`\n   */\n  key?: string;\n  /**\n   * åæ é¢\n   */\n  title?: string | STColumnTitle;\n  /**\n   * åæ°æ®å¨æ°æ®é¡¹ä¸­å¯¹åºç keyï¼æ¯æ `a.b.c` çåµå¥åæ³ï¼ä¾å¦ï¼\n   * - `id`\n   * - `price.market`\n   * - `[ 'price', 'market' ]`\n   */\n  index?: string | string[] | null;\n  /**\n   * ç±»å\n   * - `no` è¡å·ï¼è®¡ç®è§åï¼`index + noIndex`\n   * - `checkbox` å¤é\n   * - `radio` åé\n   * - `link` é¾æ¥ï¼å¡å¿æå® `click`\n   * - `badge` [å¾½æ ](https://ng.ant.design/components/badge/zh)ï¼å¡å¿æå® `badge` åæ°éç½®å¾½æ å¯¹åºå¼\n   * - `tag` [æ ç­¾](https://ng.ant.design/components/tag/zh)ï¼å¡å¿æå® `tag` åæ°éç½®æ ç­¾å¯¹åºå¼\n   * - `img` å¾çä¸å±ä¸­(è¥ `className` å­å¨åä¼å)\n   * - `number` æ°å­ä¸å±å³(è¥ `className` å­å¨åä¼å)\n   * - `currency` è´§å¸ä¸å±å³(è¥ `className` å­å¨åä¼å)\n   * - `date` æ¥ææ ¼å¼ä¸å±ä¸­(è¥ `className` å­å¨åä¼å)ï¼ä½¿ç¨ `dateFormat` èªå®ä¹æ ¼å¼\n   * - `yn` å°`boolean`ç±»åå¾½ç« å [document](https://ng-alain.com/docs/data-render#yn)\n   */\n  type?: 'checkbox' | 'link' | 'badge' | 'tag' | 'radio' | 'img' | 'currency' | 'number' | 'date' | 'yn' | 'no';\n  /**\n   * é¾æ¥åè°ï¼è¥è¿åä¸ä¸ªå­ç¬¦ä¸²è¡¨ç¤ºå¯¼èªURLä¼èªå¨è§¦å `router.navigateByUrl`\n   */\n  click?: (record: STData, instance?: STComponent) => any;\n  /**\n   * æé®ç»\n   */\n  buttons?: STColumnButton[];\n  /**\n   * èªå®ä¹æ¸²æID\n   * @example\n   * <ng-template st-row=\"custom\" let-item let-index=\"index\" let-column=\"column\">\n   *  {{ c.title }}\n   * </ng-template>\n   */\n  render?: string;\n  /**\n   * æ é¢èªå®ä¹æ¸²æID\n   * @example\n   * <ng-template st-row=\"custom\" type=\"title\" let-c>\n   *  {{ item | json }}\n   * </ng-template>\n   */\n  renderTitle?: string;\n  /**\n   * åå®½ï¼æ°å­åè¡¨ç¤º `px` å¼ï¼ï¼ä¾å¦ï¼`100`ã`10%`ã`100px`\n   *\n   * **æ³¨æï¼** è¥åºå®åå¿é¡»æ¯æ°å­\n   */\n  width?: string | number;\n  /**\n   * æåºéç½®é¡¹ï¼è¿ç¨æ°æ®éç½®**ä¼å**è§åï¼\n   * - `true` è¡¨ç¤ºåè®¸æåº\n   * - `string` è¡¨ç¤ºè¿ç¨æ°æ®æåºç¸å¯¹åº `key` å¼\n   */\n  sort?: true | string | STColumnSort;\n  /**\n   * è¿æ»¤éç½®é¡¹\n   */\n  filter?: STColumnFilter;\n  /**\n   * æ ¼å¼ååå¼\n   */\n  format?: (item: STData, col: STColumn, index: number) => string;\n  /**\n   * èªå®ä¹å¨/åééæ©é¡¹\n   */\n  selections?: STColumnSelection[];\n  /**\n   * å `class` å±æ§å¼ï¼æ³¨ï¼æ é¡» `.` ç¹ï¼ï¼ä¾å¦ï¼\n   * - `text-center` å±ä¸­\n   * - `text-right` å±å³\n   * - `text-success` æåè²\n   * - `text-danger` å¼å¸¸è²\n   */\n  className?: string;\n  /**\n   * åå¹¶å\n   */\n  colSpan?: number;\n  /**\n   * æ°å­æ ¼å¼ï¼`type=number` ææ\n   */\n  numberDigits?: string;\n  /**\n   * æ¥ææ ¼å¼ï¼`type=date` ææï¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm`ï¼\n   */\n  dateFormat?: string;\n  /**\n   * å½ `type=yn` ææ\n   */\n  yn?: STColumnYn;\n  /**\n   * æ¯å¦åè®¸å¯¼åºï¼é»è®¤ `true`\n   */\n  exported?: boolean;\n  /**\n   * æéï¼ç­å [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) åæ°å¼\n   */\n  acl?: any;\n  /** å½ä¸å­å¨æ°æ®æ¶ä»¥é»è®¤å¼æ¿ä»£ */\n  default?: string;\n  /**\n   * åºå®åååï¼å½æå®æ¶å¡å¿æå® `width` å¦åè§ä¸ºæ æï¼æè¥å¹² **æ³¨æï¼** é¡¹ï¼\n   *\n   * - è¥åå¤´ä¸åå®¹ä¸å¯¹é½æåºç°åéå¤ï¼è¯·æå®åçå®½åº¦ `width`\n   * - å»ºè®®æå® `scroll.x` ä¸ºå¤§äºè¡¨æ ¼å®½åº¦çåºå®å¼æç¾åæ¯ãæ³¨æï¼ä¸éåºå®åå®½åº¦ä¹åä¸è¦è¶è¿ `scroll.x`\n   */\n  fixed?: 'left' | 'right';\n  /**\n   * å¾½æ éç½®é¡¹\n   */\n  badge?: STColumnBadge | null;\n  /**\n   * æ ç­¾éç½®é¡¹\n   */\n  tag?: STColumnTag | null;\n  /**\n   * è¡å·ç´¢å¼ï¼é»è®¤ï¼`1`\n   * - è®¡ç®è§åä¸ºï¼`index + noIndex`\n   * - æ¯æèªå®ä¹æ¹æ³\n   */\n  noIndex?: number | ((item: STData, col: STColumn, idx: number) => number);\n  /**\n   * æ¡ä»¶è¡¨è¾¾å¼\n   * - ä»èµå¼ `columns` æ¶æ§è¡ä¸æ¬¡\n   * - å¯è°ç¨ `resetColumns()` åä¸æ¬¡è§¦å\n   */\n  iif?: (item: STColumn) => boolean;\n\n  /**\n   * ç»è®¡\n   */\n  statistical?: STStatisticalType | STStatistical;\n\n  /** @ignore internal property */\n  _sort?: STSortMap;\n\n  [key: string]: any;\n}\n\nexport interface STColumnTitle {\n  [key: string]: any;\n\n  /**\n   * Text of header, can be choose one of `text` or `i18n`\n   */\n  text?: string;\n\n  /**\n   * I18n key of header, can be choose one of `text` or `i18n`\n   */\n  i18n?: string;\n\n  /**\n   * Optional information of header\n   */\n  optional?: string;\n\n  /**\n   * Optional help of header\n   */\n  optionalHelp?: string;\n}\n\nexport type STStatisticalType = 'count' | 'distinctCount' | 'sum' | 'average' | 'max' | 'min';\n\nexport type STStatisticalFn = (values: number[], col: STColumn, list: STData[], rawData?: any) => STStatisticalResult;\n\nexport interface STStatistical {\n  type: STStatisticalType | STStatisticalFn;\n  /**\n   * ä¿çå°æ°ä½æ°ï¼é»è®¤ï¼`2`\n   */\n  digits?: number;\n  /**\n   * æ¯å¦éè¦è´§å¸æ ¼å¼åï¼é»è®¤ä»¥ä¸æåµä¸º `true`\n   * - `type` ä¸º `STStatisticalFn`ã `sum`ã`average`ã`max`ã`min`\n   */\n  currency?: boolean;\n}\n\nexport interface STStatisticalResults {\n  [key: string]: STStatisticalResult;\n  [index: number]: STStatisticalResult;\n}\n\nexport interface STStatisticalResult {\n  value: number;\n  text?: string;\n}\n\nexport interface STColumnSort {\n  /**\n   * æåºçé»è®¤åæ§å±æ§\n   */\n  default?: 'ascend' | 'descend' | null;\n  /**\n   * æ¬å°æ°æ®çæåºå½æ°ï¼ä½¿ç¨ä¸ä¸ªå½æ°(åè [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) ç compareFunction)\n   * - `null` å¿½ç¥æ¬å°æåºï¼ä½ä¿ææåºåè½\n   */\n  compare?: ((a: STData, b: STData) => number) | null;\n  /**\n   * è¿ç¨æ°æ®çæåºæ¶åç«¯ç¸å¯¹åºçKEYï¼é»è®¤ä½¿ç¨ `index` å±æ§\n   * - è¥ `multiSort: false` æ¶ï¼`key: 'name' => ?name=1&pi=1`\n   * - è¥ `multiSort: true` åè®¸å¤ä¸ªæåº key å­å¨ï¼æä½¿ç¨ `STMultiSort` æå®å¤åæåºkeyåå¹¶è§å\n   */\n  key?: string | null;\n  /**\n   * è¿ç¨æ°æ®çæåºæ¶åç«¯ç¸å¯¹åºçVALUE\n   * - `{ ascend: '0', descend: '1' }` ç»æ `?name=1&pi=1`\n   * - `{ ascend: 'asc', descend: 'desc' }` ç»æ `?name=desc&pi=1`\n   */\n  reName?: { ascend?: string; descend?: string };\n}\n\nexport interface STSortMap extends STColumnSort {\n  [key: string]: any;\n\n  /** æ¯å¦å¯ç¨æåº */\n  enabled?: boolean;\n}\n\nexport interface STColumnFilter {\n  /**\n   * æç´¢æ¹å¼\n   * - `defualt` é»è®¤å½¢å¼\n   * - `keyword` ææ¬æ¡å½¢å¼\n   */\n  type?: 'default' | 'keyword';\n  /**\n   * è¡¨å¤´çç­éèåé¡¹ï¼è³å°ä¸é¡¹æä¼çæ\n   * - å½ `type='keyword'` æ¶å¯ä¸ºç©º\n   */\n  menus?: STColumnFilterMenu[];\n  /**\n   * æ¬å°æ°æ®çç­éå½æ°\n   */\n  fn?: ((filter: STColumnFilterMenu, record: STData) => boolean) | null;\n  /**\n   * æ è¯æ°æ®æ¯å¦å·²è¿æ»¤ï¼ç­éå¾æ ä¼é«äº®\n   */\n  default?: boolean;\n  /**\n   * èªå®ä¹ filter å¾æ \n   * - å½ `type='default'` é»è®¤ `filter`\n   * - å½ `type='keyword'` é»è®¤ `search`\n   */\n  icon?: string | STIcon;\n  /**\n   * ç¡®è®¤æé®ææ¬ï¼é»è®¤ `ç¡®è®¤`\n   */\n  confirmText?: string;\n  /**\n   * æ¸é¤æé®ææ¬ï¼é»è®¤ `éç½®`\n   */\n  clearText?: string;\n  /**\n   * æ¯å¦å¤éï¼é»è®¤ `true`\n   */\n  multiple?: boolean;\n  /**\n   * è¿ç¨æ°æ®çè¿æ»¤æ¶åç«¯ç¸å¯¹åºçKEYï¼é»è®¤ä½¿ç¨ `index` å±æ§\n   * `key: 'name'` ç»æ `?name=1&pi=1`\n   */\n  key?: string | null;\n  /**\n   * è¿ç¨æ°æ®çè¿æ»¤æ¶åç«¯ç¸å¯¹åºçVALUE\n   * - é»è®¤å½ `multiple: true` æ¶ä»¥è±æéå·æ¼æ¥çå­ç¬¦ä¸²\n   * @return è¿åä¸º Object å¯¹è±¡\n   */\n  reName?: (list: STColumnFilterMenu[], col: STColumn) => {};\n}\n\nexport interface STColumnFilterMenu {\n  /**\n   * ææ¬\n   * - å½ `type: 'keyword'` æ¶è¡¨ç¤º `placeholder`\n   */\n  text?: string;\n  /**\n   * å¼\n   */\n  value?: any;\n  /**\n   * æ¯å¦éä¸­\n   */\n  checked?: boolean;\n  /**\n   * æéï¼ç­å [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) åæ°å¼\n   */\n  acl?: any;\n\n  [key: string]: any;\n}\n\nexport interface STColumnSelection {\n  /**\n   * éæ©é¡¹æ¾ç¤ºçæå­\n   */\n  text: string;\n  /**\n   * éæ©é¡¹ç¹å»åè°ï¼åè®¸å¯¹åæ° `data.checked` è¿è¡æä½\n   */\n  select: (data: STData[]) => void;\n  /** æéï¼ç­å `can()` åæ°å¼ */\n  acl?: any;\n}\n\n/** å½ `type=yn` ææ */\nexport interface STColumnYn {\n  /**\n   * çå¼æ¡ä»¶ï¼ï¼é»è®¤ï¼`true`ï¼\n   */\n  truth?: any;\n  /**\n   * å¾½ç«  `true` æ¶ææ¬ï¼ï¼é»è®¤ï¼`æ¯`ï¼\n   */\n  yes?: string;\n  /**\n   * å¾½ç«  `false` æ¶ææ¬ï¼ï¼é»è®¤ï¼`å¦`ï¼\n   */\n  no?: string;\n  /**\n   * å¾½ç« æ¾ç¤ºé£æ ¼\n   * - `full` å¾æ åææ¬\n   * - `icon` å¾æ \n   * - `text` ææ¬\n   */\n  mode?: YNMode;\n}\n\nexport interface STIcon {\n  /** å¾æ ç±»å */\n  type: string;\n  /** å¾æ ä¸»é¢é£æ ¼ï¼é»è®¤ï¼`outline` */\n  theme?: 'outline' | 'twotone' | 'fill';\n  /** æ¯å¦ææè½¬å¨ç»ï¼é»è®¤ï¼`false` */\n  spin?: boolean;\n  /** ä»éç¨åè²å¾æ ï¼è®¾ç½®åè²å¾æ çä¸»è¦é¢è²ï¼ä»å¯¹å½å icon çæ */\n  twoToneColor?: string;\n  /** æå®æ¥èª IconFont çå¾æ ç±»å */\n  iconfont?: string;\n}\n\n/**\n * æé®éç½®\n */\nexport interface STColumnButton {\n  /**\n   * ææ¬\n   */\n  text?: string | ((record: STData, btn: STColumnButton) => string);\n  /**\n   * ææ¬ i18n\n   */\n  i18n?: string;\n  /**\n   * å¾æ \n   */\n  icon?: string | STIcon;\n  /**\n   * æé®ç±»å\n   * - `none` æ ä»»ä½äºå¨\n   * - `del` å é¤ï¼é»è®¤å¼å¯ `pop: true`\n   * - `modal` å¯¹è¯æ¡ï¼éè¦æå® `component` æä¼çæ\n   * - `static` éæå¯¹è¯æ¡ï¼éè¦æå® `component` æä¼çæ\n   * - `drawer` æ½å±ï¼éè¦æå® `component` æä¼çæ\n   * - `link` é¾æ¥ï¼å½ `click` è¿åå­ç¬¦ä¸²æ¶èªå¨è°ç¨ `navigateByUrl` å¯¼èª\n   * - `divider` åå²çº¿\n   */\n  type?: 'none' | 'del' | 'modal' | 'static' | 'drawer' | 'link' | 'divider';\n  /**\n   * ç¹å»åè°\n   * - Function\n   *  - `type=modal` åªä¼å¨å½æä¼ åå¼æ¶æä¼è§¦ååè°\n   * - reloadï¼éæ°å·æ°å½åé¡µ\n   * - loadï¼éæ°å è½½æ°æ®ï¼å¹¶éç½®é¡µç ä¸ºï¼`1`\n   *\n   * @todo Bad parameter design\n   */\n  click?: 'reload' | 'load' | ((record: STData, modal?: any, instance?: STComponent) => any);\n  /**\n   * æ°æ³¡ç¡®è®¤æ¡åæ°ï¼è¥ `string` ç±»åè¡¨ç¤ºæ é¢\n   */\n  pop?: boolean | string | STColumnButtonPop;\n  /**\n   * å¯¹è¯æ¡åæ°\n   */\n  modal?: STColumnButtonModal;\n  /**\n   * æ½å±åæ°\n   */\n  drawer?: STColumnButtonDrawer;\n  /**\n   * ä¸æèåï¼å½å­å¨æ¶ä»¥ `dropdown` å½¢å¼æ¸²æ\n   * - åªæ¯æä¸çº§\n   */\n  children?: STColumnButton[];\n  /**\n   * æéï¼ç­å [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) åæ°å¼\n   */\n  acl?: any;\n  /**\n   * Conditional expression\n   *\n   * @todo Bad parameter design\n   */\n  iif?: (item: STData, btn: STColumnButton, column: STColumn) => boolean;\n  /**\n   * Conditional expression rendering behavior, can be set to `hide` (default) or `disabled`\n   */\n  iifBehavior?: IifBehaviorType;\n\n  tooltip?: string;\n\n  [key: string]: any;\n}\n\nexport interface STColumnButtonOK {\n  record: STData;\n  /**\n   * Modal or drawer return value when trigger confirm.\n   */\n  ret?: any;\n  instance?: STComponent;\n  event: Event;\n}\n\nexport type IifBehaviorType = 'hide' | 'disabled';\n\nexport interface STColumnButtonModal extends ModalHelperOptions {\n  /**\n   * å¯¹è¯æ¡ç»ä»¶å¯¹è±¡ï¼å¡å¿å¨ `entryComponents` æ³¨å\n   */\n  component?: any;\n  /**\n   * å¯¹è¯æ¡åæ°\n   */\n  params?: (record: STData) => {};\n  /**\n   * å¯¹è¯æ¡ç®æ ç»ä»¶çæ¥æ¶åæ°åï¼é»è®¤ï¼`record`\n   */\n  paramsName?: string;\n}\n\nexport interface STColumnButtonModalConfig {\n  /**\n   * æå®æ¨¡ææ¡ç®æ ç»ä»¶çæ¥æ¶åæ°åï¼é»è®¤ï¼`record`\n   */\n  paramsName?: string;\n  /** å¤§å°ï¼ä¾å¦ï¼lgã600ï¼é»è®¤ï¼`lg` */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '' | number;\n  /** å¯¹è¯æ¡ [ModalOptionsForService](https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/modal/nz-modal.type.ts) åæ° */\n  modalOptions?: ModalOptionsForService;\n  /** æ¯å¦ç²¾åï¼é»è®¤ï¼`true`ï¼ï¼è¥è¿åå¼éç©ºå¼ï¼`null`æ`undefined`ï¼è§ä¸ºæåï¼å¦åè§ä¸ºéè¯¯ */\n  exact?: boolean;\n}\n\nexport interface STColumnButtonDrawer extends DrawerHelperOptions {\n  /**\n   * æ é¢\n   */\n  title?: string;\n  /**\n   * æ½å±ç»ä»¶å¯¹è±¡ï¼å¡å¿å¨ `entryComponents` æ³¨å\n   */\n  component?: any;\n  /**\n   * æ½å±åæ°\n   */\n  params?: (record: STData) => {};\n  /**\n   * æ½å±ç®æ ç»ä»¶çæ¥æ¶åæ°åï¼é»è®¤ï¼`record`\n   */\n  paramsName?: string;\n}\n\nexport interface STColumnButtonDrawerConfig {\n  /**\n   * æ½å±ç®æ ç»ä»¶çæ¥æ¶åæ°åï¼é»è®¤ï¼`record`\n   */\n  paramsName?: string;\n  /**\n   * å¤§å°ï¼ä¾å¦ï¼lgã600ï¼é»è®¤ï¼`md`\n   *\n   * | ç±»å | é»è®¤å¤§å° |\n   * | --- | ------ |\n   * | `sm` | `300` |\n   * | `md` | `600` |\n   * | `lg` | `900` |\n   * | `xl` | `1200` |\n   *\n   * > ä»¥ä¸å¼ï¼å¯éè¿è¦çç¸åºçLESSåæ°èªè¡è°æ´\n   */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | number;\n  /**\n   * æ¯å¦åå«åºé¨å·¥å·æ¡ï¼é»è®¤ï¼`true`\n   */\n  footer?: boolean;\n  /**\n   * åºé¨å·¥å·æ¡é«åº¦ï¼é»è®¤ï¼`55`\n   */\n  footerHeight?: number;\n  /** æ½å± [NzDrawerOptions](https://ng.ant.design/components/drawer/zh#nzdraweroptions) åæ° */\n  drawerOptions?: NzDrawerOptions;\n}\n\nexport interface STColumnButtonPop {\n  /**\n   * Title of the popover, default: `ç¡®è®¤å é¤åï¼`\n   */\n  title?: string;\n\n  /**\n   * Popover trigger mode, default: `click`\n   */\n  trigger?: 'click' | 'focus' | 'hover';\n\n  /**\n   * The position of the popover relative to the target, default: `top`\n   */\n  placement?:\n  | 'top'\n  | 'left'\n  | 'right'\n  | 'bottom'\n  | 'topLeft'\n  | 'topRight'\n  | 'bottomLeft'\n  | 'bottomRight'\n  | 'leftTop'\n  | 'leftBottom'\n  | 'rightTop'\n  | 'rightBottom';\n\n  /**\n   * Class name of the popover card\n   */\n  overlayClassName?: string;\n\n  /**\n   * Style of the popover card\n   */\n  overlayStyle?: {};\n\n  /**\n   * Text of the Cancel button\n   */\n  cancelText?: string;\n\n  /**\n   * Text of the Confirm button\n   */\n  okText?: string;\n\n  /**\n   * Button `type` of the Confirm button\n   */\n  okType?: 'primary' | 'ghost' | 'dashed' | 'danger' | 'default';\n\n  /**\n   * Customize icon of confirmation\n   */\n  icon?: string;\n\n  /**\n   * Whether to directly emit `onConfirm` without showing Popconfirm, default: `() => false`\n   */\n  condition?: (item: STData) => boolean;\n}\n\nexport interface STReqReNameType {\n  pi?: string;\n  ps?: string;\n  skip?: string;\n  limit?: string;\n}\n\nexport interface STResReNameType {\n  total?: string | string[];\n  list?: string | string[];\n}\n\nexport interface STExportOptions {\n  /** @ignore internal property */\n  _d?: any[];\n  /** @ignore internal property */\n  _c?: STColumn[];\n  /** å·¥ä½æº¥å */\n  sheetname?: string;\n  /** æä»¶å */\n  filename?: string;\n  /** triggers when saveas */\n  callback?: (wb: any) => void;\n}\n\n/**\n * åæåºè§å\n * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n */\nexport interface STSingleSort {\n  /** è¯·æ±åæ°åï¼é»è®¤ï¼`sort` */\n  key?: string;\n  /** ååä¸ç¶æé´åéç¬¦ï¼é»è®¤ï¼`.` */\n  nameSeparator?: string;\n}\n\n/**\n * å¤æåºç¸åæåº key æ¶åå¹¶è§å\n */\nexport interface STMultiSort {\n  /** è¯·æ±åæ°åï¼é»è®¤ï¼`sort` */\n  key?: string;\n  /** ä¸åå±æ§é´åéç¬¦ï¼é»è®¤ï¼`-` */\n  separator?: string;\n  /** ååä¸ç¶æé´åéç¬¦ï¼é»è®¤ï¼`.` */\n  nameSeparator?: string;\n  /**\n   * æ¯å¦å¨å±å¤æåºæ¨¡å¼ï¼é»è®¤ï¼`true`\n   * - `true` è¡¨ç¤ºææ `st` é»è®¤ä¸ºå¤æåº\n   * - `false` è¡¨ç¤ºéè¦ä¸ºæ¯ä¸ª `st` æ·»å  `multiSort` æä¼è§ä¸ºå¤æåºæ¨¡å¼\n   */\n  global?: boolean;\n  /**\n   * æ¯å¦ä¿æç©ºå¼çé®åï¼é»è®¤ï¼`true`\n   * - `true` è¡¨ç¤ºä¸ç®¡æ¯å¦ææåºé½ä¼åé `key` é®å\n   * - `false` è¡¨ç¤ºæ æåºå¨ä½æ¶ä¸ä¼åé `key` é®å\n   */\n  keepEmptyKey?: boolean;\n}\n\n/**\n * å¾½æ ä¿¡æ¯\n */\nexport interface STColumnBadge {\n  [key: number]: STColumnBadgeValue;\n  [key: string]: STColumnBadgeValue;\n}\n\nexport interface STColumnBadgeValue {\n  /**\n   * ææ¬\n   */\n  text?: string;\n  /**\n   * å¾½æ é¢è²å¼\n   */\n  color?: 'success' | 'processing' | 'default' | 'error' | 'warning';\n}\n\n/**\n * æ ç­¾ä¿¡æ¯\n */\nexport interface STColumnTag {\n  [key: number]: STColumnTagValue;\n  [key: string]: STColumnTagValue;\n}\n\nexport interface STColumnTagValue {\n  /**\n   * ææ¬\n   */\n  text?: string;\n  /**\n   * é¢è²å¼ï¼æ¯æé¢è®¾åè²å¼\n   * - é¢è®¾ï¼geekblue,blue,purple,success,red,volcano,orange,gold,lime,green,cyan\n   * - è²å¼ï¼#f50,#ff0\n   */\n  color?: 'geekblue' | 'blue' | 'purple' | 'success' | 'red' | 'volcano' | 'orange' | 'gold' | 'lime' | 'green' | 'cyan' | string;\n}\n\nexport type STChangeType = 'loaded' | 'pi' | 'ps' | 'checkbox' | 'radio' | 'sort' | 'filter' | 'click' | 'dblClick' | 'expand';\n\n/**\n * åè°æ°æ®\n */\nexport interface STChange {\n  /**\n   * åè°ç±»å\n   */\n  type: STChangeType;\n  /**\n   * å½åé¡µç \n   */\n  pi: number;\n  /**\n   * æ¯é¡µæ°é\n   */\n  ps: number;\n  /**\n   * æ°æ®æ»é\n   */\n  total: number;\n  /**\n   * `loaded` åæ°\n   */\n  loaded?: STData[];\n  /**\n   * `checkbox` åæ°\n   */\n  checkbox?: STData[];\n  /**\n   * `radio` åæ°\n   */\n  radio?: STData;\n  /**\n   * æåºåæ°\n   */\n  sort?: STChangeSort;\n  /**\n   * è¿æ»¤åæ°\n   */\n  filter?: STColumn;\n  /**\n   * è¡ç¹å»åæ°\n   */\n  click?: STChangeRowClick;\n  /**\n   * è¡åå»åæ°\n   */\n  dblClick?: STChangeRowClick;\n  /**\n   * `expand` åæ°\n   */\n  expand?: STData;\n}\n\n/** è¡åå»åæ° */\nexport interface STChangeSort {\n  value?: 'ascend' | 'descend';\n  map?: { [key: string]: string };\n  column?: STColumn;\n}\n\n/** è¡åå»åæ° */\nexport interface STChangeRowClick {\n  e?: Event;\n  item?: STData;\n  index?: number;\n}\n\nexport interface STError {\n  type?: 'req';\n  error?: any;\n}\n\nexport type STRowClassName = (record: STData, index: number) => string;\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>) {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string) {\n    return this.titles[path];\n  }\n\n  getRow(path: string) {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row')\n  id: string;\n\n  @Input()\n  type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  STColumnButtonDrawerConfig,\n  STColumnButtonModalConfig,\n  STIcon,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STWidthMode,\n  IifBehaviorType,\n  STColumnButtonPop,\n} from './table.interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class STConfig {\n  /**\n   * èµ·å§é¡µç ï¼é»è®¤ä¸ºï¼`1`\n   */\n  pi?: number;\n  /**\n   * æ¯é¡µæ°éï¼å½è®¾ç½®ä¸º `0` è¡¨ç¤ºä¸åé¡µï¼é»è®¤ï¼`10`\n   */\n  ps?: number;\n  /**\n   * æ¯å¦æ¾ç¤ºè¾¹æ¡\n   */\n  bordered?: boolean;\n  /**\n   * tableå¤§å°\n   */\n  size?: 'small' | 'middle' | 'default' = 'default';\n  /**\n   * æ¯å¦å¼å¯ååºå¼ï¼é»è®¤ï¼`true`\n   */\n  responsive?: boolean = true;\n  /**\n   * æ¯å¦å¨å°å±å¹ä¸ææ¾ç¤ºé¡¶é¨ä¸åºé¨ï¼é»è®¤ï¼`false`\n   */\n  responsiveHideHeaderFooter?: boolean = false;\n  /** è¯·æ±ä½éç½® */\n  req?: STReq = {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  };\n  /** è¿åä½éç½® */\n  res?: STRes = {\n    reName: { list: ['list'], total: ['total'] },\n  };\n  /** è¿åä½éç½® */\n  page?: STPage = {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n  };\n  /**\n   * éå½åæåºå¼ï¼`columns` çéå½åé«äºå±æ§\n   */\n  sortReName?: { ascend?: string; descend?: string };\n  /**\n   * åæåºè§å\n   * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n   * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n   */\n  singleSort?: STSingleSort | null = null;\n  /**\n   * æ¯å¦å¤æåºï¼å½ `sort` å¤ä¸ªç¸åå¼æ¶èªå¨åå¹¶ï¼å»ºè®®åç«¯æ¯ææ¶ä½¿ç¨\n   */\n  multiSort?: STMultiSort | null = null;\n  /**\n   * æé®æ¨¡ææ¡éç½®\n   */\n  modal?: STColumnButtonModalConfig = {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  };\n  /**\n   * æé®æ½å±éç½®\n   */\n  drawer?: STColumnButtonDrawerConfig = {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  };\n  /**\n   * æ°æ³¡åæ°\n   */\n  pop?: STColumnButtonPop = {\n    title: 'ç¡®è®¤å é¤åï¼',\n  };\n  /**\n   * è¡åå»å¤å°æ¶é¿ä¹ç±»ä¸ºåå»ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`200`\n   */\n  rowClickTime?: number = 200;\n  /**\n   * è¿æ»¤æé®ç¡®è®¤ææ¬\n   */\n  filterConfirmText?: string;\n  /**\n   * è¿æ»¤æé®éç½®ææ¬\n   */\n  filterClearText?: string;\n  /**\n   * æé®å¾æ \n   */\n  btnIcon?: STIcon = {\n    type: '',\n    theme: 'outline',\n    spin: false,\n  };\n  /**\n   * è¡å·ç´¢å¼ï¼é»è®¤ï¼`1`\n   * - è®¡ç®è§åä¸ºï¼`index + noIndex`\n   */\n  noIndex?: number = 1;\n  /**\n   * è¡¨æ ¼è¡çç±»å\n   */\n  rowClassName?: STRowClassName;\n  /**\n   * éè¿ç¹å»è¡æ¥å±å¼å­è¡\n   */\n  expandRowByClick?: boolean = false;\n  /**\n   * æé£ç´æ¨¡å¼\n   */\n  expandAccordion?: boolean = false;\n  /**\n   * æå® `width` æ¨¡å¼\n   */\n  widthMode?: STWidthMode = {\n    type: 'default',\n    strictBehavior: 'truncate',\n  };\n  virtualItemSize? = 54;\n  virtualMaxBufferPx? = 200;\n  virtualMinBufferPx? = 100;\n\n  /**\n   * Conditional expression rendering behavior, can be set to `hide` (default) or `disabled`\n   */\n  iifBehavior?: IifBehaviorType = 'hide';\n}\n","import { DomSanitizer } from '@angular/platform-browser';\nimport { Host, Inject, Injectable, Optional } from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { deepCopy } from '@delon/util';\n\nimport { STRowSource } from './table-row.directive';\nimport { STConfig } from './table.config';\nimport { STColumn, STColumnButton, STColumnFilter, STSortMap, STIcon, STColumnButtonPop } from './table.interfaces';\n\n@Injectable()\nexport class STColumnSource {\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private cog: STConfig,\n  ) {}\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]) {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: STColumn[]) {\n    const countReduce = (a: number, b: STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: STColumn): STSortMap {\n    const res = this.fixCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixCoerce(item: STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: STColumn) {\n    if (item.renderTitle) {\n      item.__renderTitle = this.rowSource.getTitle(item.renderTitle);\n    }\n    if (item.render) {\n      item.__render = this.rowSource.getRow(item.render);\n    }\n  }\n\n  process(list: STColumn[]): STColumn[] {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: STColumn[] = [];\n    const copyColumens = deepCopy(list) as STColumn[];\n    for (const item of copyColumens) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null)\n      ) {\n        (item as any).type = '';\n      }\n      // className\n      if (!item.className) {\n        item.className = {\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        }[item.type!];\n      }\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // restore custom row\n      this.restoreRender(item);\n\n      item.__point = point++;\n      columns.push(item);\n    }\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns);\n\n    return columns;\n  }\n\n  restoreAllRender(columns: STColumn[]) {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { _HttpClient, CNCurrencyPipe, DatePipe, YNPipe } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  STColumn,\n  STData,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRequestOptions,\n  STReqReNameType,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n  STColumnFilter,\n  STSortMap,\n} from './table.interfaces';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: STColumn[];\n  singleSort?: STSingleSort | null;\n  multiSort?: STMultiSort | null;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** æ¯å¦éè¦æ¾ç¤ºåé¡µå¨ */\n  pageShow: boolean;\n  /** æ° `pi`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  pi: number;\n  /** æ° `ps`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  ps: number;\n  /** æ° `total`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  total: number;\n  /** æ°æ® */\n  list: STData[];\n  /** ç»è®¡æ°æ® */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns, retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: STColumn, idx: number): { text: any; _text: SafeHtml; org?: any; color?: string } {\n    if (col.format) {\n      const formatRes = col.format(item, col, idx) || '';\n      if (formatRes && ~formatRes.indexOf('</')) {\n        return { text: formatRes, _text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n      }\n      return { text: formatRes, _text: formatRes, org: formatRes };\n    }\n\n    const value = deepGet(item, col.index as string[], col.default);\n\n    let text = value;\n    let color: string | undefined;\n    switch (col.type) {\n      case 'no':\n        text = this.getNoIndex(item, col, idx);\n        break;\n      case 'img':\n        text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n        break;\n      case 'number':\n        text = this.numberPipe.transform(value, col.numberDigits);\n        break;\n      case 'currency':\n        text = this.currentyPipe.transform(value);\n        break;\n      case 'date':\n        text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n        break;\n      case 'yn':\n        text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n        break;\n      case 'tag':\n      case 'badge':\n        const data = col.type === 'tag' ? col.tag : col.badge;\n        if (data && data[text]) {\n          const dataItem = data[text];\n          text = dataItem.text;\n          color = dataItem.color;\n        } else {\n          text = '';\n        }\n        break;\n    }\n    if (text == null) text = '';\n    return { text, _text: this.dom.bypassSecurityTrustHtml(text), org: value, color };\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: STColumn[]) {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(\n    singleSort: STSingleSort | null | undefined,\n    multiSort: STMultiSort | null | undefined,\n    columns: STColumn[],\n  ): { [key: string]: string } {\n    let ret: { [key: string]: string } = {};\n    const sortList = this.getValidSort(columns);\n    if (!multiSort && sortList.length === 0) return ret;\n\n    if (multiSort) {\n      const ms = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        ...multiSort,\n      };\n\n      ret = {\n        [ms.key]: sortList\n          .sort((a, b) => a.tick - b.tick)\n          .map(item => item.key + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default))\n          .join(ms.separator),\n      };\n      if (multiSort.keepEmptyKey === false && ret[ms.key].length === 0) {\n        ret = {};\n      }\n    } else {\n      const mapData = sortList[0];\n      let sortFiled = mapData.key;\n      let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n      if (singleSort) {\n        sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n        sortFiled = singleSort.key || 'sort';\n      }\n      ret[sortFiled as string] = sortValue as string;\n    }\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter) {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: {} = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res = {};\n    columns.forEach((col, index) => {\n      res[col.key ? col.key : index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currentyPipe.transform(res.value) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\nimport { STColumn, STExportOptions } from './table.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      switch (col.type) {\n        case 'currency':\n          ret.t = 'n';\n          break;\n        case 'date':\n          ret.t = 'd';\n          break;\n        case 'yn':\n          ret.v = ret.v === col.ynTruth ? col.ynYes || 'æ¯' : col.ynNo || 'å¦';\n          break;\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: {} } = {};\n    const sheet = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt._c!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const cc = colData.length;\n    const dc = opt._d!.length;\n\n    // column\n    for (let i = 0; i < cc; i++) {\n      const tit = colData[i].title;\n      sheet[`${String.fromCharCode(i + 65)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dc; i++) {\n      for (let j = 0; j < cc; j++) {\n        sheet[`${String.fromCharCode(j + 65)}${i + 2}`] = this._stGet(opt._d![i], colData[j], i);\n      }\n    }\n\n    if (cc > 0 && dc > 0) {\n      sheet['!ref'] = `A1:${String.fromCharCode(cc + 65 - 1)}${dc + 1}`;\n    }\n\n    return sheets;\n  }\n\n  export(opt: STExportOptions) {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport { deepMerge, deepMergeKey, toBoolean, updateHostClass, InputBoolean, InputNumber } from '@delon/util';\nimport { of, Observable, Subject, from, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { STColumnSource } from './table-column-source';\nimport { STDataSource, STDataSourceResult, STDataSourceOptions } from './table-data-source';\nimport { STExport } from './table-export';\nimport { STRowSource } from './table-row.directive';\nimport { STConfig } from './table.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n  STResetColumnsOption,\n} from './table.interfaces';\nimport { NzTableComponent } from 'ng-zorro-antd/table';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './table.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, CNCurrencyPipe, DatePipe, YNPipe, DecimalPipe],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private clonePage: STPage;\n  private copyCog: STConfig;\n  locale: LocaleData = {};\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _columns: STColumn[] = [];\n  @ViewChild('table', { static: false }) orgTable: NzTableComponent;\n\n  /** è¯·æ±ä½éç½® */\n  @Input()\n  get req() {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMerge({}, this._req, this.cog.req, value);\n  }\n  /** è¿åä½éç½® */\n  @Input()\n  get res() {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = deepMergeKey({}, true, this.cog.res, value);\n    const reName = item.reName;\n    if (!Array.isArray(reName.list)) reName.list = reName.list.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total.split('.');\n    this._res = item;\n  }\n  /** åé¡µå¨éç½® */\n  @Input()\n  get page() {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this.clonePage = value;\n    const item = deepMergeKey({}, true, new STConfig().page, this.cog.page, value);\n    const { total } = item;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n    this._page = item;\n  }\n  /** æ¯å¦å¤æåºï¼å½ `sort` å¤ä¸ªç¸åå¼æ¶èªå¨åå¹¶ï¼å»ºè®®åç«¯æ¯ææ¶ä½¿ç¨ */\n  @Input()\n  get multiSort() {\n    return this._multiSort;\n  }\n  set multiSort(value: any) {\n    if (typeof value === 'boolean' && !toBoolean(value)) {\n      this._multiSort = null;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { type: 'default', strictBehavior: 'truncate', ...value };\n  }\n  get widthMode() {\n    return this._widthMode;\n  }\n\n  private get routerState() {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  @Input() data: string | STData[] | Observable<STData[]>;\n  private _req: STReq;\n  private _res: STRes;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  private _page: STPage;\n  _loading = false;\n  /** æ¯å¦æ¾ç¤ºLoading */\n  @Input() loading: boolean | null = null;\n  /** å»¶è¿æ¾ç¤ºå è½½ææçæ¶é´ï¼é²æ­¢éªçï¼ */\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  /** æ¯å¦æ¾ç¤ºè¾¹æ¡ */\n  @Input() @InputBoolean() bordered = false;\n  /** tableå¤§å° */\n  @Input() size: 'small' | 'middle' | 'default';\n  /** çºµåæ¯ææ»å¨ï¼ä¹å¯ç¨äºæå®æ»å¨åºåçé«åº¦ï¼`{ y: '300px', x: '300px' }` */\n  @Input() scroll: { y?: string; x?: string };\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  /**\n   * åæåºè§å\n   * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n   * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n   */\n  @Input() singleSort: STSingleSort | null = null;\n  private _multiSort: STMultiSort | null;\n  @Input() rowClassName: STRowClassName;\n  private _widthMode: STWidthMode;\n  /** `header` æ é¢ */\n  @Input() header: string | TemplateRef<void>;\n  /** `footer` åºé¨ */\n  @Input() footer: string | TemplateRef<void>;\n  /** é¢å¤ `body` é¡¶é¨åå®¹ */\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  /** é¢å¤ `body` åå®¹ */\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  /** `expand` å¯å±å¼ï¼å½æ°æ®æºä¸­åæ¬ `expand` è¡¨ç¤ºå±å¼ç¶æ */\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() widthConfig: string[];\n  /** è¡åå»å¤å°æ¶é¿ä¹ç±»ä¸ºåå»ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`200` */\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  /** è¯·æ±å¼å¸¸æ¶åè° */\n  @Output() readonly error = new EventEmitter<STError>();\n  /**\n   * ååæ¶åè°ï¼åæ¬ï¼`pi`ã`ps`ã`checkbox`ã`radio`ã`sort`ã`filter`ã`click`ã`dblClick` åå¨\n   */\n  @Output() readonly change = new EventEmitter<STChange>();\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private rowClickCount = 0;\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private cog: STConfig,\n    private router: Router,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n  ) {\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.page = this.clonePage;\n        this.cd();\n      }\n    });\n\n    this.copyCog = deepMergeKey(new STConfig(), true, cog);\n    delete this.copyCog.multiSort;\n    Object.assign(this, this.copyCog);\n    if (cog.multiSort && cog.multiSort.global !== false) {\n      this.multiSort = { ...cog.multiSort };\n    }\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  cd() {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]) {\n    return this.totalTpl\n      ? this.totalTpl\n          .replace('{{total}}', total)\n          .replace('{{range[0]}}', range[0])\n          .replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  isTruncate(column: STColumn): boolean {\n    return !!column.width && this.widthMode.strictBehavior === 'truncate' && column.type !== 'img';\n  }\n\n  columnClass(column: STColumn): string | null {\n    return column.className || (this.isTruncate(column) ? 'text-truncate' : null);\n  }\n\n  private changeEmit(type: STChangeType, data?: any) {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * è·åè¿æ»¤åæææ°æ®\n   * - æ¬å°æ°æ®ï¼åå«æåºãè¿æ»¤åä¸åé¡µæ°æ®\n   * - è¿ç¨æ°æ®ï¼ä¸ä¼ é `pi`ã`ps` ä¸¤ä¸ªåæ°\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => rejectPromise(error),\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** æ¸ç©ºæææ°æ® */\n  clear(cleanStatus = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** æ¸ç©ºææç¶æ */\n  clearStatus(): this {\n    return this.clearCheck()\n      .clearRadio()\n      .clearFilter()\n      .clearSort();\n  }\n\n  /**\n   * æ ¹æ®é¡µç éæ°å è½½æ°æ®\n   *\n   * @param pi æå®å½åé¡µç ï¼é»è®¤ï¼`1`\n   * @param extraParams éæ°æå® `extraParams` å¼\n   * @param options éé¡¹\n   */\n  load(pi = 1, extraParams?: {}, options?: STLoadOptions) {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this._req.params = options && options.merge ? { ...this._req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi');\n    return this;\n  }\n\n  /**\n   * éæ°å·æ°å½åé¡µ\n   * @param extraParams éæ°æå® `extraParams` å¼\n   */\n  reload(extraParams?: {}, options?: STLoadOptions) {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * éç½®ä¸éæ°è®¾ç½® `pi` ä¸º `1`ï¼åå«ä»¥ä¸å¼ï¼\n   * - `check` æ°æ®\n   * - `radio` æ°æ®\n   * - `sort` æ°æ®\n   * - `fileter` æ°æ®\n   *\n   * @param extraParams éæ°æå® `extraParams` å¼\n   */\n  reset(extraParams?: {}, options?: STLoadOptions) {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop() {\n    if (!this.page.toTop) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      el.querySelector('.ant-table-body')!.scrollTo(0, 0);\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps') {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop());\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn) {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData) {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number) {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData): void {\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number) {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point] = { text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * ```\n   */\n  setRow(index: number, item: STData): this {\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: STColumn, idx: number, value: any) {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort() {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn) {\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: STColumn) {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: STColumn, item: STColumnFilterMenu, checked: boolean) {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: STColumn) {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter() {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  // #endregion\n\n  // #region checkbox\n\n  /** æ¸é¤ææ `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean) {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** æ¸é¤ææ `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event) {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.copyCog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.copyCog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any) {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton) {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * å¯¼åºå½åé¡µï¼ç¡®ä¿å·²ç»æ³¨å `XlsxModule`\n   * @param newData éæ°æå®æ°æ®ï¼è¥ä¸º `true` è¡¨ç¤ºä½¿ç¨ `filteredData` æ°æ®\n   * @param opt é¢å¤åæ°\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions) {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        _d: res,\n        _c: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  get cdkVirtualScrollViewport() {\n    return this.orgTable.cdkVirtualScrollViewport;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    this.refreshColumns();\n    if (options.emitReload === true) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    this._columns = this.columnSource.process(this.columns);\n    return this;\n  }\n\n  private setClass() {\n    const { type, strictBehavior } = this.widthMode;\n    updateHostClass(this.el.nativeElement, this.renderer, {\n      [`st`]: true,\n      [`st__p-${this.page.placement}`]: this.page.placement,\n      [`st__width-${type}`]: true,\n      [`st__width-strict-${strictBehavior}`]: type === 'strict',\n      [`ant-table-rep`]: this.responsive,\n      [`ant-table-rep__hide-header-footer`]: this.responsiveHideHeaderFooter,\n    });\n  }\n\n  ngAfterViewInit() {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n    this.setClass();\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { STRowDirective } from './table-row.directive';\nimport { STComponent } from './table.component';\n\nconst COMPONENTS = [STComponent, STRowDirective];\n\n@NgModule({\n  schemas: [NO_ERRORS_SCHEMA],\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonUtilModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n  ],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class STModule {}\n"],"names":["tslib_1.__values","tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,0BAaC;;;;;;;;IAPC,2BAA4B;;;;;;;IAM5B,qCAAqC;;;;;AAGvC,mCAQC;;;IAPC,kCAAY;;IACZ,kCAAY;;IACZ,uCAAqB;;;;;IAIrB,0CAAqB;;;;;AAGvB,oBAmCC;;;;;;;;IA7BC,qBAAuB;;;;;;IAKvB,uBAAa;;;;;IAEb,uBAAgB;;;;;IAEhB,qBAAW;;;;;IAEX,wBAAc;;;;;;IAKd,uBAAyB;;;;;IAIzB,0BAAoB;;;;;IAIpB,yBAAmB;;;;;IAInB,wBAAiE;;;;;AAGnE,+BAgBC;;;IAfC,gCAAW;;IACX,mCAIE;;IACF,kCAIE;;IACF,mCAAyC;;IACzC,0CAAyB;;IACzB,wCAAwD;;IACxD,2CAA0B;;;;;AAG5B,4BAGC;;;;;;IADC,8BAAgB;;;;;AAGlB,oBAUC;;;;;;;IALC,uBAAyB;;;;;IAIzB,wBAAsD;;;;;AAGxD,qBAoDC;;;;;;;;IA9CC,uBAAgB;;;;;IAIhB,6BAAsB;;;;;IAItB,0BAAqC;;;;;IAIrC,2BAAwC;;;;;IAIxC,sBAAe;;;;;IAIf,0BAAmB;;;;;IAInB,2BAAqB;;;;;IAIrB,iCAA0B;;;;;;;;;;IAS1B,uBAAyB;;;;;IAIzB,uBAAgB;;;;;IAIhB,6BAAqB;;;;;;AAMvB,qBAmBC;;;;;;IAfC,yBAAkB;;;;;IAIlB,0BAAmB;;;;;IAInB,wBAAiB;;;;;IAIjB,4BAAqB;;;;;;;AAQvB,uBAsJC;;;;;;IAlJC,uBAAa;;;;;IAIb,yBAA+B;;;;;;;;IAO/B,yBAAiC;;;;;;;;;;;;;;;;IAejC,wBAA8G;;;;;IAI9G,yBAAwD;;;;;IAIxD,2BAA2B;;;;;;;;;IAQ3B,0BAAgB;;;;;;;;;IAQhB,+BAAqB;;;;;;;IAMrB,yBAAwB;;;;;;;IAMxB,wBAAoC;;;;;IAIpC,0BAAwB;;;;;IAIxB,0BAAgE;;;;;IAIhE,8BAAiC;;;;;;;;;IAQjC,6BAAmB;;;;;IAInB,2BAAiB;;;;;IAIjB,gCAAsB;;;;;IAItB,8BAAoB;;;;;IAIpB,sBAAgB;;;;;IAIhB,4BAAmB;;;;;IAInB,uBAAU;;;;;IAEV,2BAAiB;;;;;;;;IAOjB,yBAAyB;;;;;IAIzB,yBAA6B;;;;;IAI7B,uBAAyB;;;;;;;IAMzB,2BAA0E;;;;;;;IAM1E,uBAAkC;;;;;IAKlC,+BAAgD;;;;;IAGhD,yBAAkB;;;;;;AAKpB,4BAsBC;;;;;;IAhBC,6BAAc;;;;;IAKd,6BAAc;;;;;IAKd,iCAAkB;;;;;IAKlB,qCAAsB;;;;;;AAOxB,4BAWC;;;IAVC,6BAA0C;;;;;IAI1C,+BAAgB;;;;;;IAKhB,iCAAmB;;;;;AAGrB,mCAGC;;;;AAED,kCAGC;;;IAFC,oCAAc;;IACd,mCAAc;;;;;AAGhB,2BAsBC;;;;;;IAlBC,+BAAsC;;;;;;IAKtC,+BAAoD;;;;;;;IAMpD,2BAAoB;;;;;;;IAMpB,8BAA+C;;;;;AAGjD,wBAKC;;;;;;IADC,4BAAkB;;;;;;AAGpB,6BAiDC;;;;;;;;IA3CC,8BAA6B;;;;;;IAK7B,+BAA6B;;;;;IAI7B,4BAAsE;;;;;IAItE,iCAAkB;;;;;;;IAMlB,8BAAuB;;;;;IAIvB,qCAAqB;;;;;IAIrB,mCAAmB;;;;;IAInB,kCAAmB;;;;;;IAKnB,6BAAoB;;;;;;;IAMpB,gCAA2D;;;;;AAG7D,iCAoBC;;;;;;;IAfC,kCAAc;;;;;IAId,mCAAY;;;;;IAIZ,qCAAkB;;;;;IAIlB,iCAAU;;;;;;AAKZ,gCAWC;;;;;;IAPC,iCAAa;;;;;IAIb,mCAAiC;;;;;IAEjC,gCAAU;;;;;;AAIZ,yBAoBC;;;;;;IAhBC,2BAAY;;;;;IAIZ,yBAAa;;;;;IAIb,wBAAY;;;;;;;;IAOZ,0BAAc;;;;;AAGhB,qBAWC;;;;;;IATC,sBAAa;;;;;IAEb,uBAAuC;;;;;IAEvC,sBAAe;;;;;IAEf,8BAAsB;;;;;IAEtB,0BAAkB;;;;;;AAMpB,6BAqEC;;;;;;IAjEC,8BAAkE;;;;;IAIlE,8BAAc;;;;;IAId,8BAAuB;;;;;;;;;;;;IAWvB,8BAA2E;;;;;;;;;;;IAU3E,+BAA2F;;;;;IAI3F,6BAA2C;;;;;IAI3C,+BAA4B;;;;;IAI5B,gCAA8B;;;;;;IAK9B,kCAA4B;;;;;IAI5B,6BAAU;;;;;;;IAMV,6BAAuE;;;;;IAIvE,qCAA8B;;IAE9B,iCAAiB;;;;;;AAKnB,+BAQC;;;IAPC,kCAAe;;;;;IAIf,+BAAU;;IACV,oCAAuB;;IACvB,iCAAa;;;;;AAKf,kCAaC;;;;;;IATC,wCAAgB;;;;;IAIhB,qCAAgC;;;;;IAIhC,yCAAoB;;;;;AAGtB,wCAWC;;;;;;IAPC,+CAAoB;;;;;IAEpB,yCAA+C;;;;;IAE/C,iDAAsC;;;;;IAEtC,0CAAgB;;;;;AAGlB,mCAiBC;;;;;;IAbC,qCAAe;;;;;IAIf,yCAAgB;;;;;IAIhB,sCAAgC;;;;;IAIhC,0CAAoB;;;;;AAGtB,yCA4BC;;;;;;IAxBC,gDAAoB;;;;;;;;;;;;;;IAapB,0CAA0C;;;;;IAI1C,4CAAiB;;;;;IAIjB,kDAAsB;;;;;IAEtB,mDAAgC;;;;;AAGlC,gCA8DC;;;;;;IA1DC,kCAAe;;;;;IAKf,oCAAsC;;;;;IAKtC,sCAYgB;;;;;IAKhB,6CAA0B;;;;;IAK1B,yCAAkB;;;;;IAKlB,uCAAoB;;;;;IAKpB,mCAAgB;;;;;IAKhB,mCAA+D;;;;;IAK/D,iCAAc;;;;;IAKd,sCAAsC;;;;;AAGxC,8BAKC;;;IAJC,6BAAY;;IACZ,6BAAY;;IACZ,+BAAc;;IACd,gCAAe;;;;;AAGjB,8BAGC;;;IAFC,gCAA0B;;IAC1B,+BAAyB;;;;;AAG3B,8BAWC;;;;;;IATC,6BAAW;;;;;IAEX,6BAAgB;;;;;IAEhB,oCAAmB;;;;;IAEnB,mCAAkB;;;;;IAElB,mCAA6B;;;;;;;;AAQ/B,2BAKC;;;;;;IAHC,2BAAa;;;;;IAEb,qCAAuB;;;;;;AAMzB,0BAmBC;;;;;;IAjBC,0BAAa;;;;;IAEb,gCAAmB;;;;;IAEnB,oCAAuB;;;;;;;IAMvB,6BAAiB;;;;;;;IAMjB,mCAAuB;;;;;;AAMzB,4BAGC;;;;AAED,iCASC;;;;;;IALC,kCAAc;;;;;IAId,mCAAmE;;;;;;AAMrE,0BAGC;;;;AAED,+BAWC;;;;;;IAPC,gCAAc;;;;;;;IAMd,iCAAgI;;;;;;AAQlI,uBAiDC;;;;;;IA7CC,wBAAmB;;;;;IAInB,sBAAW;;;;;IAIX,sBAAW;;;;;IAIX,yBAAc;;;;;IAId,0BAAkB;;;;;IAIlB,4BAAoB;;;;;IAIpB,yBAAe;;;;;IAIf,wBAAoB;;;;;IAIpB,0BAAkB;;;;;IAIlB,yBAAyB;;;;;IAIzB,4BAA4B;;;;;IAI5B,0BAAgB;;;;;;AAIlB,2BAIC;;;IAHC,6BAA6B;;IAC7B,2BAAgC;;IAChC,8BAAkB;;;;;;AAIpB,+BAIC;;;IAHC,6BAAU;;IACV,gCAAc;;IACd,iCAAe;;;;;AAGjB,sBAGC;;;IAFC,uBAAa;;IACb,wBAAY;;;;;;;;AC56Bd;IAEA;QAEU,WAAM,GAAyC,EAAE,CAAC;QAClD,SAAI,GAAyC,EAAE,CAAC;KAazD;;;;;;;IAXC,yBAAG;;;;;;IAAH,UAAI,IAAY,EAAE,IAAY,EAAE,GAAsB;QACpD,IAAI,CAAC,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;KACxD;;;;;IAED,8BAAQ;;;;IAAR,UAAS,IAAY;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;;IAED,4BAAM;;;;IAAN,UAAO,IAAY;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;;gBAfF,UAAU;;IAgBX,kBAAC;CAhBD,IAgBC;;;;;;IAdC,6BAA0D;;;;;IAC1D,2BAAwD;;AAe1D;IAQE,wBAAoB,GAAsB,EAAkB,MAAmB;QAA3D,QAAG,GAAH,GAAG,CAAmB;QAAkB,WAAM,GAAN,MAAM,CAAa;KAAI;;;;IAEnF,iCAAQ;;;IAAR;QACE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KAC/C;;gBAZF,SAAS,SAAC,EAAE,QAAQ,EAAE,UAAU,EAAE;;;;gBApBkB,WAAW;gBA4BM,WAAW,uBAAlC,IAAI;;;qBANhD,KAAK,SAAC,QAAQ;uBAGd,KAAK;;IAQR,qBAAC;CAbD,IAaC;;;IAXC,4BACW;;IAEX,8BACc;;;;;IAEF,6BAA8B;;;;;IAAE,gCAAmC;;;;;;;;AC5BjF;IAgBA;;;;QAiBE,SAAI,GAAoC,SAAS,CAAC;;;;QAIlD,eAAU,GAAa,IAAI,CAAC;;;;QAI5B,+BAA0B,GAAa,KAAK,CAAC;;;;QAE7C,QAAG,GAAW;YACZ,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE;SAC7D,CAAC;;;;QAEF,QAAG,GAAW;YACZ,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE;SAC7C,CAAC;;;;QAEF,SAAI,GAAY;YACd,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,OAAO;YAClB,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC/B,eAAe,EAAE,KAAK;YACtB,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,GAAG;SACjB,CAAC;;;;;;QAUF,eAAU,GAAyB,IAAI,CAAC;;;;QAIxC,cAAS,GAAwB,IAAI,CAAC;;;;QAItC,UAAK,GAA+B;YAClC,UAAU,EAAE,QAAQ;YACpB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ,CAAC;;;;QAIF,WAAM,GAAgC;YACpC,UAAU,EAAE,QAAQ;YACpB,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;YACZ,YAAY,EAAE,EAAE;SACjB,CAAC;;;;QAIF,QAAG,GAAuB;YACxB,KAAK,EAAE,QAAQ;SAChB,CAAC;;;;QAIF,iBAAY,GAAY,GAAG,CAAC;;;;QAY5B,YAAO,GAAY;YACjB,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,KAAK;SACZ,CAAC;;;;;QAKF,YAAO,GAAY,CAAC,CAAC;;;;QAQrB,qBAAgB,GAAa,KAAK,CAAC;;;;QAInC,oBAAe,GAAa,KAAK,CAAC;;;;QAIlC,cAAS,GAAiB;YACxB,IAAI,EAAE,SAAS;YACf,cAAc,EAAE,UAAU;SAC3B,CAAC;QACF,oBAAe,GAAI,EAAE,CAAC;QACtB,uBAAkB,GAAI,GAAG,CAAC;QAC1B,uBAAkB,GAAI,GAAG,CAAC;;;;QAK1B,gBAAW,GAAqB,MAAM,CAAC;KACxC;;gBA7IA,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;mBAhBlC;CAgBA,IA6IC;;;;;;IAxIC,sBAAY;;;;;IAIZ,sBAAY;;;;;IAIZ,4BAAmB;;;;;IAInB,wBAAkD;;;;;IAIlD,8BAA4B;;;;;IAI5B,8CAA6C;;;;;IAE7C,uBAME;;;;;IAEF,uBAEE;;;;;IAEF,wBAYE;;;;;IAIF,8BAAmD;;;;;;;IAMnD,8BAAwC;;;;;IAIxC,6BAAsC;;;;;IAItC,yBAIE;;;;;IAIF,0BAKE;;;;;IAIF,uBAEE;;;;;IAIF,gCAA4B;;;;;IAI5B,qCAA2B;;;;;IAI3B,mCAAyB;;;;;IAIzB,2BAIE;;;;;;IAKF,2BAAqB;;;;;IAIrB,gCAA8B;;;;;IAI9B,oCAAmC;;;;;IAInC,mCAAkC;;;;;IAIlC,6BAGE;;IACF,mCAAsB;;IACtB,sCAA0B;;IAC1B,sCAA0B;;;;;IAK1B,+BAAuC;;;;;;;;;IChJvC,wBACU,GAAiB,EACT,SAAsB,EAClB,GAAe,EACW,OAAyB,EAC/D,GAAa;QAJb,QAAG,GAAH,GAAG,CAAc;QACT,cAAS,GAAT,SAAS,CAAa;QAClB,QAAG,GAAH,GAAG,CAAY;QACW,YAAO,GAAP,OAAO,CAAkB;QAC/D,QAAG,GAAH,GAAG,CAAU;KACnB;;;;;;;IAEI,+BAAM;;;;;;IAAd,UAAe,CAAiB,EAAE,GAAsB;QACtD,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,EAAE;YACpC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC;YACd,OAAO;SACR;;YAEG,GAAG,gBACF,GAAG,CACP;QACD,IAAI,OAAO,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;YAC7B,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;SACnB;aAAM,IAAI,OAAO,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;YACpC,GAAG,gBACE,GAAG,EACH,CAAC,CAAC,GAAG,CACT,CAAC;SACH;QAED,IAAI,OAAO,GAAG,CAAC,SAAS,KAAK,UAAU,EAAE;YACvC,GAAG,CAAC,SAAS;;;YAAG,cAAM,OAAA,KAAK,GAAA,CAAA,CAAC;SAC7B;QAED,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;KACb;;;;;;IAEO,kCAAS;;;;;IAAjB,UAAkB,IAAsB;;QACtC,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;;YACf,GAAG,GAAqB,EAAE;QAC1B,IAAA,aAA0C,EAAxC,gBAAK,EAAE,kBAAM,EAAE,YAAG,EAAE,oBAAoB;;YAEhD,KAAmB,IAAA,SAAAA,SAAA,IAAI,CAAA,0BAAA,4CAAE;gBAApB,IAAM,IAAI,iBAAA;gBACb,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACnD,SAAS;iBACV;gBAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACnD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,EAAE;wBACtD,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;wBACpD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;qBACpB;yBAAM;wBACL,IAAI,CAAC,KAAK,YAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,EAAK,KAAK,EAAK,IAAI,CAAC,KAAK,CAAE,CAAC;qBACnF;iBACF;gBAED,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC1B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE;wBACxD,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;wBACrD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;qBACpB;yBAAM;wBACL,IAAI,CAAC,MAAM,YAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,EAAK,MAAM,EAAK,IAAI,CAAC,MAAM,CAAE,CAAC;qBACtF;iBACF;gBAED,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,OAAO,IAAI,CAAC,GAAG,KAAK,WAAW,EAAE;oBAC1D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBACjB;;gBAGD,IAAI,CAAC,MAAM,CAAC,IAAI,qBAAE,GAAG,GAAE,CAAC;gBAExB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,IAAI,gBACJ,OAAO,GACN,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EACpE,CAAC;iBACH;gBAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;;gBAG/F,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;oBAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC3C;gBAED,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChB;;;;;;;;;QACD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,GAAG,CAAC;KACZ;;;;;;IAEO,oCAAW;;;;;IAAnB,UAAoB,IAAsB;;;YACxC,KAAmB,IAAA,SAAAA,SAAA,IAAI,CAAA,0BAAA,4CAAE;gBAApB,IAAM,IAAI,iBAAA;gBACb,IAAI,CAAC,IAAI,CAAC,GAAG;oBAAE,IAAI,CAAC,GAAG;;;oBAAG,cAAM,OAAA,IAAI,GAAA,CAAA,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;gBAC5D,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;iBACpB;aACF;;;;;;;;;KACF;;;;;;IAEO,oCAAW;;;;;IAAnB,UAAoB,IAAgB;;YAC5B,WAAW;;;;;QAAG,UAAC,CAAS,EAAE,CAAW,IAAK,OAAA,CAAC,GAAG,CAAC,mBAAA,CAAC,CAAC,KAAK,GAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAA,CAAA;;QAE1F,IAAI;aACD,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,IAAI,CAAC,CAAC,KAAK,GAAA,EAAC;aACrD,OAAO;;;;;QAAC,UAAC,IAAI,EAAE,GAAG,IAAK,QAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,IAAI,IAAC,EAAC,CAAC;;QAE3F,IAAI;aACD,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO,IAAI,CAAC,CAAC,KAAK,GAAA,EAAC;aACtD,OAAO,EAAE;aACT,OAAO;;;;;QAAC,UAAC,IAAI,EAAE,GAAG,IAAK,QAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAC,EAAC,CAAC;KAC3G;;;;;;IAEO,mCAAU;;;;;IAAlB,UAAmB,IAAc;;YACzB,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAChC,GAAG,CAAC,MAAM,gBACL,IAAI,CAAC,GAAG,CAAC,UAAU,EACnB,GAAG,CAAC,MAAM,CACd,CAAC;QACF,OAAO,GAAG,CAAC;KACZ;;;;;;IAEO,kCAAS;;;;;IAAjB,UAAkB,IAAc;QAC9B,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;YACpC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;SAC3B;;YAEG,GAAG,GAAc,EAAE;QAEvB,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YACjC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;SACrB;aAAM,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YACzC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;SACjB;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YACZ,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzB;QAED,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QAEnB,OAAO,GAAG,CAAC;KACZ;;;;;;IAEO,qCAAY;;;;;IAApB,UAAqB,IAAc;QAAnC,iBAiDC;QAhDC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACvB,OAAO,IAAI,CAAC;SACb;;YAEG,GAAG,GAA0B,IAAI,CAAC,MAAM;QAC5C,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC;;YAE7B,IAAI,GAAG,QAAQ;;YACf,SAAS,GAAG,MAAM;QACtB,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE;YAC1B,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,mBAAA,GAAG,CAAC,KAAK,GAAE,MAAM,KAAK,CAAC,EAAE;gBAChD,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;aAC7B;YACD,IAAI,GAAG,QAAQ,CAAC;YAChB,SAAS,GAAG,SAAS,CAAC;SACvB;QAED,IAAI,mBAAA,GAAG,CAAC,KAAK,GAAE,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,GAAG,CAAC,QAAQ,KAAK,WAAW,EAAE;YACvC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB;QAED,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAChE,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;QAC1D,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC;QACnC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;;YAEtB,QAAQ,sBAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,EAAU;QAC3D,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;YAChC,GAAG,CAAC,IAAI,mCAAQ,QAAQ,IAAE,IAAI,EAAE,GAAG,CAAC,IAAI,KAAY,CAAC;SACtD;aAAM;YACL,GAAG,CAAC,IAAI,gBAAQ,QAAQ,EAAK,GAAG,CAAC,IAAI,CAAE,CAAC;SACzC;QAED,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAExB,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,GAAG,CAAC,KAAK,GAAG,mBAAA,GAAG,CAAC,KAAK,GAAE,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;SACzD;QAED,IAAI,mBAAA,GAAG,CAAC,KAAK,GAAE,MAAM,IAAI,CAAC,EAAE;YAC1B,GAAG,GAAG,IAAI,CAAC;SACZ;QAED,OAAO,GAAG,CAAC;KACZ;;;;;;IAEO,sCAAa;;;;;IAArB,UAAsB,IAAc;QAClC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAChE;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpD;KACF;;;;;IAED,gCAAO;;;;IAAP,UAAQ,IAAgB;;QAAxB,iBA4GC;QA3GC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAEtF,IAAA,0BAAO;;YACX,aAAa,GAAG,CAAC;;YACjB,UAAU,GAAG,CAAC;;YACd,KAAK,GAAG,CAAC;;YACP,OAAO,GAAe,EAAE;;YACxB,YAAY,sBAAG,QAAQ,CAAC,IAAI,CAAC,EAAc;;YACjD,KAAmB,IAAA,iBAAAA,SAAA,YAAY,CAAA,0CAAA,oEAAE;gBAA5B,IAAM,IAAI,yBAAA;gBACb,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBAC/B,SAAS;iBACV;gBACD,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACnD,SAAS;iBACV;;gBAED,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBACpC;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACtC;;;oBAIK,GAAG,GAAG,CAAC,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE;gBACtF,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;oBAC5B,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACzC;gBACD,IAAI,GAAG,CAAC,IAAI,EAAE;oBACZ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;;;gBAKjB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;iBAC9D;;gBAED,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;oBAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;iBACtB;gBACD,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;oBAC5B,EAAE,aAAa,CAAC;oBAChB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;wBACf,IAAI,CAAC,KAAK,GAAG,CAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,QAAI,CAAC;qBAC1D;iBACF;gBACD,IAAI,IAAI,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;iBACpE;;gBAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;oBACzB,EAAE,UAAU,CAAC;oBACb,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;wBACf,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;qBACrB;iBACF;;gBAED,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,CAAC,EAAE,cAAK,KAAK,EAAE,IAAI,IAAK,IAAI,CAAC,EAAE,CAAE,CAAC;iBACvC;gBACD,IACE,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,UAAU;qBACxD,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;qBAC5C,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,EACzC;oBACA,oBAAC,IAAI,IAAS,IAAI,GAAG,EAAE,CAAC;iBACzB;;gBAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACnB,IAAI,CAAC,SAAS,GAAG;wBACf,MAAM,EAAE,YAAY;wBACpB,QAAQ,EAAE,YAAY;wBACtB,IAAI,EAAE,aAAa;qBACpB,oBAAC,IAAI,CAAC,IAAI,GAAE,CAAC;iBACf;;gBAED,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAM,IAAI,CAAC,KAAK,OAAI,CAAC;iBAChC;;gBAGD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;gBAEnC,IAAI,CAAC,MAAM,sBAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAkB,CAAC;;gBAExD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,oBAAC,IAAI,CAAC,OAAO,GAAE,CAAC;;gBAE7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAEzB,IAAI,CAAC,OAAO,GAAG,KAAK,EAAE,CAAC;gBACvB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpB;;;;;;;;;QACD,IAAI,aAAa,GAAG,CAAC,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QACD,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE1B,OAAO,OAAO,CAAC;KAChB;;;;;IAED,yCAAgB;;;;IAAhB,UAAiB,OAAmB;QAApC,iBAEC;QADC,OAAO,CAAC,OAAO;;;;QAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;KAC7C;;;;;;;IAED,sCAAa;;;;;;IAAb,UAAc,MAAsB;QAClC,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;YAC7B,MAAM,CAAC,OAAO,GAAG,mBAAA,MAAM,CAAC,KAAK,GAAE,SAAS;;;;YAAC,UAAA,CAAC,8BAAI,CAAC,CAAC,OAAO,KAAC,EAAC,KAAK,CAAC,CAAC,CAAC;SAClE;aAAM;YACL,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,mBAAA,MAAM,CAAC,KAAK,GAAE,CAAC,CAAC,CAAC,KAAK,CAAC;SAC3C;QACD,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,oCAAW;;;;;;IAAX,UAAY,GAAa;;YACjB,CAAC,sBAAG,GAAG,CAAC,MAAM,EAAC;QACrB,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE;YACxB,mBAAA,CAAC,CAAC,KAAK,GAAE,OAAO;;;;YAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,OAAO,GAAG,KAAK,IAAC,EAAC,CAAC;SAC5C;aAAM;YACL,mBAAA,CAAC,CAAC,KAAK,GAAE,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;SAC/B;QACD,0BAAO,IAAI,GAAC;KACb;;gBAlVF,UAAU;;;;gBAVF,YAAY;gBAMZ,WAAW,uBAQf,IAAI;gBAZA,UAAU,uBAad,QAAQ;gDACR,QAAQ,YAAI,MAAM,SAAC,gBAAgB;gBAT/B,QAAQ;;IAsVjB,qBAAC;CAnVD,IAmVC;;;;;;IAhVG,6BAAyB;;;;;IACzB,mCAAsC;;;;;IACtC,6BAAmC;;;;;IACnC,iCAAuE;;;;;IACvE,6BAAqB;;;;;;;;;;;ACUzB,kCAaC;;;IAZC,iCAAW;;IACX,iCAAW;;IACX,wCAAmB;;IACnB,mCAA+C;;IAC/C,oCAAc;;IACd,kCAAW;;IACX,kCAAW;;IACX,mCAAa;;IACb,sCAAoB;;IACpB,yCAAiC;;IACjC,wCAA+B;;IAC/B,2CAA8B;;;;;AAGhC,iCAaC;;;;;;IAXC,sCAAkB;;;;;IAElB,gCAAW;;;;;IAEX,gCAAW;;;;;IAEX,mCAAc;;;;;IAEd,kCAAe;;;;;IAEf,yCAAkC;;AAGpC;IAIE,sBACU,IAAiB,EACT,YAA4B,EAC5B,QAAkB,EAClB,MAAc,EACd,UAAuB,EAC/B,GAAiB;QALjB,SAAI,GAAJ,IAAI,CAAa;QACT,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAa;QAC/B,QAAG,GAAH,GAAG,CAAc;QARnB,aAAQ,GAAG,CAAC,CAAC;KASjB;;;;;IAEJ,8BAAO;;;;IAAP,UAAQ,OAA4B;QAApC,iBA6GC;;YA5GK,KAA2B;;YAC3B,QAAQ,GAAG,KAAK;QACZ,IAAA,mBAAI,EAAE,iBAAG,EAAE,qBAAK,EAAE,mBAAI,EAAE,eAAE,EAAE,eAAE,EAAE,6BAAS,EAAE,yBAAO;;YACtD,QAAgB;;YAChB,KAAa;;YACb,OAAiB;;YACjB,KAAa;;YACb,OAAY;;YACZ,QAAQ,GAAG,IAAI,CAAC,IAAI;QAExB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,QAAQ,GAAG,IAAI,CAAC;YAChB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CACxC,GAAG;;;;YAAC,UAAA,MAAM;gBACR,OAAO,GAAG,MAAM,CAAC;;oBACb,GAAa;gBACjB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACzB,GAAG,GAAG,MAAM,CAAC;oBACb,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;oBACtB,KAAK,GAAG,QAAQ,CAAC;oBACjB,QAAQ,GAAG,KAAK,CAAC;iBAClB;qBAAM;;oBAEL,GAAG,GAAG,OAAO,CAAC,MAAM,qBAAE,mBAAA,GAAG,CAAC,MAAM,GAAE,IAAI,IAAc,EAAE,CAAC,CAAC;oBACxD,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACtC,GAAG,GAAG,EAAE,CAAC;qBACV;;;wBAEK,WAAW,GAAG,mBAAA,GAAG,CAAC,MAAM,GAAE,KAAK,IAAI,OAAO,CAAC,MAAM,qBAAE,mBAAA,GAAG,CAAC,MAAM,GAAE,KAAK,IAAc,IAAI,CAAC;oBAC7F,QAAQ,GAAG,WAAW,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;iBAC5D;gBACD,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;aACtB,EAAC,CACH,CAAC;SACH;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC9B,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;SAClB;aAAM;;YAEL,KAAK,GAAG,IAAI,CAAC;SACd;QAED,IAAI,CAAC,QAAQ,EAAE;YACb,KAAK,GAAG,KAAK,CAAC,IAAI;;YAEhB,GAAG;;;;YAAC,UAAC,MAAgB;gBACnB,OAAO,GAAG,MAAM,CAAC;;oBACb,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;;oBAC3B,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBAC1C,IAAI,QAAQ,EAAE;oBACZ,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACxC;gBACD,OAAO,UAAU,CAAC;aACnB,EAAC;;YAEF,GAAG;;;;YAAC,UAAC,MAAgB;gBACnB,OAAO;qBACJ,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,GAAA,EAAC;qBACrB,OAAO;;;;gBAAC,UAAA,CAAC;;wBACF,MAAM,sBAAG,CAAC,CAAC,MAAM,EAAC;;wBAClB,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC3C,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;wBAAE,OAAO;;wBAC1B,QAAQ,GAAG,MAAM,CAAC,EAAE;oBAC1B,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;wBAClC,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;wBAC5D,OAAO;qBACR;oBACD,MAAM,GAAG,MAAM,CAAC,MAAM;;;;oBAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,GAAA,EAAC,GAAA,EAAC,CAAC;iBACzE,EAAC,CAAC;gBACL,OAAO,MAAM,CAAC;aACf,EAAC;;YAEF,GAAG;;;;YAAC,UAAC,MAAgB;gBACnB,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,EAAE;;wBACrB,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;oBAClD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,YAAY,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;oBAC3D,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;oBACzB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;wBACtB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC;qBACnD;iBACF;gBACD,OAAO,MAAM,CAAC;aACf,EAAC,CACH,CAAC;SACH;;QAGD,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU,EAAE;YACrC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG;;;;YAAC,UAAA,MAAM,IAAI,OAAA,mBAAA,GAAG,CAAC,OAAO,GAAE,MAAM,EAAE,OAAO,CAAC,GAAA,EAAC,CAAC,CAAC;SAClE;QAED,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG;;;;QAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,CAAC,GAAA,EAAC,CAAC,CAAC;QAE9G,OAAO,KAAK,CAAC,IAAI,CACf,GAAG;;;;QAAC,UAAA,MAAM;YACR,OAAO,GAAG,MAAM,CAAC;;gBACX,SAAS,GAAG,QAAQ,IAAI,KAAK;;gBAC7B,MAAM,GAAG,KAAK,IAAI,EAAE;YAE1B,0BAAO;gBACL,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;gBAC3D,QAAQ,EAAE,OAAO,QAAQ,KAAK,WAAW,GAAG,SAAS,GAAG,MAAM,GAAG,QAAQ;aAC1E,GAAuB;SACzB,EAAC,CACH,CAAC;KACH;;;;;;;;IAEO,0BAAG;;;;;;;IAAX,UAAY,IAAY,EAAE,GAAa,EAAE,GAAW;QAClD,IAAI,GAAG,CAAC,MAAM,EAAE;;gBACR,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE;YAClD,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACzC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;aAChG;YACD,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;SAC9D;;YAEK,KAAK,GAAG,OAAO,CAAC,IAAI,qBAAE,GAAG,CAAC,KAAK,IAAc,GAAG,CAAC,OAAO,CAAC;;YAE3D,IAAI,GAAG,KAAK;;YACZ,KAAyB;QAC7B,QAAQ,GAAG,CAAC,IAAI;YACd,KAAK,IAAI;gBACP,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvC,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,GAAG,KAAK,GAAG,gBAAa,KAAK,sBAAgB,GAAG,EAAE,CAAC;gBACvD,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1D,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC1C,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,GAAG,KAAK,KAAK,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC5F,MAAM;YACR,KAAK,IAAI;gBACP,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,mBAAA,GAAG,CAAC,EAAE,GAAE,KAAK,qBAAE,mBAAA,GAAG,CAAC,EAAE,GAAE,GAAG,uBAAG,mBAAA,GAAG,CAAC,EAAE,GAAE,EAAE,uBAAG,mBAAA,GAAG,CAAC,EAAE,GAAE,IAAI,IAAG,KAAK,CAAC,CAAC;gBACvG,MAAM;YACR,KAAK,KAAK,CAAC;YACX,KAAK,OAAO;;oBACJ,IAAI,GAAG,GAAG,CAAC,IAAI,KAAK,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK;gBACrD,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;;wBAChB,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;oBACrB,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;iBACxB;qBAAM;oBACL,IAAI,GAAG,EAAE,CAAC;iBACX;gBACD,MAAM;SACT;QACD,IAAI,IAAI,IAAI,IAAI;YAAE,IAAI,GAAG,EAAE,CAAC;QAC5B,OAAO,EAAE,IAAI,MAAA,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,OAAA,EAAE,CAAC;KACnF;;;;;;;IAEO,gCAAS;;;;;;IAAjB,UAAkB,GAAW,EAAE,OAA4B;;QACjD,IAAA,iBAAG,EAAE,mBAAI,EAAE,6BAAS,EAAE,eAAE,EAAE,eAAE,EAAE,+BAAU,EAAE,6BAAS,EAAE,yBAAO;;YAC9D,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,IAAI,KAAK,EAAE,WAAW,EAAE;;YAC9C,MAAM,GAAG,EAAE;;YACT,MAAM,sBAAG,GAAG,CAAC,MAAM,EAAmB;QAC5C,IAAI,SAAS,EAAE;YACb,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;gBACvB,MAAM;oBACJ,sBAAC,MAAM,CAAC,EAAE,MAAa,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE;oBACrD,sBAAC,MAAM,CAAC,EAAE,MAAa,EAAE;uBAC1B,CAAC;aACH;iBAAM;gBACL,MAAM;oBACJ,sBAAC,MAAM,CAAC,IAAI,MAAa,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE;oBACtC,sBAAC,MAAM,CAAC,KAAK,MAAa,EAAE;uBAC7B,CAAC;aACH;SACF;QACD,MAAM,gBACD,MAAM,EACN,GAAG,CAAC,MAAM,EACV,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CACjC,CAAC;;YAEE,UAAU,GAAqB;YACjC,MAAM,QAAA;YACN,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB;QACD,IAAI,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,EAAE;YAC/C,UAAU,GAAG;gBACX,IAAI,eAAO,GAAG,CAAC,IAAI,EAAK,MAAM,CAAE;gBAChC,OAAO,EAAE,GAAG,CAAC,OAAO;aACrB,CAAC;SACH;QACD,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU,EAAE;YACrC,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;KACnD;;;;;IAED,mCAAY;;;;IAAZ,UAAa,OAAiF;QAA9F,iBASC;QARS,IAAA,uBAAM,EAAE,yBAAO,EAAE,mCAAY;gCAC5B,CAAC,EAAM,GAAG;YACjB,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAA,EAAC,CAAC;YAChE,IAAI,YAAY,EAAE;gBAChB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACtD;;QAJH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;oBAAxC,CAAC,EAAM,GAAG;SAKlB;QACD,OAAO,MAAM,CAAC;KACf;;;;;;;IAED,iCAAU;;;;;;IAAV,UAAW,IAAY,EAAE,GAAa,EAAE,GAAW;QACjD,OAAO,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,mBAAA,GAAG,CAAC,OAAO,KAAI,GAAG,CAAC;KAC7F;;;;;;;;IAIO,mCAAY;;;;;;;IAApB,UAAqB,OAAmB;QACtC,OAAO,OAAO,CAAC,MAAM;;;;QAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;QAAC,UAAA,IAAI,8BAAI,IAAI,CAAC,KAAK,KAAC,EAAC,CAAC;KAChH;;;;;;IAEO,kCAAW;;;;;IAAnB,UAAoB,OAAmB;;YAC/B,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC3C,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,OAAO;SACR;;YACK,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC5B,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;YAC7B,OAAO;SACR;QACD,IAAI,OAAO,QAAQ,CAAC,OAAO,KAAK,UAAU,EAAE;YAC1C,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;YAC/D,OAAO;SACR;QAED;;;;;QAAO,UAAC,CAAS,EAAE,CAAS;;gBACpB,MAAM,GAAG,mBAAA,QAAQ,CAAC,OAAO,GAAE,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,OAAO,QAAQ,CAAC,OAAO,KAAK,SAAS,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;aAC1D;YACD,OAAO,CAAC,CAAC;SACV,EAAC;KACH;IAED,sBAAI,sCAAY;;;;QAAhB;YACE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;SACxB;;;OAAA;;;;;;;IAED,oCAAa;;;;;;IAAb,UACE,UAA2C,EAC3C,SAAyC,EACzC,OAAmB;;;YAEf,GAAG,GAA8B,EAAE;;YACjC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,GAAG,CAAC;QAEpD,IAAI,SAAS,EAAE;;gBACP,IAAE,cACN,GAAG,EAAE,MAAM,EACX,SAAS,EAAE,GAAG,EACd,aAAa,EAAE,GAAG,IACf,SAAS,CACb;YAED,GAAG;gBACD,GAAC,IAAE,CAAC,GAAG,IAAG,QAAQ;qBACf,IAAI;;;;;gBAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAA,EAAC;qBAC/B,GAAG;;;;gBAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,GAAG,GAAG,IAAE,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,qBAAE,IAAI,CAAC,OAAO,GAAE,IAAI,IAAI,CAAC,OAAO,CAAC,GAAA,EAAC;qBAC/F,IAAI,CAAC,IAAE,CAAC,SAAS,CAAC;mBACtB,CAAC;YACF,IAAI,SAAS,CAAC,YAAY,KAAK,KAAK,IAAI,GAAG,CAAC,IAAE,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChE,GAAG,GAAG,EAAE,CAAC;aACV;SACF;aAAM;;gBACC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;;gBACvB,SAAS,GAAG,OAAO,CAAC,GAAG;;gBACvB,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE,qBAAE,OAAO,CAAC,OAAO,GAAE,IAAI,OAAO,CAAC,OAAO;YAC/E,IAAI,UAAU,EAAE;gBACd,SAAS,GAAG,SAAS,IAAI,UAAU,CAAC,aAAa,IAAI,GAAG,CAAC,GAAG,SAAS,CAAC;gBACtE,SAAS,GAAG,UAAU,CAAC,GAAG,IAAI,MAAM,CAAC;aACtC;YACD,GAAG,oBAAC,SAAS,GAAW,sBAAG,SAAS,EAAU,CAAC;SAChD;QACD,OAAO,GAAG,CAAC;KACZ;;;;;;;;;;IAMO,sCAAe;;;;;;;;IAAvB,UAAwB,MAAsB;QAC5C,OAAO,MAAM,CAAC,IAAI,KAAK,SAAS,GAAG,mBAAA,MAAM,CAAC,KAAK,GAAE,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,KAAK,IAAI,GAAA,EAAC,GAAG,mBAAA,MAAM,CAAC,KAAK,GAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC9G;;;;;;IAEO,sCAAe;;;;;IAAvB,UAAwB,OAAmB;QAA3C,iBAgBC;;YAfK,GAAG,GAAG,EAAE;QACZ,OAAO;aACJ,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,GAAA,EAAC;aAClD,OAAO;;;;QAAC,UAAA,GAAG;;gBACJ,MAAM,sBAAG,GAAG,CAAC,MAAM,EAAC;;gBACpB,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;gBACvC,GAAG,GAAO,EAAE;YAChB,IAAI,MAAM,CAAC,MAAM,EAAE;gBACjB,GAAG,GAAG,mBAAA,MAAM,CAAC,MAAM,sBAAE,MAAM,CAAC,KAAK,IAAG,GAAG,CAAC,CAAC;aAC1C;iBAAM;gBACL,GAAG,oBAAC,MAAM,CAAC,GAAG,GAAE,GAAG,MAAM,CAAC,GAAG;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACvD;YACD,GAAG,gBAAQ,GAAG,EAAK,GAAG,CAAE,CAAC;SAC1B,EAAC,CAAC;QACL,OAAO,GAAG,CAAC;KACZ;;;;;;;;;;;;IAMO,qCAAc;;;;;;;;;;IAAtB,UAAuB,OAAmB,EAAE,IAAc,EAAE,OAAY;QAAxE,iBAMC;;YALO,GAAG,GAAG,EAAE;QACd,OAAO,CAAC,OAAO;;;;;QAAC,UAAC,GAAG,EAAE,KAAK;YACzB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,WAAW,IAAI,IAAI,GAAG,EAAE,GAAG,KAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SAChH,EAAC,CAAC;QACH,OAAO,GAAG,CAAC;KACZ;;;;;;;;;IAEO,qCAAc;;;;;;;;IAAtB,UAAuB,GAAa,EAAE,KAAa,EAAE,IAAc,EAAE,OAAY;;YACzE,GAAG,GAAG,GAAG,CAAC,WAAW;;YACrB,IAAI,cACR,MAAM,EAAE,CAAC,EACT,QAAQ,EAAE,SAAS,KACf,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,IAAI,qBAAE,GAAG,EAAqB,EAAE,uBAAI,GAAG,GAAkB,EAC1F;;YACG,GAAG,GAAwB,EAAE,KAAK,EAAE,CAAC,EAAE;;YACvC,QAAQ,GAAG,KAAK;QACpB,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YACnC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YACjE,QAAQ,GAAG,IAAI,CAAC;SACjB;aAAM;YACL,QAAQ,IAAI,CAAC,IAAI;gBACf,KAAK,OAAO;oBACV,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;oBACxB,MAAM;gBACR,KAAK,eAAe;oBAClB,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM;;;;;;oBAAC,UAAC,KAAK,EAAE,GAAG,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,GAAA,EAAC,CAAC,MAAM,CAAC;oBACzG,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAE,IAAI,CAAC,MAAM,GAAE,CAAC;oBACjE,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,qBAAE,IAAI,CAAC,MAAM,GAAE,CAAC;oBAC/E,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,EAAC,CAAC;oBACrD,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,EAAC,CAAC;oBACrD,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM;aACT;SACF;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,KAAK,IAAI,CAAC,EAAE;YAC1E,GAAG,CAAC,IAAI,sBAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAU,CAAC;SAC7D;aAAM;YACL,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC9B;QACD,OAAO,GAAG,CAAC;KACZ;;;;;;;IAEO,8BAAO;;;;;;IAAf,UAAgB,GAAW,EAAE,MAAc;QACzC,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAChC,OAAO,CAAC,CAAC;SACV;QACD,OAAO,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;KACxC;;;;;;;IAEO,gCAAS;;;;;;IAAjB,UAAkB,KAAa,EAAE,IAAc;QAC7C,OAAO,IAAI,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,GAAA,EAAC,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,QAAC,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,IAAC,EAAC,CAAC;KACtF;;;;;;;IAEO,6BAAM;;;;;;IAAd,UAAe,KAAa,EAAE,IAAc;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM;;;;;QAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAC,GAAE,CAAC,CAAC,CAAC;KACtF;;gBA9YF,UAAU;;;;gBAtDF,WAAW;gBAAE,cAAc,uBA4D/B,IAAI;gBA5D6B,QAAQ,uBA6DzC,IAAI;gBA7DuC,MAAM,uBA8DjD,IAAI;gBAjEA,WAAW,uBAkEf,IAAI;gBAhEA,YAAY;;IAwcrB,mBAAC;CAjZD,IAiZC;;;;;;IA/YC,gCAAqB;;;;;IAGnB,4BAAyB;;;;;IACzB,oCAA4C;;;;;IAC5C,gCAAkC;;;;;IAClC,8BAA8B;;;;;IAC9B,kCAAuC;;;;;IACvC,2BAAyB;;;;;;;;ACnE7B;IAOE,kBAAgC,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;KAAI;;;;;;;;IAEhD,yBAAM;;;;;;;IAAd,UAAe,IAAS,EAAE,GAAa,EAAE,KAAa;;YAC9C,GAAG,GAA2B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;QAErD,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SACtC;aAAM;;gBACC,GAAG,GAAG,OAAO,CAAC,IAAI,qBAAE,GAAG,CAAC,KAAK,IAAc,EAAE,CAAC;YACpD,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;YACZ,QAAQ,GAAG,CAAC,IAAI;gBACd,KAAK,UAAU;oBACb,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;oBACZ,MAAM;gBACR,KAAK,MAAM;oBACT,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;oBACZ,MAAM;gBACR,KAAK,IAAI;oBACP,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC;oBACnE,MAAM;aACT;SACF;QAED,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QAEpB,OAAO,GAAG,CAAC;KACZ;;;;;;IAEO,2BAAQ;;;;;IAAhB,UAAiB,GAAoB;;YAC7B,MAAM,GAA4B,EAAE;;YACpC,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC;;YAChD,OAAO,GAAG,mBAAA,GAAG,CAAC,EAAE,GAAE,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,GAAA,EAAC;;YACxG,EAAE,GAAG,OAAO,CAAC,MAAM;;YACnB,EAAE,GAAG,mBAAA,GAAG,CAAC,EAAE,GAAE,MAAM;;QAGzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;;gBACrB,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;YAC5B,KAAK,CAAI,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAG,CAAC,GAAG;gBACzC,CAAC,EAAE,GAAG;gBACN,CAAC,EAAE,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG;aAC5C,CAAC;SACH;;QAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC3B,KAAK,CAAC,KAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,IAAG,CAAC,GAAG,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAA,GAAG,CAAC,EAAE,GAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1F;SACF;QAED,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YACpB,KAAK,CAAC,MAAM,CAAC,GAAG,QAAM,MAAM,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAG,EAAE,GAAG,CAAC,CAAE,CAAC;SACnE;QAED,OAAO,MAAM,CAAC;KACf;;;;;IAED,yBAAM;;;;IAAN,UAAO,GAAoB;;YACnB,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YACzB,MAAM,QAAA;YACN,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,QAAQ,EAAE,GAAG,CAAC,QAAQ;SACvB,CAAC,CAAC;KACJ;;gBAnEF,UAAU;;;;gBAJF,WAAW,uBAML,QAAQ;;IAkEvB,eAAC;CApED,IAoEC;;;;;;IAlEa,2BAAwC;;;;;;;;;IC8NpD,qBACwC,OAAyB,EACvD,GAAsB,EACtB,GAAa,EACb,MAAc,EACd,EAAc,EACd,QAAmB,EACnB,SAAmB,EACnB,WAAwB,EACxB,YAA0B,EACR,GAAQ,EAC1B,YAA4B,EAC5B,UAAwB,EACxB,SAA6B;QAbvC,iBAoCC;QAlCS,QAAG,GAAH,GAAG,CAAmB;QACtB,QAAG,GAAH,GAAG,CAAU;QACb,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAY;QACd,aAAQ,GAAR,QAAQ,CAAW;QACnB,cAAS,GAAT,SAAS,CAAU;QACnB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QACR,QAAG,GAAH,GAAG,CAAK;QAC1B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,eAAU,GAAV,UAAU,CAAc;QACxB,cAAS,GAAT,SAAS,CAAoB;QAvK/B,iBAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;QAEnC,aAAQ,GAAG,EAAE,CAAC;QAGtB,WAAM,GAAe,EAAE,CAAC;QACxB,UAAK,GAAa,EAAE,CAAC;QACrB,iBAAY,GAAyB,EAAE,CAAC;QACxC,kBAAa,GAAG,IAAI,CAAC;QACrB,gBAAW,GAAG,KAAK,CAAC;QACpB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,mBAAc,GAAG,KAAK,CAAC;QACvB,aAAQ,GAAe,EAAE,CAAC;QAuEjB,YAAO,GAAe,EAAE,CAAC;QACV,OAAE,GAAG,EAAE,CAAC;QACR,OAAE,GAAG,CAAC,CAAC;QACP,UAAK,GAAG,CAAC,CAAC;QAElC,aAAQ,GAAG,KAAK,CAAC;;;;QAER,YAAO,GAAmB,IAAI,CAAC;;;;QAEhB,iBAAY,GAAG,CAAC,CAAC;;;;QAGhB,aAAQ,GAAG,KAAK,CAAC;QAKjB,kBAAa,GAAG,KAAK,CAAC;QACvB,oBAAe,GAAG,EAAE,CAAC;QACrB,uBAAkB,GAAG,GAAG,CAAC;QACzB,uBAAkB,GAAG,GAAG,CAAC;;;;;;QAMxC,eAAU,GAAwB,IAAI,CAAC;QAYvB,qBAAgB,GAAG,KAAK,CAAC;QACzB,oBAAe,GAAG,KAAK,CAAC;;;;QAMzB,iBAAY,GAAG,GAAG,CAAC;QAClB,eAAU,GAAY,IAAI,CAAC;;;;QAGjC,UAAK,GAAG,IAAI,YAAY,EAAW,CAAC;;;;QAIpC,WAAM,GAAG,IAAI,YAAY,EAAY,CAAC;QAgBjD,kBAAa,GAAG,CAAC,CAAC;QAiBxB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS;;;QAAC;YACjE,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC;gBAC3B,KAAI,CAAC,EAAE,EAAE,CAAC;aACX;SACF,EAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,KAAK,KAAK,EAAE;YACnD,IAAI,CAAC,SAAS,gBAAQ,GAAG,CAAC,SAAS,CAAE,CAAC;SACvC;QAED,OAAO,CAAC,MAAM;aACX,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAC5B,MAAM;;;QAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAA,EAAC,CACvC;aACA,SAAS;;;;;QAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,GAAA,EAAC,CAAC;KAC3C;IA9KD,sBACI,4BAAG;;;;;;QADP;YAEE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;;;;;QACD,UAAQ,KAAY;YAClB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC3D;;;OAHA;IAKD,sBACI,4BAAG;;;;;;QADP;YAEE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;;;;;QACD,UAAQ,KAAY;;gBACZ,IAAI,GAAG,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;;gBAClD,MAAM,GAAG,IAAI,CAAC,MAAM;YAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;gBAAE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;gBAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;;;OAPA;IASD,sBACI,6BAAI;;;;;;QADR;YAEE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;;;;;QACD,UAAS,KAAa;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;gBACjB,IAAI,GAAG,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;YACtE,IAAA,kBAAK;YACb,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;gBAC7C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;iBAAM,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpB;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;;;OAbA;IAeD,sBACI,kCAAS;;;;;;QADb;YAEE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;;;;;QACD,UAAc,KAAU;YACtB,IAAI,OAAO,KAAK,KAAK,SAAS,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,OAAO;aACR;YACD,IAAI,CAAC,UAAU,iBACT,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,EAAE,EAC3C,CAAC;SACH;;;OATA;IAUD,sBACI,kCAAS;;;;QAGb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;;;;;QAND,UACc,KAAkB;YAC9B,IAAI,CAAC,UAAU,cAAK,IAAI,EAAE,SAAS,EAAE,cAAc,EAAE,UAAU,IAAK,KAAK,CAAE,CAAC;SAC7E;;;OAAA;IAKD,sBAAY,oCAAW;;;;;QAAvB;YACQ,IAAA,SAAwB,EAAtB,UAAE,EAAE,UAAE,EAAE,gBAAc;YAC9B,OAAO,EAAE,EAAE,IAAA,EAAE,EAAE,IAAA,EAAE,KAAK,OAAA,EAAE,CAAC;SAC1B;;;OAAA;IA+DD,sBAAI,8BAAK;;;;;;;;QAAT;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC1B;;;OAAA;IAKD,sBAAI,6BAAI;;;;;;;;QAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;;;OAAA;;;;;;IA0CD,wBAAE;;;;;IAAF;QACE,mBAAA,IAAI,GAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,0BAAO,IAAI,GAAC;KACb;;;;;;IAED,iCAAW;;;;;IAAX,UAAY,KAAa,EAAE,KAAe;QACxC,OAAO,IAAI,CAAC,QAAQ;cAChB,IAAI,CAAC,QAAQ;iBACV,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC;iBAC3B,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iBACjC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;cACpC,EAAE,CAAC;KACR;;;;;IAED,gCAAU;;;;IAAV,UAAW,MAAgB;QACzB,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC;KAChG;;;;;IAED,iCAAW;;;;IAAX,UAAY,MAAgB;QAC1B,OAAO,MAAM,CAAC,SAAS,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,eAAe,GAAG,IAAI,CAAC,CAAC;KAC/E;;;;;;;IAEO,gCAAU;;;;;;IAAlB,UAAmB,IAAkB,EAAE,IAAU;;YACzC,GAAG,GAAa;YACpB,IAAI,MAAA;YACJ,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB;QACD,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SAClB;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACvB;IASD,sBAAI,qCAAY;;;;;;;;;;;;;;;QAAhB;YACE,OAAO,IAAI,CAAC,QAAQ,oBAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAQ,CAAC,IAAI;;;;YAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,GAAA,EAAC,CAAC;SACzE;;;OAAA;;;;;;IAEO,gCAAU;;;;;IAAlB,UAAmB,GAAY;QAC7B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SACrB;KACF;;;;;;IAEO,8BAAQ;;;;;IAAhB,UAAiB,OAA6B;QAA9C,iBA6BC;QA5BO,IAAA,SAAmF,EAAjF,UAAE,EAAE,UAAE,EAAE,cAAI,EAAE,YAAG,EAAE,YAAG,EAAE,cAAI,EAAE,gBAAK,EAAE,0BAAU,EAAE,wBAAS,EAAE,8BAAqB;QACzF,OAAO,IAAI,OAAO;;;;;QAAC,UAAC,cAAc,EAAE,aAAa;YAC/C,IAAI,KAAI,CAAC,KAAK,EAAE;gBACd,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;aAC1B;YAED,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,UAAU;iBACzB,OAAO,YACN,EAAE,IAAA;gBACF,EAAE,IAAA;gBACF,KAAK,OAAA;gBACL,IAAI,MAAA;gBACJ,GAAG,KAAA;gBACH,GAAG,KAAA;gBACH,IAAI,MAAA,EACJ,OAAO,EAAE,KAAI,CAAC,QAAQ,EACtB,UAAU,YAAA;gBACV,SAAS,WAAA;gBACT,YAAY,cAAA,EACZ,SAAS,EAAE,IAAI,IACZ,OAAO,EACV;iBACD,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;iBAClC,SAAS;;;;YACR,UAAA,MAAM,IAAI,OAAA,cAAc,CAAC,MAAM,CAAC,GAAA;;;;YAChC,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAK,CAAC,GAAA,EAC9B,CAAC;SACL,EAAC,CAAC;KACJ;;;;;IAEa,kCAAY;;;;IAA1B;;;;;;wBACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;;;wBAEL,qBAAM,IAAI,CAAC,QAAQ,EAAE,EAAA;;wBAA9B,MAAM,GAAG,SAAqB;wBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACvB,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,WAAW,EAAE;4BACpC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;yBACrB;wBACD,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,WAAW,EAAE;4BACpC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;yBACrB;wBACD,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,EAAE;4BACvC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;yBAC3B;wBACD,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,EAAE;4BAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC;yBACtC;wBACD,IAAI,CAAC,KAAK,sBAAG,MAAM,CAAC,IAAI,EAAY,CAAC;wBACrC,IAAI,CAAC,YAAY,sBAAG,MAAM,CAAC,WAAW,EAAwB,CAAC;wBAC/D,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;wBACvC,sBAAO,IAAI,CAAC,SAAS,EAAE,EAAC;;;wBAExB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;4BAChC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;4BACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,SAAA,EAAE,CAAC,CAAC;yBACzC;wBACD,sBAAO,IAAI,EAAC;;;;;KAEf;;;;;;;;;IAGD,2BAAK;;;;;;;IAAL,UAAM,WAAkB;QAAlB,4BAAA,EAAA,kBAAkB;QACtB,IAAI,WAAW,EAAE;YACf,mBAAA,IAAI,GAAC,WAAW,EAAE,CAAC;SACpB;QACD,mBAAA,IAAI,GAAC,KAAK,GAAG,EAAE,CAAC;QAChB,OAAO,mBAAA,IAAI,GAAC,EAAE,EAAE,CAAC;KAClB;;;;;;;;IAGD,iCAAW;;;;;;IAAX;QACE,OAAO,mBAAA,IAAI,GAAC,UAAU,EAAE;aACrB,UAAU,EAAE;aACZ,WAAW,EAAE;aACb,SAAS,EAAE,CAAC;KAChB;;;;;;;;;;;;;;;;;;IASD,0BAAI;;;;;;;;;;IAAJ,UAAK,EAAM,EAAE,WAAgB,EAAE,OAAuB;QAAjD,mBAAA,EAAA,MAAM;QACT,IAAI,EAAE,KAAK,CAAC,CAAC;YAAE,mBAAA,IAAI,GAAC,EAAE,GAAG,EAAE,CAAC;QAC5B,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;YACtC,mBAAA,IAAI,GAAC,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,gBAAQ,mBAAA,IAAI,GAAC,IAAI,CAAC,MAAM,EAAK,WAAW,IAAK,WAAW,CAAC;SACrG;QACD,mBAAA,IAAI,GAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;;;;IAMD,4BAAM;;;;;;;;IAAN,UAAO,WAAgB,EAAE,OAAuB;QAC9C,OAAO,mBAAA,IAAI,GAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;KAC5C;;;;;;;;;;;;;;;;;;;;;;;IAWD,2BAAK;;;;;;;;;;;;;IAAL,UAAM,WAAgB,EAAE,OAAuB;QAC7C,mBAAA,IAAI,GAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QACjD,0BAAO,IAAI,GAAC;KACb;;;;;IAEO,4BAAM;;;;IAAd;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;;YACvB,EAAE,sBAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAe;QAC/C,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,mBAAA,EAAE,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,OAAO;SACR;QACD,EAAE,CAAC,cAAc,EAAE,CAAC;;QAEpB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,uBAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,CAAC;KAC9D;;;;;IAED,6BAAO;;;;IAAP,UAAQ,IAAiB;QAAzB,iBAMC;QALC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;YAClF,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI;;;YAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,GAAA,EAAC,CAAC;SAC/C;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;;;;;;;IAED,4BAAM;;;;;;IAAN,UAAO,CAAQ,EAAE,IAAY,EAAE,GAAa;QAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,eAAe,EAAE,CAAC;;YACd,GAAG,GAAG,mBAAA,GAAG,CAAC,KAAK,GAAE,IAAI,EAAE,IAAI,CAAC;QAClC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SAC7D;QACD,OAAO,KAAK,CAAC;KACd;;;;;;IACO,sCAAgB;;;;;IAAxB,UAAyB,IAAY;QACnC,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK;YAAE,OAAO;QAC3C,IAAI,CAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,IAAI,GAAA,EAAC,CAAC,OAAO;;;;QAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,MAAM,GAAG,KAAK,IAAC,EAAC,CAAC;KACrE;;;;;;;IACD,+BAAS;;;;;;IAAT,UAAU,CAAQ,EAAE,IAAY,EAAE,KAAa;QAA/C,iBAoBC;QAnBC,IAAI,oBAAC,CAAC,CAAC,MAAM,IAAiB,QAAQ,KAAK,OAAO;YAAE,OAAO;QACrD,IAAA,SAAiD,EAA/C,kBAAM,EAAE,sCAAgB,EAAE,8BAAqB;QACvD,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,IAAI,gBAAgB,EAAE;YAC7D,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAChC,OAAO;SACR;QACD,EAAE,IAAI,CAAC,aAAa,CAAC;QACrB,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC;YAAE,OAAO;QACrC,UAAU;;;QAAC;;gBACH,IAAI,GAAG,EAAE,CAAC,GAAA,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE;YAC/B,IAAI,KAAI,CAAC,aAAa,KAAK,CAAC,EAAE;gBAC5B,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAChC;iBAAM;gBACL,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACnC;YACD,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACxB,GAAE,YAAY,CAAC,CAAC;KAClB;;;;;IAED,mCAAa;;;;IAAb,UAAc,IAAY;QACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACjC;;;;;;;;;;;;;;;;;;;;;IAUD,+BAAS;;;;;;;;;;;;IAAT,UAAU,IAAgC;QAA1C,iBAmBC;QAlBC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;aACf;YAED,oBAAC,IAAI;iBACF,GAAG;;;;YAAC,UAAA,IAAI,IAAI,OAAA,mBAAA,KAAI,GAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAA,EAAC;iBACrC,MAAM;;;;YAAC,UAAA,GAAG,IAAI,OAAA,GAAG,KAAK,CAAC,CAAC,GAAA,EAAC;iBACzB,OAAO;;;;YAAC,UAAA,GAAG,IAAI,OAAA,mBAAA,KAAI,GAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,GAAA,EAAC,CAAC;SAC9C;;QAED,mBAAA,IAAI,GAAC,QAAQ;aACV,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,IAAI,GAAA,EAAC;aAC5B,OAAO;;;;QAAC,UAAA,CAAC,IAAI,OAAA,mBAAA,KAAI,GAAC,KAAK,CAAC,OAAO;;;;;QAAC,UAAC,CAAC,EAAE,GAAG,IAAK,QAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,mBAAA,KAAI,GAAC,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAC,EAAC,GAAA,EAAC,CAAC;QAEpI,OAAO,mBAAA,IAAI,GAAC,EAAE,EAAE,CAAC;KAClB;;;;;;;;;;;;;;;;;;;;;;IAUD,4BAAM;;;;;;;;;;;;;IAAN,UAAO,KAAa,EAAE,IAAY;QAChC,mBAAA,IAAI,GAAC,KAAK,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACjE,mBAAA,IAAI,GAAC,KAAK,GAAG,mBAAA,IAAI,GAAC,UAAU,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,mBAAA,IAAI,GAAC,QAAQ,EAAE,MAAM,EAAE,mBAAA,IAAI,GAAC,KAAK,EAAE,YAAY,EAAE,mBAAA,IAAI,GAAC,YAAY,EAAE,CAAC,CAAC;QAC3H,mBAAA,IAAI,GAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;;IAMD,0BAAI;;;;;;;;;IAAJ,UAAK,GAAa,EAAE,GAAW,EAAE,KAAU;QACzC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,mBAAA,GAAG,CAAC,KAAK,GAAE,OAAO,GAAG,KAAK,CAAC;YAC3B,mBAAA,GAAG,CAAC,KAAK,GAAE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;SAChD;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO;;;;;YAAC,UAAC,IAAI,EAAE,KAAK,IAAK,QAAC,mBAAA,IAAI,CAAC,KAAK,GAAE,OAAO,GAAG,KAAK,KAAK,GAAG,GAAG,KAAK,GAAG,IAAI,IAAC,EAAC,CAAC;SAC9F;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;;YACd,GAAG,GAAG;YACV,KAAK,OAAA;YACL,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC;YAClF,MAAM,EAAE,GAAG;SACZ;QACD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC9B;;;;;;IAED,+BAAS;;;;;IAAT;QACE,mBAAA,IAAI,GAAC,QAAQ,CAAC,OAAO;;;;QAAC,UAAA,IAAI,IAAI,QAAC,mBAAA,IAAI,CAAC,KAAK,GAAE,OAAO,GAAG,IAAI,IAAC,EAAC,CAAC;QAC5D,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;IAMO,kCAAY;;;;;;;;IAApB,UAAqB,GAAa;QAChC,IAAI,CAAC,YAAY,CAAC,aAAa,oBAAC,GAAG,CAAC,MAAM,GAAE,CAAC;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;KAChC;;;;;IAED,oCAAc;;;;IAAd,UAAe,GAAa;QAC1B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;KACxB;;;;;;;IAED,kCAAY;;;;;;IAAZ,UAAa,GAAa,EAAE,IAAwB,EAAE,OAAgB;QACpE,mBAAA,mBAAA,GAAG,CAAC,MAAM,GAAE,KAAK,GAAE,OAAO;;;;QAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,OAAO,GAAG,KAAK,IAAC,EAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;IAED,kCAAY;;;;IAAZ,UAAa,GAAa;QACxB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;KACxB;;;;;;IAED,iCAAW;;;;;IAAX;QAAA,iBAGC;QAFC,mBAAA,IAAI,GAAC,QAAQ,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,GAAA,EAAC,CAAC,OAAO;;;;QAAC,UAAA,GAAG,IAAI,OAAA,mBAAA,KAAI,GAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;QACpH,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;;;IAOD,gCAAU;;;;;;;;;IAAV;QACE,OAAO,mBAAA,IAAI,GAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KAC9B;;;;;;;IAEO,+BAAS;;;;;;IAAjB;;YACQ,SAAS,GAAG,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,QAAQ,GAAA,EAAC;;YAC/C,WAAW,GAAG,SAAS,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,KAAK,IAAI,GAAA,EAAC;QAC7D,mBAAA,IAAI,GAAC,WAAW,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC;;YAC/E,YAAY,GAAG,SAAS,CAAC,KAAK;;;;QAAC,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,OAAO,GAAA,EAAC;QAC7D,mBAAA,IAAI,GAAC,cAAc,GAAG,CAAC,mBAAA,IAAI,GAAC,WAAW,IAAI,CAAC,YAAY,CAAC;QACzD,mBAAA,IAAI,GAAC,mBAAmB,GAAG,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM,KAAK,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,GAAA,EAAC,CAAC,MAAM,CAAC;QAC3F,OAAO,mBAAA,IAAI,GAAC,EAAE,EAAE,CAAC;KAClB;;;;;;;IAED,+BAAS;;;;;;IAAT,UAAU,OAAiB;QACzB,OAAO,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,mBAAA,IAAI,GAAC,WAAW,GAAG,OAAO,CAAC;QACtE,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,QAAQ,GAAA,EAAC,CAAC,OAAO;;;;QAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,OAAO,GAAG,OAAO,IAAC,EAAC,CAAC;QACxE,OAAO,mBAAA,IAAI,GAAC,SAAS,EAAE,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;;;;IAED,qCAAe;;;;;;;IAAf,UAAgB,CAAS,EAAE,KAAc;QACvC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;QAClB,OAAO,mBAAA,IAAI,GAAC,SAAS,EAAE,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;;;IAED,mCAAa;;;;;;IAAb,UAAc,GAAsB;QAClC,GAAG,CAAC,MAAM,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,CAAC;QACvB,OAAO,mBAAA,IAAI,GAAC,SAAS,EAAE,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;;IAED,kCAAY;;;;;IAAZ;;YACQ,GAAG,GAAG,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,GAAA,EAAC;QACrE,mBAAA,IAAI,GAAC,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACjC,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;;;IAOD,gCAAU;;;;;;;;;IAAV;QACE,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,OAAO;;;;QAAC,UAAA,IAAI,IAAI,QAAC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAC,EAAC,CAAC;QAC1E,mBAAA,IAAI,GAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/B,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,+BAAS;;;;;;;IAAT,UAAU,OAAgB,EAAE,IAAY;;QAEtC,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,QAAQ,GAAA,EAAC,CAAC,OAAO;;;;QAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,OAAO,GAAG,KAAK,IAAC,EAAC,CAAC;QACtE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,mBAAA,IAAI,GAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/B,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;;IAMD,+BAAS;;;;;;;;;IAAT,UAAU,MAAc,EAAE,GAAmB,EAAE,CAAS;;QAAxD,iBAqCC;;QAnCC,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;YACvC,CAAC,CAAC,eAAe,EAAE,CAAC;SACrB;QACD,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;YACzC,IAAA,iBAAK;;gBACP,GAAG,aAAK,sBAAC,mBAAA,KAAK,GAAE,UAAU,MAAI,MAAM,KAAE;YAC5C,oBAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,cAAc,CAAC,IACjE,mBAAA,KAAK,GAAE,SAAS,eACX,GAAG,GAAM,mBAAA,KAAK,GAAE,MAAM,IAAI,mBAAA,mBAAA,KAAK,GAAE,MAAM,GAAE,MAAM,CAAC,IACrD,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAClD;iBACE,IAAI,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,WAAW,GAAA,EAAC,CAAC;iBAC3C,SAAS;;;;YAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAA,EAAC,CAAC;YACxD,OAAO;SACR;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;YACxB,IAAA,mBAAM;;gBACR,GAAG,aAAK,sBAAC,mBAAA,MAAM,GAAE,UAAU,MAAI,MAAM,KAAE;YAC7C,IAAI,CAAC,YAAY;iBACd,MAAM,oBACL,mBAAA,MAAM,GAAE,KAAK,IACb,mBAAA,MAAM,GAAE,SAAS,eACZ,GAAG,GAAM,mBAAA,MAAM,GAAE,MAAM,IAAI,mBAAA,mBAAA,MAAM,GAAE,MAAM,GAAE,MAAM,CAAC,IACvD,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CACpD;iBACA,IAAI,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,WAAW,GAAA,EAAC,CAAC;iBAC3C,SAAS;;;;YAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAA,EAAC,CAAC;YACxD,OAAO;SACR;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;;gBACxB,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC;YAC9C,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;aAClE;YACD,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC/B;;;;;;;;IAEO,iCAAW;;;;;;;IAAnB,UAAoB,MAAc,EAAE,GAAmB,EAAE,KAAW;QAClE,IAAI,CAAC,GAAG,CAAC,KAAK;YAAE,OAAO;QACvB,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACjC,QAAQ,GAAG,CAAC,KAAK;gBACf,KAAK,MAAM;oBACT,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,MAAM;gBACR,KAAK,QAAQ;oBACX,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,MAAM;aACT;SACF;aAAM;YACL,OAAO,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACvC;KACF;;;;;;IAED,8BAAQ;;;;;IAAR,UAAS,MAAc,EAAE,GAAmB;QAC1C,OAAO,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;KAChF;;;;;;;IAED,gCAAU;;;;;;IAAV,UAAW,IAAsB,EAAE,IAAY,EAAE,GAAa;QAC5D,OAAO,IAAI,CAAC,MAAM;;;;QAAC,UAAA,GAAG;;gBACd,MAAM,GAAG,mBAAA,GAAG,CAAC,GAAG,GAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;;gBACjC,gBAAgB,GAAG,GAAG,CAAC,WAAW,KAAK,UAAU;YACvD,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;YACrB,GAAG,CAAC,SAAS,GAAG,CAAC,MAAM,IAAI,gBAAgB,CAAC;YAC5C,OAAO,MAAM,IAAI,gBAAgB,CAAC;SACnC,EAAC,CAAC;KACJ;;;;;;;;;;;;;;;;IAWD,4BAAM;;;;;;;;;IAAN,UAAO,OAAyB,EAAE,GAAqB;QAAvD,iBAQC;QAPC,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,SAAS;;;;QAAC,UAAC,GAAa;YAC/F,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,cAChB,GAAG,IACN,EAAE,EAAE,GAAG,EACP,EAAE,EAAE,KAAI,CAAC,QAAQ,IACjB;SAAA,EACH,CAAC;KACH;IAID,sBAAI,iDAAwB;;;;;;;QAA5B;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC;SAC/C;;;OAAA;;;;;IAED,kCAAY;;;;IAAZ,UAAa,OAA8B;QACzC,OAAO,cAAK,UAAU,EAAE,IAAI,IAAK,OAAO,CAAE,CAAC;QAC3C,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAChC;QACD,IAAI,OAAO,OAAO,CAAC,EAAE,KAAK,WAAW,EAAE;YACrC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;SACtB;QACD,IAAI,OAAO,OAAO,CAAC,EAAE,KAAK,WAAW,EAAE;YACrC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;SACtB;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,OAAO,CAAC,UAAU,KAAK,IAAI,EAAE;YAC/B,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,EAAE,EAAE,CAAC;YACV,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC9B;KACF;;;;;;;IAEO,oCAAc;;;;;;IAAtB;QACE,mBAAA,IAAI,GAAC,QAAQ,GAAG,mBAAA,IAAI,GAAC,YAAY,CAAC,OAAO,CAAC,mBAAA,IAAI,GAAC,OAAO,CAAC,CAAC;QACxD,0BAAO,IAAI,GAAC;KACb;;;;;IAEO,8BAAQ;;;;IAAhB;;QACQ,IAAA,mBAAyC,EAAvC,cAAI,EAAE,kCAAiC;QAC/C,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ;YAClD,GAAC,IAAI,IAAG,IAAI;YACZ,GAAC,WAAS,IAAI,CAAC,IAAI,CAAC,SAAW,IAAG,IAAI,CAAC,IAAI,CAAC,SAAS;YACrD,GAAC,eAAa,IAAM,IAAG,IAAI;YAC3B,GAAC,sBAAoB,cAAgB,IAAG,IAAI,KAAK,QAAQ;YACzD,GAAC,eAAe,IAAG,IAAI,CAAC,UAAU;YAClC,GAAC,mCAAmC,IAAG,IAAI,CAAC,0BAA0B;gBACtE,CAAC;KACJ;;;;IAED,qCAAe;;;IAAf;QACE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnD;;;;;IAED,iCAAW;;;;IAAX,UAAY,OAA6D;QACvE,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;;YACK,UAAU,GAAG,OAAO,CAAC,IAAI;QAC/B,IAAI,UAAU,IAAI,UAAU,CAAC,YAAY,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;YAC3F,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;SAC9C;QACD,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;;;;IAED,iCAAW;;;IAAX;QACU,IAAA,gCAAY;QACpB,YAAY,CAAC,IAAI,EAAE,CAAC;QACpB,YAAY,CAAC,QAAQ,EAAE,CAAC;KACzB;;gBA1uBF,SAAS,SAAC;oBACT,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,6vYAAqC;oBACrC,SAAS,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC;oBAC/G,mBAAmB,EAAE,KAAK;oBAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;;gDA6JI,QAAQ,YAAI,MAAM,SAAC,gBAAgB;gBAlOtC,iBAAiB;gBAqCV,QAAQ;gBApBR,MAAM;gBAfb,UAAU;gBAQV,SAAS;gBAyBF,QAAQ;gBATf,WAAW;gBAFX,YAAY;gDAmNT,MAAM,SAAC,QAAQ;gBA1MX,cAAc;gBACd,YAAY;gBAXnB,kBAAkB;;;2BA6DjB,SAAS,SAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;sBAGpC,KAAK;sBAQL,KAAK;uBAYL,KAAK;4BAkBL,KAAK;4BAaL,KAAK;uBAaL,KAAK;0BAGL,KAAK;qBACL,KAAK;qBACL,KAAK;wBACL,KAAK;0BAIL,KAAK;+BAEL,KAAK;mCACL,KAAK;2BAEL,KAAK;uBAEL,KAAK;yBAEL,KAAK;gCACL,KAAK;kCACL,KAAK;qCACL,KAAK;qCACL,KAAK;6BAML,KAAK;+BAEL,KAAK;yBAGL,KAAK;yBAEL,KAAK;6BAEL,KAAK;uBAEL,KAAK;mCACL,KAAK;kCACL,KAAK;yBAEL,KAAK;2BACL,KAAK;8BACL,KAAK;+BAEL,KAAK;6BACL,KAAK;6CACL,KAAK;wBAEL,MAAM;yBAIN,MAAM;;IApDiBC;QAAd,WAAW,EAAE;;2CAAS;IACRA;QAAd,WAAW,EAAE;;2CAAQ;IACPA;QAAd,WAAW,EAAE;;8CAAW;IAMVA;QAAd,WAAW,EAAE;;qDAAkB;IAGhBA;QAAf,YAAY,EAAE;;iDAAkB;IAKjBA;QAAf,YAAY,EAAE;;sDAAuB;IACvBA;QAAd,WAAW,EAAE;;wDAAsB;IACrBA;QAAd,WAAW,EAAE;;2DAA0B;IACzBA;QAAd,WAAW,EAAE;;2DAA0B;IAkBxBA;QAAf,YAAY,EAAE;;yDAA0B;IACzBA;QAAf,YAAY,EAAE;;wDAAyB;IAMzBA;QAAd,WAAW,EAAE;;qDAAoB;IAClBA;QAAf,YAAY,EAAE;;mDAA4B;IAC3BA;QAAf,YAAY,EAAE;;mEAAqC;IA+lB/D,kBAAC;CA3uBD,IA2uBC;;;;;;IAjuBC,mCAA2C;;;;;IAC3C,4BAA4B;;;;;IAC5B,+BAAsB;;;;;IACtB,gCAA0B;;;;;IAC1B,8BAA0B;;IAC1B,6BAAwB;;IACxB,4BAAqB;;IACrB,mCAAwC;;IACxC,oCAAqB;;IACrB,kCAAoB;;IACpB,0CAA4B;;IAC5B,qCAAuB;;IACvB,+BAA0B;;IAC1B,+BAAkE;;IAmElE,2BAAwD;;;;;IACxD,2BAAoB;;;;;IACpB,2BAAoB;;IACpB,8BAAkC;;IAClC,yBAAgC;;IAChC,yBAA+B;;IAC/B,4BAAkC;;;;;IAClC,4BAAsB;;IACtB,+BAAiB;;;;;IAEjB,8BAAwC;;;;;IAExC,mCAAyC;;IACzC,uCAA6C;;;;;IAE7C,+BAA0C;;;;;IAE1C,2BAA8C;;;;;IAE9C,6BAA4C;;IAC5C,oCAA+C;;IAC/C,sCAA6C;;IAC7C,yCAAiD;;IACjD,yCAAiD;;;;;;;IAMjD,iCAAgD;;;;;IAChD,iCAAuC;;IACvC,mCAAsC;;;;;IACtC,iCAAgC;;;;;IAEhC,6BAA4C;;;;;IAE5C,6BAA4C;;;;;IAE5C,iCAAuD;;;;;IAEvD,2BAAiD;;IACjD,uCAAkD;;IAClD,sCAAiD;;;;;IAEjD,6BAAkE;;IAClE,+BAA8C;;IAC9C,kCAA+B;;;;;IAE/B,mCAA2C;;IAC3C,iCAAoD;;IACpD,iDAA6D;;;;;IAE7D,4BAAuD;;;;;IAIvD,6BAAyD;;;;;IAgBzD,oCAA0B;;;;;IAIxB,0BAA8B;;;;;IAC9B,0BAAqB;;;;;IACrB,6BAAsB;;;;;IACtB,yBAAsB;;;;;IACtB,+BAA2B;;;;;IAC3B,gCAA2B;;;;;IAC3B,kCAAgC;;;;;IAChC,mCAAkC;;;;;IAClC,0BAAkC;;;;;IAClC,mCAAoC;;;;;IACpC,iCAAgC;;;;;IAChC,gCAAqC;;;;;;;;;IC5NnC,UAAU,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC;AAEhD;IAAA;KAuBwB;;gBAvBvB,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,eAAe;wBACf,cAAc;wBACd,kBAAkB;wBAClB,aAAa;wBACb,YAAY;wBACZ,aAAa;wBACb,gBAAgB;wBAChB,eAAe;wBACf,gBAAgB;wBAChB,YAAY;wBACZ,aAAa;wBACb,WAAW;wBACX,aAAa;wBACb,eAAe;qBAChB;oBACD,YAAY,WAAM,UAAU,CAAC;oBAC7B,OAAO,WAAM,UAAU,CAAC;iBACzB;;IACsB,eAAC;CAvBxB;;;;;;;;;;;;;;;;"}