{"version":3,"file":"ellipsis.js.map","sources":["ng://@delon/abc/ellipsis/ellipsis.component.ts","ng://@delon/abc/ellipsis/ellipsis.module.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n} from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Component({\n  selector: 'ellipsis',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.ellipsis]': 'true' },\n})\nexport class EllipsisComponent {\n  /** å¨æç§è¡æ°æªåä¸æå¤§çè¡æ°ï¼è¶è¿åæªåçç¥ */\n  @Input()\n  @InputNumber()\n  @HostBinding('style.-webkit-line-clamp')\n  lines = 3;\n\n  constructor(el: ElementRef, render: Renderer2) {\n    render.setStyle(el.nativeElement, '-webkit-box-orient', 'vertical');\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { EllipsisComponent } from './ellipsis.component';\n\nconst COMPONENTS = [EllipsisComponent];\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class EllipsisModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: EllipsisModule, providers: [] };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;IAqBE,YAAY,EAAc,EAAE,MAAiB;;;;qBAFrC,CAAC;QAGP,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,oBAAoB,EAAE,UAAU,CAAC,CAAC;KACrE;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,2BAA2B;gBACrC,IAAI,EAAE,EAAE,kBAAkB,EAAE,MAAM,EAAE;aACrC;;;;YARC,UAAU;YADV,SAAS;;;oBAYR,KAAK,YAEL,WAAW,SAAC,0BAA0B;;;IADtC,WAAW,EAAE;;;;;;;;ACjBhB;AAMA,MAAM,UAAU,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAOvC;;;;IACE,OAAO,OAAO;QACZ,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KACpD;;;YARF,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;gBACxC,YAAY,EAAE,CAAC,GAAG,UAAU,CAAC;gBAC7B,OAAO,EAAE,CAAC,GAAG,UAAU,CAAC;aACzB;;;;;;;;;;;;;;;"}
